<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="3.1.4_SunnyDay-State_Transitions_SOAP" resourceRoot="${projectDir}" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" id="c69d17d9-8a76-4230-ac09-05b6029fb035" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="B2 Sunny Day-SOAP state transitions"/>
  <con:entry key="Password" value=""/>
  <con:entry key="TestRunner Path" value="C:\Program Files\SmartBear\SoapUI-5.1.3\bin"/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Select Report Type" value=""/>
</xml-fragment>]]></con:setting>
    <con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.LoadTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="B2 Sunny Day-SOAP state transitions"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="TestRunner Path" value="/home/hemasundar/SmartBear/SoapUI-5.1.3/bin"/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="LoadTest" value="&lt;all>"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Print Report Statistics" value="false"/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="ThreadCount" value=""/>
  <con:entry key="Limit" value=""/>
</xml-fragment>]]></con:setting>
  </con:settings>
  <con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="CompWebserviceSoap11" type="wsdl" bindingName="{http://coin.nl/ws/definitions}CompWebserviceSoap11" soapVersion="1_1" anonymous="optional" definition="${#Project#SoapUrl}" id="8a537fab-845e-48f0-a37f-a40e9d723dce" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings>
      <con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.tcpmon.TcpMonAction@values-local">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Local Port" value=""/>
  &lt;con:entry key="Add local endpoint" value="false"/>
  &lt;con:entry key="Endpoint" value=""/>
&lt;/xml-fragment></con:setting>
    </con:settings>
    <con:definitionCache type="TEXT" rootPart="http://192.168.100.28:8080/compv3/compmessage.wsdl">
      <con:part>
        <con:url>http://192.168.100.28:8080/compv3/compmessage.wsdl</con:url>
        <con:content><![CDATA[<wsdl:definitions targetNamespace="http://coin.nl/ws/definitions" xmlns:sch="http://coin.nl/ws/schema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://coin.nl/ws/definitions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xsd:schema elementFormDefault="qualified" targetNamespace="http://coin.nl/ws/schema" xmlns:ws-msg="http://coin.nl/ws/schema" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <!--Simple Types-->
      <xsd:simpleType name="TransactionId">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="60"/>
        </xsd:restriction>
      </xsd:simpleType>
      <!--Grouped Elements-->
      <xsd:group name="Message">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element name="Text" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Mandatory field containing the message text.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:group>
      <!--Complex Types-->
      <xsd:complexType name="Message">
        <xsd:sequence>
          <xsd:group ref="ws-msg:Message"/>
        </xsd:sequence>
      </xsd:complexType>
      <!--Request - Response Interface(s)-->
      <xsd:element name="SendMessagesRequest">
        <xsd:annotation>
          <xsd:appinfo>Request interface for SendMessages.</xsd:appinfo>
          <xsd:documentation>Generic interface for sending one or more (xml
						based) messages.
						When successfully received, the receiver of the
						request will respond
						with a TransactionId,
						uniquely identifying
						reception of the request and all the messages in it.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Sender" type="xsd:string"/>
            <xsd:element name="Messages">
              <xsd:complexType>
                <xsd:sequence maxOccurs="unbounded" minOccurs="1">
                  <xsd:element name="Message" type="ws-msg:Message"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="SendMessagesResponse">
        <xsd:annotation>
          <xsd:appinfo>Response interface for SendMessages.</xsd:appinfo>
          <xsd:documentation/>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="TransactionId" type="ws-msg:TransactionId"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="SendMessagesRequest">
    <wsdl:part element="sch:SendMessagesRequest" name="SendMessagesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SendMessagesResponse">
    <wsdl:part element="sch:SendMessagesResponse" name="SendMessagesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="CompWebservice">
    <wsdl:operation name="SendMessages">
      <wsdl:input message="tns:SendMessagesRequest" name="SendMessagesRequest"></wsdl:input>
      <wsdl:output message="tns:SendMessagesResponse" name="SendMessagesResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CompWebserviceSoap11" type="tns:CompWebservice">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="SendMessages">
      <soap:operation soapAction="http://coin.nl/SendMessages"/>
      <wsdl:input name="SendMessagesRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="SendMessagesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CompWebserviceService">
    <wsdl:port binding="tns:CompWebserviceSoap11" name="CompWebserviceSoap11">
      <soap:address location="http://192.168.100.28:8080/compv3/MessageService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content>
        <con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
      </con:part>
    </con:definitionCache>
    <con:endpoints>
      <con:endpoint>${#Project#SoapUrl}</con:endpoint>
    </con:endpoints>
    <con:operation isOneWay="false" action="http://coin.nl/SendMessages" name="SendMessages" bindingOperationName="SendMessages" type="Request-Response" outputName="SendMessagesResponse" inputName="SendMessagesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="8c3829e4-5325-42d3-82e4-242fad1e423c">
      <con:settings/>
      <con:call name="Contract Termination Request" outgoingWss="" incomingWss="" id="8915428a-63eb-41b1-989c-749c2e2f0cce" wssPasswordType="PasswordText">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${#Project#SoapUrl}</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>TP10</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<over:message xmlns:over="http://www.coin.nl/Overstappen_MESSAGES">
<over:header>
<over:receiver>
<!--Optional:-->
<over:networkoperator>TP14</over:networkoperator>
<!--Optional:-->
<over:serviceprovider>TP14</over:serviceprovider>
</over:receiver>
<over:sender>
<!--Optional:-->
<over:networkoperator>TP10</over:networkoperator>
<!--Optional:-->
<over:serviceprovider>TP10</over:serviceprovider>
</over:sender>
<!--Optional:-->
<over:messageid>TP10-TP14-TESTING-01</over:messageid>
<over:timestamp></over:timestamp>
</over:header>
<over:body>
<over:contractterminationrequest>
<over:v1>
<over:dossierid>TP10-TP14-TESTING-01</over:dossierid>
<!--Optional:-->
<over:recipientserviceprovider>TP10</over:recipientserviceprovider>
<!--Optional:-->
<over:recipientnetworkoperator>TP10</over:recipientnetworkoperator>
<!--Optional:-->
<over:donornetworkoperator>TP14</over:donornetworkoperator>
<!--Optional:-->
<over:donorserviceprovider>TP14</over:donorserviceprovider>
<over:customerinfo>
<!--Optional:-->
<over:initials>Ms</over:initials>
<!--Optional:-->
<over:prefix>Priyanka</over:prefix>
<!--Optional:-->
<over:lastname>Taneja</over:lastname>
<!--Optional:-->
<over:telephonecontact>0886086375</over:telephonecontact>
<!--Optional:-->
<over:emailaddresscontact>f@xebia.com</over:emailaddresscontact>
<!--Optional:-->
<over:companyname>XEBIA PVT LTD</over:companyname>
<!--Optional:-->
<over:customerid>ABCDEFGH1234</over:customerid>
<!--Optional:-->
<over:contractid>SOAP3EMAIL</over:contractid>
<over:contractaddress>
<!--Optional:-->
<over:address>HARINAGAR</over:address>
<over:housenr>123</over:housenr>
<!--Optional:-->
<over:housenr_ext>123</over:housenr_ext>
<over:postcode>1234AS</over:postcode>
<!--Optional:-->
<over:city>DELHI</over:city>
<!--Optional:-->
<over:country>IND</over:country>
</over:contractaddress>
<over:connectionaddress>
<!--Optional:-->
<over:address>HARINAGAR</over:address>
<over:housenr>123</over:housenr>
<!--Optional:-->
<over:housenr_ext>123</over:housenr_ext>
<over:postcode>1234AS</over:postcode>
<!--Optional:-->
<over:city>DELHI</over:city>
<!--Optional:-->
<over:country>IND</over:country>
</over:connectionaddress>
</over:customerinfo>
<over:wishdatetime>2014-01-14</over:wishdatetime>
<!--Optional:-->
<over:note>TEST</over:note>
</over:v1>
</over:contractterminationrequest>
</over:body>
</over:message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:username>COINTP10</con:username>
          <con:password>COINTP10</con:password>
          <con:domain xsi:nil="true"/>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:preemptive>true</con:preemptive>
          <con:authType>Preemptive</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="Contract Termination Request Answer" outgoingWss="" incomingWss="" id="73af3a6a-ca5e-4560-819c-8035caf9acee">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${#Project#SoapUrl}</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>KPN</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
  <header>
    <receiver>
      <networkoperator>ZIGGO</networkoperator>
      <serviceprovider>ZIGGO</serviceprovider>
    </receiver>
    <sender>
      <networkoperator>KPN</networkoperator>
      <serviceprovider>KPN</serviceprovider>
    </sender>
    <messageid>ZIGGO-KPN-GUI2SOAP1-01</messageid>
    <timestamp>2014-01-08T12:56:45</timestamp>
  </header>
  <body>
    <contractterminationrequestanswer>
      <v1>
        <dossierid>ZIGGO-KPN-GUI2SOAP1-01</dossierid>
        <blocking>N</blocking>
        <wishdatetime>2014-01-17</wishdatetime>
        <blockingcode>0</blockingcode>
        <note>TEST-ANSWER</note>
      </v1>
    </contractterminationrequestanswer>
  </body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:username>Bert</con:username>
          <con:password>Ernie</con:password>
          <con:domain xsi:nil="true"/>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:preemptive>true</con:preemptive>
          <con:authType>Preemptive</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="Multiple Contract Termination Requests" outgoingWss="" incomingWss="" id="ad0bd36e-cbfe-4f7c-bf73-cd36950c1291" wssPasswordType="PasswordText">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${#Project#SoapUrl}</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>CRY</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<networkoperator>FARI</networkoperator>
<serviceprovider>FARI</serviceprovider>
</receiver>
<sender>
<networkoperator>CRY</networkoperator>
<serviceprovider>CRY</serviceprovider>
</sender>
<messageid>CRY-FARI-CryFari01-01</messageid>
<timestamp>2014-01-22T13:40:45</timestamp>
</header>
<body>
<contractterminationrequest>
<v1>
<dossierid>CRY-FARI-CryFari01-01</dossierid>
<recipientserviceprovider>CRY</recipientserviceprovider>
<recipientnetworkoperator>CRY</recipientnetworkoperator>
<donornetworkoperator>FARI</donornetworkoperator>
<donorserviceprovider>FARI</donorserviceprovider>
<customerinfo>
<initials>Ms</initials>
<prefix>Priyanka</prefix>
<lastname>Tanjea</lastname>
<telephonecontact>0886086375</telephonecontact>
<emailaddresscontact>f@xebia.com</emailaddresscontact>
<companyname>XEBIA PVT LTD</companyname>
<customerid>ABCDEFGH1234</customerid>
<contractid>CryFari01</contractid>
<contractaddress>
<address>HARINAGAR</address>
<housenr>123</housenr>
<housenr_ext>123</housenr_ext>
<postcode>1234AS</postcode>
<city>DELHI</city>
<country>IND</country>
</contractaddress>
<connectionaddress>
<address>HARINAGAR</address>
<housenr>123</housenr>
<housenr_ext>123</housenr_ext>
<postcode>1234AS</postcode>
<city>DELHI</city>
<country>IND</country>
</connectionaddress>
</customerinfo>
<wishdatetime>2014-02-10</wishdatetime>
<note></note>
</v1>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<networkoperator>UPC</networkoperator>
<serviceprovider>UPC</serviceprovider>
</receiver>
<sender>
<networkoperator>CRY</networkoperator>
<serviceprovider>CRY</serviceprovider>
</sender>
<messageid>CRY-UPC-CryUpc01-01</messageid>
<timestamp>2014-01-22T13:40:45</timestamp>
</header>
<body>
<contractterminationrequest>
<v1>
<dossierid>CRY-UPC-CryUpc01-01</dossierid>
<recipientserviceprovider>CRY</recipientserviceprovider>
<recipientnetworkoperator>CRY</recipientnetworkoperator>
<donornetworkoperator>UPC</donornetworkoperator>
<donorserviceprovider>UPC</donorserviceprovider>
<customerinfo>
<initials>Ms</initials>
<prefix>Priyanka</prefix>
<lastname>Tanjea</lastname>
<telephonecontact>0886086375</telephonecontact>
<emailaddresscontact>f@xebia.com</emailaddresscontact>
<companyname>XEBIA PVT LTD</companyname>
<customerid>ABCDEFGH1234</customerid>
<contractid>CryUpc01</contractid>
<contractaddress>
<address>HARINAGAR</address>
<housenr>123</housenr>
<housenr_ext>123</housenr_ext>
<postcode>1234AS</postcode>
<city>DELHI</city>
<country>IND</country>
</contractaddress>
<connectionaddress>
<address>HARINAGAR</address>
<housenr>123</housenr>
<housenr_ext>123</housenr_ext>
<postcode>1234AS</postcode>
<city>DELHI</city>
<country>IND</country>
</connectionaddress>
</customerinfo>
<wishdatetime>2014-02-11</wishdatetime>
<note></note>
</v1>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<networkoperator>TEL2</networkoperator>
<serviceprovider>TEL2</serviceprovider>
</receiver>
<sender>
<networkoperator>CRY</networkoperator>
<serviceprovider>CRY</serviceprovider>
</sender>
<messageid>CRY-TEL2-CryTel201-01</messageid>
<timestamp>2014-01-22T13:40:45</timestamp>
</header>
<body>
<contractterminationrequest>
<v1>
<dossierid>CRY-TEL2-CryTel201-01</dossierid>
<recipientserviceprovider>CRY</recipientserviceprovider>
<recipientnetworkoperator>CRY</recipientnetworkoperator>
<donornetworkoperator>TEL2</donornetworkoperator>
<donorserviceprovider>TEL2</donorserviceprovider>
<customerinfo>
<initials>Ms</initials>
<prefix>Priyanka</prefix>
<lastname>Tanjea</lastname>
<telephonecontact>0886086375</telephonecontact>
<emailaddresscontact>f@xebia.com</emailaddresscontact>
<companyname>XEBIA PVT LTD</companyname>
<customerid>ABCDEFGH1234</customerid>
<contractid>CryTel201</contractid>
<contractaddress>
<address>HARINAGAR</address>
<housenr>123</housenr>
<housenr_ext>123</housenr_ext>
<postcode>1234AS</postcode>
<city>DELHI</city>
<country>IND</country>
</contractaddress>
<connectionaddress>
<address>HARINAGAR</address>
<housenr>123</housenr>
<housenr_ext>123</housenr_ext>
<postcode>1234AS</postcode>
<city>DELHI</city>
<country>IND</country>
</connectionaddress>
</customerinfo>
<wishdatetime>2014-02-12</wishdatetime>
<note></note>
</v1>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:username>Bert</con:username>
          <con:password>Ernie</con:password>
          <con:domain xsi:nil="true"/>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:preemptive>true</con:preemptive>
          <con:authType>Preemptive</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="Contract Termination Performed" id="6e6b212c-9d53-4340-bc3a-cadf2fccdbe8" outgoingWss="" incomingWss="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${#Project#SoapUrl}</con:endpoint>
        <con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header/>
   <SOAP-ENV:Body>
      <SendMessagesRequest xmlns="http://coin.nl/ws/schema">
         <Sender>CRY</Sender>
         <Messages>
            <Message>
               <Text><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
   <header>
      <receiver>
                  <networkoperator>FARI</networkoperator>
         	              <serviceprovider>FARI</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>CRY</networkoperator>
         		          <serviceprovider>CRY</serviceprovider>
               </sender>
            <messageid>CRY-FARI-EndFlow01-01</messageid>
            <timestamp>2014-01-23T14:11:18</timestamp>
   </header>
   <body>
      <contractterminationperformed>
         <v1>
         <dossierid>CRY-FARI-EndFlow01-01</dossierid>
                        <recipientserviceprovider>CRY</recipientserviceprovider>
                                    <recipientnetworkoperator>CRY</recipientnetworkoperator>
            			            <donornetworkoperator>FARI</donornetworkoperator>
            			            <donorserviceprovider>FARI</donorserviceprovider>
                        <actualdatetime>2014-01-23T14:11:18</actualdatetime>
                        <note>Endflow_Performed</note>
                     </v1>
      </contractterminationperformed>
   </body>
</message>]]]]>><![CDATA[</Text>
            </Message>
         </Messages>
      </SendMessagesRequest>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request>
        <con:credentials>
          <con:username>Bert</con:username>
          <con:password>Ernie</con:password>
          <con:domain xsi:nil="true"/>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="Contract Termination Change" id="b4f976a0-cc99-45df-a7f1-d2aa1fa00928" outgoingWss="" incomingWss="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${#Project#SoapUrl}</con:endpoint>
        <con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header/>
   <SOAP-ENV:Body>
      <SendMessagesRequest xmlns="http://coin.nl/ws/schema">
         <Sender>CRY</Sender>
         <Messages>
            <Message>
               <Text><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
   <header>
      <receiver>
                  <networkoperator>FARI</networkoperator>
         	              <serviceprovider>FARI</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>CRY</networkoperator>
         		          <serviceprovider>CRY</serviceprovider>
               </sender>
            <messageid>CRY-FARI-EndFlow01-01</messageid>
            <timestamp>2014-01-23T13:19:15</timestamp>
   </header>
   <body>
      <change>
         <v1>
         	<dossierid>CRY-FARI-EndFlow01-01</dossierid>
            <wishdatetime>2014-02-18T15:00:34</wishdatetime>
                        <note>endflow</note>
                     </v1>
      </change>
   </body>
</message>]]]]>><![CDATA[</Text>
            </Message>
         </Messages>
      </SendMessagesRequest>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request>
        <con:credentials>
          <con:username>Bert</con:username>
          <con:password>Ernie</con:password>
          <con:domain xsi:nil="true"/>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="Contract Termination Change Answer" id="7ecf7d3b-76e3-4e36-a0a6-bed12f91e92e" outgoingWss="" incomingWss="" timeout="" wssPasswordType="PasswordText">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${#Project#SoapUrl}</con:endpoint>
        <con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header/>
   <SOAP-ENV:Body>
      <SendMessagesRequest xmlns="http://coin.nl/ws/schema">
         <Sender>TP10</Sender>
         <Messages>
            <Message>
               <Text><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
   <header>
      <receiver>
                  <networkoperator>TP14</networkoperator>
         	              <serviceprovider>TP14</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>TP10</networkoperator>
         		          <serviceprovider>TP10</serviceprovider>
               </sender>
            <messageid>TP14-TP10-ALSBVNZRI-06</messageid>
            <timestamp>${=String.format('%tFT%<tT', new Date())}</timestamp>
   </header>
   <body>
      <changeanswer>
         <v2>
         	<dossierid>TP14-TP10-ALSBVNZRI-01</dossierid>
         	<blocking>N</blocking>
         	            <wishdatetime>2016-02-27T13:32:16</wishdatetime>
                      <proposeddatetime>2016-02-27T13:32:16</proposeddatetime>
                      <note>TESTWITHCHTCHAOK AFter blocking</note>
                     </v2>
      </changeanswer>
   </body>
</message>]]]]>><![CDATA[</Text>
            </Message>
         </Messages>
      </SendMessagesRequest>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request>
        <con:credentials>
          <con:username>COINTP10</con:username>
          <con:password>COINTP10</con:password>
          <con:domain xsi:nil="true"/>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="Contract Termination Cancel" id="fed57306-8fb5-4471-85e0-47e2f5a6d1d8" outgoingWss="" incomingWss="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${#Project#SoapUrl}</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>ZIGGO</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>KPN</networkoperator>
<!--Optional:-->
<serviceprovider>KPN</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>ZIGGO</networkoperator>
<!--Optional:-->
<serviceprovider>ZIGGO</serviceprovider>
</sender>
<!--Optional:-->
<messageid>ZIGGO-KPN-EndFlow01-01</messageid>
<timestamp>2014-01-28T14:30:00</timestamp>
</header>
<body>
    <cancel>
      <v1>
        <dossierid>ZIGGO-KPN-EndFlow01-01</dossierid>
        <note>Endflow_Cancel</note>
      </v1>
    </cancel>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:username>Bert</con:username>
          <con:password>Ernie</con:password>
          <con:domain xsi:nil="true"/>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
    </con:operation>
  </con:interface>
  <con:testSuite name="3.1.4_SunnyDay-State_Transitions_SOAP" id="72a5c2fc-02a8-4c9b-a301-976f570a43f3">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="B2.1. CTR-CTRA blocking 99" searchProperties="true" id="ee1fc810-b8d9-4a33-8d1f-431849d5897e" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="4d0ce4ad-3dd8-4c2d-a80c-b329436348c7">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>2-${#TestCase#contractID}</value>
 </validationblock>
<note>Sunny day-sent ${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenr. ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table" id="73f05d93-c5ea-471b-9bfb-7775185c1309">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="17e7fe06-93ff-4c4e-b4e9-b7b2517e2e48" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b62452ca-dfd2-4c3f-b266-f9d37cfb2840" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9ebefea7-c773-423b-a919-0daf714c5bcf" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="f65e9a21-33c6-466b-8eaa-573fff9e2eb7">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="6bc4cbf2-a4f9-4b27-8e18-75ebddf633ab">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="49c32f69-6ea2-4226-812e-d479e12861c6" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="bb23dea4-afcd-4843-a20b-bb71d4f9d160" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="dc0ffcb4-ca1d-45b4-a885-e7076897976c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="26a10fc7-0032-44c7-a379-d3aa026bff83" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f4a27154-e936-4669-a46d-f9db356f90e3" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="bf0341ac-ab83-41f0-be57-ef73826bca51">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="d374637e-62fe-4bb5-8c0a-3a231b564dad">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="953db308-80ec-419d-be7a-475b1e81739a" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="3b874bf0-ae4a-42cb-aa39-ee73fb826858" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="18be5a7d-4074-402c-a145-6796e0e7d5b7">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="6a23a81f-216d-498d-b851-7ebb2443431d">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_Send" id="794d94da-363d-4fe9-b8e4-37a462b82573">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="3e75a587-c1ab-4e2a-9dba-9cd83fe78777" name="Script: SaveST_SXM_ID" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ST_SXM_ID[1]", "stSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="fea8652c-c585-4f92-88f7-c955e41bfc22">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="98267bf6-cb04-4f93-9c2d-7ee0bb9d9a14" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b14926b0-e169-4aad-a631-578cd144150a" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTR" id="225375b3-2c1e-4c19-b447-7cce622c5004">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="aa965601-d51a-45ca-b0fd-91b0fbd0603b">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="b18803a2-e046-44c8-b0cf-52c67498b631">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="0bf1e6ff-f873-4c28-bcf8-73e6c9620661">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4e4435dd-077d-4bf1-a0da-0ef46339bb12" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-blocking" id="40d90738-3bf7-4b4f-82f1-0202b9066558">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>Y</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>99</blockingcode>
<note>Request Answer blocking ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="c5c400e0-bc35-4394-ab95-6285d220323d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0356d58f-a788-43b9-8468-086e0f469202" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="17bf4347-b64b-4015-9ed9-477250cf70ea" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d4a3e732-c203-402f-a9c1-c5bc45646dd7" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="349dbef7-b4d6-421f-923a-2816fd3116fe">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="68df0448-75f9-4aa3-a805-c3d33d3d47d4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="728c8f0d-fe3f-49a9-9a6f-ca76c2c9df05" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a75da039-9249-498f-9b41-93129e60f07f" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="e8c25c2c-45f9-4c94-8605-9ef428d218b2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d846b0c9-73ca-4f89-9942-77a00f652a0d" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="09d9b0b1-f211-4842-8fa1-0dfaa3f94dca" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA" id="1b250c24-c8f4-4b05-a1ca-6202502a7d43">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Blocked</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="0843ddd1-d8ec-414e-ab92-90f93efc2b3b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="XQuery Match" id="40cc6fa1-0d78-43c5-a10b-f043ddf625c6" name="XQuery Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1b93e756-be7f-4fd9-8795-d691c5d6f378" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0a36bc57-8660-42e2-961a-cf23ada6a73d" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="16d5edf0-eb3a-4690-8c86-bc8011967f94" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTRA" id="c5a270e8-e6d5-43d9-aeb4-a957cb9dad89">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="B2.2. CTR-CTRA ok-CTP buffering" searchProperties="true" id="3c966727-bb71-4701-9929-1a046906f0b0" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="952d2a8d-4357-4226-b03d-82572f13fc04">
        <con:settings/>
        <con:config>
          <delay>1000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTR-Sunny Day" id="10f391d3-6cee-4e18-9a5f-c8839535366f">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>2-${#TestCase#contractID}</value>
 </validationblock>
<note>Sunny day-sent ${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenr. ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table" id="d178c09c-76aa-4f91-954d-06116ef5c6d1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert Results" id="cce0fb3e-4b85-4ba4-a7be-1dfa2e40d69e">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="25403817-abc1-4578-9f80-7b8821bd2725" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="535978c2-4eb2-43c3-8197-e91f5446071f" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8eb577b6-888a-4fe7-9590-d2854f0d170b" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4cd2c5aa-8f8b-4c3f-9c6d-8318d7249eaf" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="58c175cd-b570-4dd7-8dc2-36fab7857073">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="7c94ff73-517c-4f60-8974-06c8d12b57bc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="6f5c48fb-8cde-4644-a4bb-7eb10db16d15">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="93200de3-311a-45e4-9354-8786e5f8cb4b" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="a71e9107-d908-4e98-8bdc-c33775015ef6" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="5565afad-0ad3-4405-99a9-9b1144414da7" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="1e3b468f-6251-4e27-9f66-140bae66ffa3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="768f42a8-eed1-4db7-b90c-efef24784331" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1b0fe0d0-501c-49d0-a430-8f665603c79c" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="0973c9dd-a577-4655-b149-c90adfdab539">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7c84a325-d253-4113-a068-3d9a1058a3a9" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="e1ba4b21-fe12-447a-beb8-1657df95a896">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f73e00f1-8527-4a87-b868-01995c6d5fbc" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9ba7a806-c63c-4998-8db1-ff3153c65f13" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0c0064a9-23a9-429b-9a75-5de1640d572e" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="c5738a4d-97eb-4411-9cb4-603ca58392ab">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="da052813-04a0-44bf-a96e-eaa9eff51ecd">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_Send" id="c36e7503-4609-4eb6-b323-13e4a858a43a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' 
and st_receiver='${#TestSuite#donor}' 
and st_send_received='SEND' 
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and id>${#TestCase#Id}</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="40fa4a9b-34bc-47c5-a651-8b225e523334" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="3a6c9187-1e51-47b5-ba27-93c07e9e0abc" name="Script: SaveST_SXM_ID" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ST_SXM_ID[1]", "stSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="1cd633ca-531c-40ef-966b-7b03a5c5e674">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: XPath match wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6d6adff7-850e-4987-a515-bb7b377522e1" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8a3100d8-ccd7-4689-8fa5-f05f54ffe551" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e4b0b367-1ca2-4336-b624-72fce5c97f9a" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTR" id="97a11aed-8aeb-4ac9-ad2d-68d0e061fc59">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="8b0311ee-a41f-4c0a-be7e-6fab3e4cbf35">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="920b9c54-631c-4d1f-8fb8-5b94a49ea46b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="d7a0bef0-7c62-4087-af1c-bfc1d44f39a3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08bd5f22-f7c6-4526-b6a4-a146ecc9803e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="93f74e45-f7f8-48cb-b1b0-7489f7ba383b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0981667d-19fb-4fbd-adaf-b927c8e608c9" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="d9d79ae5-7488-47ca-bd4c-caf4bf61d591">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="b8dd68ac-0ecd-4755-8b1d-ee7b24c186a6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6e78d7f5-cb66-4611-b2b5-343c1888664f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c8d52293-18eb-49c4-9ca9-ea3bd5d610d6" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="625877b0-2eca-4b41-8c89-2dba622b3710" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d80902a3-bfcb-4329-a8f6-ad3d0723f4a4" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="e762cdbf-db6a-45aa-8733-70e3d52fe566">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="feb431a7-c90d-47a8-b50b-0d09449a9f5e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0b705d25-1791-4e89-8c59-80a7f06407d5" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="69e4fbe2-e6a6-444c-9ba2-c8b47452d3f9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="751e3aff-bb16-45f1-b5c4-468752f97212" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="cb702a0f-6891-4c03-a11f-e15b17963885">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e95b881a-2ca1-4cc8-97c3-ba99a4a0eabd" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0aea5360-f2b5-4600-979e-d7ed876d2856" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="0a30905c-db31-4382-ab73-f48706dccdba">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="651069e7-f341-4a0a-90da-a0530c7e6e68" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="32bcc486-c2b5-4df4-acd0-8c21dae1865f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="XQuery Match" id="40cc6fa1-0d78-43c5-a10b-f043ddf625c6" name="XQuery Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="2310f440-1122-4767-93cc-598cd58ff8ef" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e2a24280-0eaa-4900-acfa-6deafdb45623" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8e8aff9a-9704-45af-9b9e-7aa4970fd0c4" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTRA" id="5366f17f-2804-4498-88a9-9dd72dce1e4f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="65126eb3-5fce-4b42-b832-8882ef7a5d51" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
              	          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="501e373f-566f-4b3e-9b3a-c65ff961795f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f08e51d1-55bc-43e3-b9db-6727aca25362" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTRA" id="7d5b1ec4-0dc8-4dba-a956-e013f2a18e7d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP" id="2b0afd7c-7984-4ec1-9aab-7dd32e4d10fe">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <sch:SendMessagesRequest>\r
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>\r
         <sch:Messages>\r
            <sch:Message>\r
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>\r
            </sch:Message>\r
         </sch:Messages>\r
      </sch:SendMessagesRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="7ddae174-3197-4a8b-9f6e-287f5ca22b74">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="06336836-c23e-49ab-98ee-7e2856dae0f3" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2e574683-7b2d-43e7-9cf0-a65edd8f6be3" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e582b46e-d440-4f02-ad61-d85f0bdccf72" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="c3780e26-26f5-41f7-88ed-065033b6d61f">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="f585e2cf-a8cd-4a95-a258-ed63ee1ece17">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="04739f49-2331-417a-870f-5c0d2b543c81" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="b5ebd62e-2e25-4ff4-b365-569ce92927e1" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="f95adb30-0712-465e-a484-284d6a94cac8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e31120ba-861a-4f69-84ab-57d576d7c0f2" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a2c7879d-6596-431d-ab2d-6abc32050e5a" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="13b6b4ee-ba9f-40fb-97d8-4b1b27f2c3ff">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="89a25ff9-4e44-4949-81b6-f88768312487">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="8273aa94-4170-4178-ad8f-472138da1833" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="68f2f511-c758-4918-996b-2b0f37ca5e67" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="5e984c6e-e0c2-4c0c-82b3-7d424d31a936" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="24355b0a-39d2-4400-9a47-581d2e3a52fe">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="94c83f92-0863-43de-87db-1ec73dcfaab9" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTP" id="b06851f4-21ae-4159-9e9a-9dcc417aa71e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctpRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 2.days
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="B2.3. CTR-CTRA ok-CTP direct" searchProperties="true" id="ee1d9b27-1f40-4694-948d-12cd2cb70f77" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="52c62d71-82d4-4f70-9278-47d747aa54f7">
        <con:settings/>
        <con:config>
          <delay>2000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTR-Sunny Day" id="081a4a50-e10a-4aaf-964e-278b2e23dc34">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>3-${#TestCase#contractID}</value>
 </validationblock>
<note>Sunny day-sent ${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenr. ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table" id="f97b5461-c38d-4244-ba20-8e92b433cc4d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fb615c5d-2f60-440f-bc32-0122dee016b5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="2a7cb78e-754c-4081-8c98-46942e11b301" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5d1201ff-fff2-4f9c-a369-afc26a3752bd" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="10a0412b-b5b0-4e1b-a98d-f8e665f686d5" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="ac1fa07f-b4b6-4c10-83ab-a11eaec74921">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="87813cc9-29ff-411c-9daf-627f9aec11c5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5fe8d448-f0f6-409a-a38b-a7b45a27a7a8" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="7615484a-32d4-4c0c-89e4-938648522b82" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="259027be-f98f-4ab2-8e43-8fa5b637c9ab" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="575a66a0-b8a5-4f7b-9c2c-e31b3a587118">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="310b4c37-0514-4dba-9aa2-1a6dca90d288" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="758ee0a1-6f53-4365-973b-6155d46b13c4" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="289835e5-b14e-4fe4-af18-543177da86b3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8ba22a05-6791-49e9-a1f8-01cd323f2ea8" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="e3e51cb8-33ab-4bcb-a634-87dfa4cc7f48">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3cb7e6c3-107c-4d5c-b82c-a92d92dd2c47" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1d403e33-99a4-4136-8f5c-d1048e04e8db" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e4c1ca66-5773-4f10-9ca9-bf59a27599e3" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="fea5baa9-bc97-4558-92f4-814891668b09">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="4776cf0d-d15e-4c26-9754-d1d85c5a3066">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_Send" id="cd264c2f-f3e4-4fc1-a914-1d7e82999d5b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and 
st_receiver='${#TestSuite#donor}' and 
st_send_received='SEND' and 
id>${#TestCase#Id}</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f89446d5-eef8-4771-97ed-44761edd799e" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="fdf59c01-b17d-48f7-be1c-7a664e327727" name="Script: SaveST_SXM_ID" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ST_SXM_ID[1]", "stSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="7c763586-d476-4349-9a7a-4c6832e45cbf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: XPath match wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="902071c1-f966-411d-9ad7-c3b90b1541cf" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="85b89de6-b8ab-48e7-8c86-4706fa6a88f4" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f1afbe60-8660-411f-9548-f8525d6e0208" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTR" id="7fc0b86e-7ad5-49e3-a2ff-3a865cedd6a7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="00c17d1f-b7bf-4946-85d2-522959fb38dd">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="976f1b19-513e-4109-a045-c0bf2f9299eb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="e10a682a-8cbc-4d39-b70b-5d55745ec3b1" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="849290cf-457d-4570-a818-e0361774994d" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="218b29d0-4f56-4168-a10f-f2b41d79f3bf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="68f2ee7d-ff98-4f2b-b487-6e6cd5a4068c" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="3f78e261-1bce-4f7a-a8d1-01aa401a3467">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="ccfea6f6-c927-4eaa-91e8-754d4a3b279c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1be87fc3-d690-4df8-a651-02c8bf26a8e2" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3be7dbfa-9de8-41ae-8e00-e6f591b05189" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="797db56e-b199-4017-b589-4f67549a6b25" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="42edc480-44bb-4996-b9a0-01cb60f8bf90" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="91cd93b5-88f7-4075-87e2-ce91d6be2856">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="2d0b51df-8cb6-4d20-a5b2-2a7b824cc95e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fa5bab9c-d6c4-44ed-b75d-6047d353d7a2" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="2a721cdc-5ab2-41b2-a515-80f9003d3a31" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0e2fcb7f-7e25-4e8f-afe1-d01abd78336d" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="4217d65a-6814-41db-a0a2-e6f1b4fc228b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0d017c23-7a3d-43ce-8a44-fad9b3c5f72c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fce2ad35-df82-4387-9280-bb1014ede1b5" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="18853439-fcdc-4172-9b3d-c8350d15c075">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="89b5f0cf-482a-427b-b27e-b13b029c877a" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="593cbd36-09da-4536-8cdb-1552bf349fb6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="XQuery Match" id="40cc6fa1-0d78-43c5-a10b-f043ddf625c6" name="XQuery Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="263aefd9-4880-4948-bbb8-59365af84edb" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="959ac17f-d8d9-440b-b45e-9b679e81d361" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="51eba4f9-2b57-4d9a-8d90-4121ccf9f7d0" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTRA" id="25f9a776-ad96-46dc-a3e1-c4cad717b8e4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="65126eb3-5fce-4b42-b832-8882ef7a5d51" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
              	          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ec06803a-beaa-4ea4-a1ac-fabd936f92be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9c4d31b9-2060-4c9d-beb5-c887f906720a" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9017dd67-63fa-4225-a130-65481e520f16" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTRA" id="be628e6b-438d-4e2b-b24c-4e186cfcc325">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP" id="69f4492f-17b4-4a84-aa93-580f5cf99b39">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <sch:SendMessagesRequest>\r
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>\r
         <sch:Messages>\r
            <sch:Message>\r
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>\r
            </sch:Message>\r
         </sch:Messages>\r
      </sch:SendMessagesRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="92f63b59-fa0b-41dc-9ffb-035380dac73c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="5a79f8c1-c351-4dc4-8a2e-f13a1467f157" name="Script: Store ctpId">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="85a5060b-ee20-4d4c-9fff-bdc062cca42a" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9c087d13-1b86-487f-9066-e9f5cfc3da10" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f6277d45-c322-44e0-be8f-d5ded6ae0bed" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b301c8f9-44a7-47aa-842c-bd38d6d9c012" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="5bf5413d-5cc6-4481-8098-138733331fa3">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="6f188bfe-83a8-4b5b-af4a-cab0edc2a79c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8ca94d83-85b5-40cb-b4cb-a7b3c591c5a6" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="970c25fd-0403-494b-8d79-9ade294dd10f" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="fedb6cbe-6971-4d1c-8221-88e62f594996" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="2b666759-4205-42bd-9bca-c5c0f8661f87">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4ccc9521-dca4-453f-a1c5-0092a6e0b2f2" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="50a43c86-c761-4e3f-9110-97e19aa3bc1a" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="da202061-4a35-4c38-9fbd-ec2670825a1f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Completed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="36820b36-fc6c-437b-a499-50c2c8926e3e" name="Xpath: verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>f</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="21a90fc0-da44-45fa-9d3e-2dbbd8a3d9e9" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="d271e38f-e220-4a72-ab7e-4c4fe3547fb0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="8273aa94-4170-4178-ad8f-472138da1833" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="a26ebbd1-f651-4068-bf3d-8fa6f10df331" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f02480bd-c623-4d30-a0f8-11ca19a4166f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="519bb9aa-6518-446f-a46c-d0c7c87fff8e" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTP" id="97359a40-8228-4024-b50f-ee26279dc0fc">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="5e158e00-5240-4c3b-a03a-f2d774261a7b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuit#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="f8e35c89-0c68-4076-bce8-6ce48a59016f" name="Contains: Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="43016be5-dc37-4d0e-833f-6422f76d414c" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="2003818c-0332-4b75-8142-afd6fedf8af2" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="2c48739a-504d-4fa7-a10d-9c64827afecd" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTP" id="5b034d4d-6753-414b-a1f0-5d7c191ab53b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctpRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTP" id="b4ce5d08-3ce3-4ba8-9bce-2204925dec37">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="2d2d4038-8dc6-4fd3-9d8c-2a534550bbe8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5ddf1667-c37e-4788-8906-46d58e846179" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f33efa66-ca7e-4cdc-8df9-5e55d7d32d32" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTP" id="2b3bc510-e7ab-43c8-a238-d48c0fa490da">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctpRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Performed received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Performed received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="402e3f17-ecb7-4cbb-bc7c-8a2941d682d6" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="bbcd5e8c-20e1-431e-9d83-47898de4c1e3">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date()
 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 60.seconds
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="B2.4. CTR-CTRA ok-CTC" searchProperties="true" id="c2650adf-c866-43c5-9999-e6b852998abb" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="d26cbdc4-4b35-419b-b76f-abbc702dadc3">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTR-Sunny Day" id="65d9a725-e504-44fd-9219-980d8a36f3a0">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>4-${#TestCase#contractID}</value>
 </validationblock>
<note>Sunny day-sent ${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenr. ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table" id="05ed7c3d-f437-41bf-aa53-7d450f5de776">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4c069758-5cf7-46f9-a7e8-91ae5937e13d" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="6b57d2a1-21d7-4f4c-bd98-319a81be0b95" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="af8c6c93-65ed-42d0-8c74-bbba48886802" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8076fae1-3bb5-4571-8725-e8e2d346606e" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="8ce0ada9-0159-46f9-b09e-01ea68bf9c55">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="04e1eac3-df0f-4eec-8300-c46c08d4479f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ff687350-723c-4659-8a7c-6cf58bdd5ee2" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="e4a1bbb5-ae90-42e3-8179-51a1e4a470fc" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="3bc149ea-54ea-48ec-beb2-461ea91ba853" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="77cf33ae-3cdb-4b77-8ea8-d06410402efa">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="85cc433a-31ff-42fb-80b7-9e683a25470c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="101f9f71-967d-4e90-92ed-2a2aeec1b62a" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="03817bcc-3426-441c-9df9-d836b6432cfa">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8a55477f-f6f6-4a46-9199-68fd6f763205" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="7f672b64-0c71-4adb-a5ba-2bc07690dbff">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="219dba67-6b10-4ee0-a702-8b3180935efd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3a53e2d7-808e-4adb-9cca-586d5a0064c1" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="893363c7-8b42-40a9-a8ca-093bf39ae18c" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="59ae5fa2-8add-42ad-a3ee-2b8ae8943a22">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="0f6c7d54-c01b-4ebf-ab0b-de6dde2292ea">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_Send" id="27930155-0438-4a51-b4b5-dae9a32ef7e6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5b12a47d-fc37-4ed0-9be6-d8f1ba82cf28" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b4f9c337-63e4-45db-8ef9-5755296f98aa" name="Script: SaveST_SXM_ID" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ST_SXM_ID[1]", "stSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="17892396-8b2d-4712-8de2-9ada40d9a33e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: XPath match wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ea957657-6ffa-4c86-a2b3-cfbd34ae1e09" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1aa52c05-546f-4a78-b538-8d78236fa83a" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2a85fe9b-2b3a-4cbf-9826-be84c7889e74" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTR" id="dac97005-43a8-4440-b80f-a29b48e92252">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="4415d8e3-0dda-4816-961a-2ea69bfe6780">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="ef240cd9-9430-4ac2-a20e-8a63af97d6f7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="334247c6-83ec-4293-bd8b-298307031fdf" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="fbbb9766-1b51-4978-b3b5-881cd88549f1" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="ee05f8f2-36b8-4e6a-8291-8a2e90403008">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8afb68ea-0143-4b8d-8cb6-7b6cacf4656e" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="83b43032-3d33-4a9c-bfcc-b8e2874fbab6">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="a2d33502-4aba-4569-8b59-a7c0af5be629">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="bf5b2964-eff9-414e-8c9d-1490bad43bb3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="20f611db-0386-4305-b8ec-6036c0f62d1e" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4213d251-317a-4ba5-bef0-7b9cf8cf8cc0" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="cbcaa341-e633-40b4-bdad-058e03fd4c20" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="e6a05b69-bfcd-46fe-804a-7d823a24f1c7">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="b3186c32-6fc7-4dcb-96e5-9f3192d69b23">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d61dc825-7a95-4759-8317-94502c808358" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="26d031f1-c766-45c4-8302-e0196392cf40" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f0c98000-2531-40a5-a54a-4d15e0f4b58f" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="9deb23ed-d53f-49b9-96a0-58361eadb9f2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4961cc58-8f1d-417c-9324-fdc346c79461" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="328b0942-2938-41cc-9361-801c80cdcf8d" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="fd11ca42-e0d4-479f-b3c1-493606294e3c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6ff04946-8277-4946-9ee9-a7793684aa7b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="819910c5-c3c8-4481-a551-6e984ba3c9ec">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="XQuery Match" id="40cc6fa1-0d78-43c5-a10b-f043ddf625c6" name="XQuery Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6bcd71ba-b478-4313-8478-35ed0d205140" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b5348e20-16d7-4519-b6b2-c5b4846220ad" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="471a1080-39a6-4e3b-9062-5f78493f5d59" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTRA" id="8e567b24-1830-40ab-b5d9-0045a956e685">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="65126eb3-5fce-4b42-b832-8882ef7a5d51" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
              	          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="31b795c0-5345-448e-b3a4-04445af0d15f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e5750e88-ff43-40fc-9dfe-1639beb7ea6b" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="514c88c6-cd8c-43e2-8640-b7ef35fa7db2" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTRA" id="6cf77359-7b95-47b3-ad94-49de18bfa219">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTC" id="52241d77-2fd0-41b7-a3c5-3f7504901305">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTC" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <sch:SendMessagesRequest>\r
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>\r
         <sch:Messages>\r
            <sch:Message>\r
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<cancel>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</cancel>
</body>
</message>]]]]>><![CDATA[</sch:Text>\r
            </sch:Message>\r
         </sch:Messages>\r
      </sch:SendMessagesRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTC" id="5df9fb85-aaf9-4c5b-a1a9-ad9030b09b3f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>cancel</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4c8e493c-7ed2-46ff-8193-86eb2dc5ed36" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="97968682-f3c7-4182-9d66-76c8ac8e6f36" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="aab582a9-d3f0-4795-8627-50eb856a8e4e" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1a275710-3a64-4214-9d7a-f1aa66e807b9" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="579b5c1e-a517-4552-b5fd-c675748d461b">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTC" id="53e238d1-ea6b-4893-b5c8-e3e4f85e8161">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="72b1d1b5-44e9-4651-bc39-042141d5c2c9" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b139cb11-cdc0-4f6d-8cbb-f106ab2b8c0a" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e3e7f50d-1808-42e4-a4fa-728128d6cca6" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTC" id="9651c435-6346-4d1b-805b-d3c1a0907761">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4f4c632b-265f-4516-88d9-af570cf476e8" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eec44104-4195-450c-9505-fdec3ffcc102" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTC" id="8c823834-65e1-40f5-9b79-f7268550d573">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=11 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="b199af58-886b-4a43-943e-d947f7528217" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="91b43f63-f6f5-479f-80ff-cea24d51d296" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d67fe118-e2a9-4afc-9259-76fd17e12f02" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="944bd24a-91a9-4695-93a1-8a9533aa720e" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTC" id="8cac2e08-ee25-4afb-97a0-2d4a58058020">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Cancelled</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7cf26282-ab01-4ccf-bf60-756a00ce0c46" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTC" id="d30befb8-8f1e-4cc1-bf2e-d7b3bf68e24e">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
 
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTC" id="3929abb3-ac0a-415c-a908-42b36ca2e59b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#contractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1270b552-020e-4693-a671-1f97f10b284c" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="840a3ce4-a84a-4800-831f-7909aefcce67" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="94c1cb22-edfa-4fca-a21d-40e0a592a514" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTC" id="a708bec4-7e8c-43e8-ad84-52ffcb3c939b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctcRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTC" id="b1ac85ad-fbce-436a-a1ba-0dafff360f6b">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTC" id="b434f4c3-7266-48d9-81a0-3ce4c26b4a74">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="00dac767-e1af-4a22-bcc3-aba067093ede" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="00458898-6d99-46d9-8ccf-2a0cc9b25bcf" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTC" id="fe278826-ba68-446f-8f78-cef82a89f2e1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctcRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Cancel received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>New Cancel received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6f8a3e3f-ad7d-4a2d-bca8-540bbfc586ae" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="0b929c00-27cb-48cd-baf3-19bc9345a4e6">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="B2.5. CTR-CTRA ok-CTCH-CTP buffering" searchProperties="true" id="14efb831-7cc9-4a7a-bc92-e518532109ed" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="7790a7ae-356c-457e-bf48-acd05c1e0d3f">
        <con:settings/>
        <con:config>
          <delay>4000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTR-Sunny Day" id="1c387619-8b8d-44cb-9122-53bcdfc72285">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>5-${#TestCase#contractID}</value>
 </validationblock>
<note>Sunny day-sent ${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenr. ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table" id="f0a9ab76-5ad1-4ad4-b4cc-5dd0a14e0fbf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="69ed410a-2467-47a7-b8f5-41034a17028a" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="6bbf3699-7ef2-407f-a1ba-9cf8cf2d335c" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="67638ef6-1b83-40d0-8e17-146be9a551c5" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="dd01fb11-05a1-45da-ae91-ecacc9777502" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="fed45bc2-6a28-4509-83e2-9f6eeb08932a">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="dc594181-859f-4079-9e28-ddc3b59f7c33">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e8918f6-7e26-444a-bd8d-ad7e934f4ea5" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="8d7ee6d4-5f65-4541-8970-8a4f5098c7e8" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="3a00b36c-4fac-4f82-b856-ec13c8eaa4e1" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="abb085b3-4d71-4661-9a96-1bcce593c171">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5e8d1cdd-cede-46e4-8715-01d0f9747ab2" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c529798a-7a75-4637-9766-5754a701a84a" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="e29d7e51-3e82-4838-92a5-dd6159b69207">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="80da05bb-9094-41b7-be2d-4532218cf04d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="de5b9af5-f1a2-4843-b0b8-3dbecce98717">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="bf5b3129-a7d3-4ea9-870e-ee925252b560" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0a92e285-ec5c-4943-9968-d2f58d1e559d" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e991910d-7098-402c-b13c-ec89c8745c32" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="16e7007b-bf56-42e0-aca9-7c2a871f6051">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="7c4dfc6b-48f7-4731-9d37-8d9682b33d51">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_Send" id="e88d9204-e4a5-4537-8afb-ce524e5e6a97">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c2935c04-69a7-4909-b592-ac7223283909" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="0bd0ad35-efb1-4301-a2ea-5b05a9f74470" name="Script: SaveST_SXM_ID" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ST_SXM_ID[1]", "stSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="b337cee6-80b4-4879-9149-16f4b7c9f3a7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: XPath match wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9c8c35d7-1f21-4b80-9c21-2b500a5c6fc2" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="593d6602-958f-4bd9-b8ad-811de6688f48" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8280ecac-66e4-47c6-94ac-0ad58db89339" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTR" id="aca89e53-83d4-4e38-b26e-a0533e89d9ed">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="b44668a9-4129-4408-b0f0-3524fc186488">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="f31c8852-7351-4398-b8f0-39e1a00f37aa">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="69d5a039-4fa9-443b-98d8-d217de60779c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8f16904c-944b-4543-99f2-cc87360bbbb0" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="1d42ce2c-aa61-4068-967d-282f9f6277e6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="edccc556-5dd9-48c6-a62a-4568bb188379" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="40bb2700-99ba-4335-8dcb-d65bf51c275d">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="9caef695-9f0a-4b73-805f-141710f22319">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ce99d912-b566-4792-aa8b-168307aa2e12" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="44a870bf-3941-45f8-8bbc-57027ff3115c" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e860b115-b601-4538-bed5-438ec65fa8f6" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a62f5139-4ab4-4122-bbcf-53f0a163f100" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="01f2414c-6d52-4cfb-8f50-ff5b7fa8b452">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="c9d86175-233b-433e-9fde-09d48d312dc7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c06bc5b4-02bd-40a7-b018-32d0fb84d5f1" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="0c36b369-222c-4b1d-9421-d3122f951d82" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="def7e53f-00fc-4de2-9382-f5b4c47f45fe" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="7bc8aa75-e051-4036-b0a2-6bc9904b209d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="577627eb-e341-4960-8d26-4fcc65ccb722" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="560e57d8-4874-424b-9a78-b99de0055d04" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="b484a1d1-c5c6-40ca-a682-def368a47271">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="feb67485-b76c-4221-bdeb-c713f245789d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="823fc6fc-8835-4826-b725-71d8d2a5accf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="XQuery Match" id="40cc6fa1-0d78-43c5-a10b-f043ddf625c6" name="XQuery Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fd7e3c0c-80e2-463c-b7a4-516cc794a457" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="caada8d4-ef62-4ceb-a196-c570a221580b" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="5831ff88-860c-4977-96c0-d8942fd7ee0f" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTRA" id="f00cdd38-ded4-424f-a639-5cc5b3d1dded">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="65126eb3-5fce-4b42-b832-8882ef7a5d51" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
              	          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="befffb42-62b7-4210-b47f-b77a84a49796" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="6df16e20-3aed-47b3-ad9a-638cd24eea56" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="dfdb8cd8-fd31-419a-b65a-85e1e7b7d817" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="2c6b6706-3b04-46e1-8b3f-11b9a3879b2d">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="b47e032e-c1ad-4a91-83e1-8b887179592e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="fd823a22-cf41-47c7-8781-1f57d9386714" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0a3a76e2-110a-4658-9374-bdd2cb7f4b06" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTRA" id="efad0c5c-c11f-48b6-abc2-88dd084a8ff2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCH" id="b3922024-ffbd-49ae-a469-ace1b461b616">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCH" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-03</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<change>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#soapVersion}>
</change>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="611515f4-aa5a-44bb-9038-5efb4661d656" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="4c4aa14b-781b-4325-8f36-84e716be7574" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCH" id="d59701d1-a04f-4473-9f74-71a172ac93a5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="641fef79-8537-4dac-913e-c8d8222e36dd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3da87b4d-707d-4f04-a2f1-11f0ed5d7187" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="03a59075-52d6-48a4-aded-0d3f7b3a27ac" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="dce9fe5c-abd0-4667-88ff-f968eea029e9" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller 3" id="3a29a799-6a4e-4f48-bd42-1fa76646ea3d">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCH" id="972260ab-23c1-423c-bfb9-0ef83066bb2d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9c63fa23-a7ff-40e2-9cc8-631af4d4c692" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="e15bd5f1-6b04-457f-945d-266f0a0f597c" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="83ef9844-760a-4eff-b43e-ef084aa8fa4b" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCH" id="23e3c72c-76f5-47a9-a4a8-20ad20afaf5e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="21d371ef-4a9c-4b71-8f4a-234bfd5c2a7a" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="619fe61e-fb78-4402-b053-04a3e4176fdd" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="177103a7-20a6-4e11-ae64-fc9c4b34a466">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#propDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5b3be0bb-32d6-4593-a46e-a48446224669" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="16269e95-8696-4fc6-bf07-51d107a1915e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="2f7d35d5-6695-4e22-aecf-3764a6a3f60c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0477ecce-aa36-4c0e-850d-b821c491eb43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="867b0529-6687-497c-831a-bdbcc0d98a90" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="61439af9-7e55-4728-a7d0-4cef8e3a5ecb" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="e2ee3f65-33e7-4f2b-945c-457d1b8edad7">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="59896d87-a19d-4b1b-a75f-9ec4ce95cef4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e55e1ecb-dba6-4ff2-b712-744175c68a88" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="835b715f-1352-4fa0-97f7-923bacf25c24" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCH" id="ef91e66f-ca84-4dbe-a3f7-9f12b2335469">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="3a514a19-7870-441e-8e5a-b9e62b885009">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="674c84bb-b6b6-46f8-9a6f-ece2490c27eb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="37763c21-6ed0-4e08-99a5-0bf81245ec25" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5043bf7d-0fcf-4a7e-a3c7-b9be0d400ee3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="65147bbd-48df-46b2-80be-6b06e9a5a3ef">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9ac29fd9-4c1f-4145-b599-31095d4cb28a" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP" id="00308674-91c9-4ad5-9cd6-3e0f8b336ef5">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <sch:SendMessagesRequest>\r
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>\r
         <sch:Messages>\r
            <sch:Message>\r
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-04</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestSuite#TimestampNOW}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>\r
            </sch:Message>\r
         </sch:Messages>\r
      </sch:SendMessagesRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="3c599394-546c-4718-acac-4d2c8e089c62">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="a85757a4-36f6-40c0-950b-7ee7d8b66633" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b0111a96-4402-4a55-a579-5fb6a7a774c1" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f2dc3082-1114-481a-b215-a6cc25f9261c" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="dd14a00f-4243-46a7-812e-588f4821cbd2" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="d332407f-03dc-4234-a633-56312c4deb37">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="bb0ad622-695f-47a4-9aec-7ea55582d354">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9c63fa23-a7ff-40e2-9cc8-631af4d4c692" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="d1cf00a0-e549-498f-8e5e-36ae49bb0020" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="867ff057-6853-4534-8d9a-f9257282fdce" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="2cef29b2-e6db-4058-9d55-bfa7389f5614">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5da77c5a-95bf-4f4f-99c7-31c159764c6a" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="56555856-64fb-4c3a-a57e-c285285303c3" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="7f158f5f-1fad-4754-97f5-88345b4bcdbc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f9c928e4-359f-40c0-bfda-2a37bc9f7d7e" name="Xpath: verify ctd_ctp_buffering is true">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d4faf275-1a05-4841-a89b-29c176ef2a40" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="ced5eed1-c41b-46d0-a998-b25c3512d135">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="8273aa94-4170-4178-ad8f-472138da1833" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="af243dee-961a-420c-9248-f04fd1b4dcee" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cf436fd9-e536-41e9-84d8-76675189f9b3" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="7ecd51d7-3347-4868-8f1b-8fe7a485ab97" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="7c26a061-5703-413c-a6ad-d8ae98a2b4ee">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple NotContains" id="3cc84ce7-892d-4037-848f-cb97180dd31b" name="NotContains: Not Contains">
            <con:configuration>
              <token>Performed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="304fc4d3-3e8b-4e70-ac2e-d176f736e9b8" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTP" id="6bc14d53-470c-4c62-8399-2e604493c7d0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctpRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="B2.6. CTR-CTRA ok-CTCH-CTP direct" searchProperties="true" id="639eff50-374f-4d61-9e43-ca93d0be1c7c" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="3536f3dc-a196-4a7c-bc1e-80e41de04671">
        <con:settings/>
        <con:config>
          <delay>5000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTR-Sunny Day" id="e19af468-cc22-4c06-9f6f-cb08f9238c9b">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>6-${#TestCase#contractID}</value>
 </validationblock>
<note>Sunny day-sent ${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenr. ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table" id="fd400ccc-0152-41b9-b544-f63fc5b9b3eb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8d676388-5a16-45f4-ba18-5150d91ccda7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1fa64e89-7102-409e-8631-2ceafebe4c94" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="62cdf82a-7ae8-4088-bd86-edcbda6bf886" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8a98aabc-057a-4bee-93da-f9b1a8dd5f71" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="35e5c703-fe41-43e7-80a4-dd46de7805f0">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="660f90c6-2935-4f84-b0d1-275f8d792bfa">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="897c78e1-59a1-41de-baa1-69aa7291d595" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="60d15f48-ed0a-4be1-b7bf-8bf49876b7d4" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="045b2a49-fa6b-43e0-9634-2551dbe1170f" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="ba043258-7146-478e-b814-5b0685243520">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="87501063-a5e0-4d19-bf82-18d937e37c53" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="42182e98-9c6e-4dce-a20b-c324e169628d" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="4c37d8ee-f62d-4db9-9281-65b430ad32f5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="55973859-b02d-4b47-b643-4debf6859471" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="0930b34a-485e-434d-974c-78083cf96aa9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="deb090d9-9615-45b0-b478-21c1464d6eb5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3f07d2d7-68b7-494b-a94d-8bebb23ec3a6" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e1a5cb55-e62f-42c8-9438-773edfc59208" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="b57898ce-9adb-4ff5-bcc8-323a9c90373a">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="58187208-0384-4d67-8e6d-6e9e225f19a2">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_Send" id="aff31b5f-19b6-4bbb-b586-f28d4cb37701">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="dc6bfdf0-3d69-4cfb-8e4f-a99c16e88d51" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="04324db4-c6cb-4792-8c9d-c1e84dcd3715" name="Script: SaveST_SXM_ID" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ST_SXM_ID[1]", "stSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="504c6eb9-5908-4e50-b9a8-c532b0543bf0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: XPath match wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c5b2a5d6-c8f0-4844-b5a2-9689fd9231d4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e5e2e57b-4646-4e15-913b-b4abf06cdee9" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d8507db3-d219-4b77-9816-3c5cda327d14" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTR" id="c08d9926-51f1-4fe5-8f8c-ae644b21cbe5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="6359a27a-a3be-44bf-a0ad-e7fd8239b1c6">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="c73acc0b-5117-4f58-bc48-ac68806a19df">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="856a204a-13a0-434f-9db3-d227718032b4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8a0ce283-8b76-4a97-8ca6-582e83a90ba4" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="e5ac0f34-b926-4c52-bd14-881ff217a82b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7e806153-872d-4b7a-8439-c0756236ab48" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="6cf59173-90a3-4c93-93de-142d54b41538">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="5e648b15-8e77-47a4-9c11-4c758186b3a3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="758b8038-9361-48c1-a2a9-e6d902664bdc" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="6923c81d-2e49-4d1e-b5f7-477cf3cde87a" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="04c356ca-34ff-40d0-9045-2ded27757475" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="38448a88-1205-44bf-8a8c-01909587a1fd" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="7ef36e72-3329-4e8f-82ed-dc1e628d2b08">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="3fcec603-d7ae-44f3-9ba6-d7a3f40e98b9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f3c60144-e753-4d11-aea8-d569b31f9c20" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="28f96f9e-6ddc-429a-a6eb-2ff92c7bc716" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="4e0609e5-eff0-4486-b589-1f5b8765a73b" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="af364815-e7eb-4632-919d-d57544037bca">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="43de35a5-c655-440b-b53c-ed3526f428dc" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="49d1c838-7fa9-4ed7-9f2e-1bdb7355c7d1" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="609bdc36-e1c7-4528-88b7-163e94b5d124">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="38f52007-90d4-4fdd-8b79-abc4259fdb1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="676c20fd-de5f-45b5-9eb4-d31ba734dbc9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="XQuery Match" id="40cc6fa1-0d78-43c5-a10b-f043ddf625c6" name="XQuery Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c1fe5141-2e9a-4032-85da-e8e97e0a3c38" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="05090d72-dad1-4684-b802-09755d8ddc41" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="6426bfe4-41e3-4810-8720-012b21e10180" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTRA" id="9896adb3-5048-495e-b735-7798fc621777">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="65126eb3-5fce-4b42-b832-8882ef7a5d51" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
              	          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="13392e2e-f325-4021-b763-3202a96ae631" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c95504f1-954c-4486-819e-8c7969970400" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="498ca106-602b-4ec5-9213-c83b042bbbd5" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTRA" id="17179b05-19e7-4b42-8ed7-0280d28becdb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCH" id="edb15f6a-d6fd-42f7-a6fb-166b428d9417">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCH" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-03</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<change>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#soapVersion}>
</change>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="611515f4-aa5a-44bb-9038-5efb4661d656" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="4c4aa14b-781b-4325-8f36-84e716be7574" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCH" id="02e88438-57a4-4cca-a73d-44288986c3c8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f7b4bf36-5871-4b1d-b209-c4c0fc819c50" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e1586ddc-2a7d-4e8e-b9a9-35e4ed8ab480" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7413128-8ef7-4bda-ad3d-ec3a78d46be3" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8b02f97f-c15c-4250-aec7-9ac8ade2c4c9" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller 3" id="13eea505-73bd-47cd-912f-0dea49b0d110">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCH" id="f1b1a4d3-c4b4-43ae-a1fe-a13ec9f89e4f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cc4e4606-d306-41bc-aa4d-db8e90240ce6" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="a2f1e5ba-a22c-4ebf-be00-d12677e303d2" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="3cc0db9d-54ea-456f-9261-9849bdf6f100" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCH" id="033e46dd-9ad0-4a70-89b3-c8540dd620da">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f598ff58-44da-4edb-91af-2beb2f3cd0d5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9eda90ce-d228-4d3a-a477-dd9d5fc72462" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="e1fe46e2-c559-4627-918b-2668509bee2e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#propDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b02f285d-75f4-4fe4-84e9-3a7b1416e170" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="f59b12ea-408b-4996-967e-d255eebe8880">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="2f7d35d5-6695-4e22-aecf-3764a6a3f60c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c4c3a221-687a-4788-b52a-c2e17381b9f1" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="37119f6f-f46f-4ceb-aca7-a973028fbebb" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="11f1f5a2-61ae-4c4f-9540-6f2a877be9aa" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="12bb346b-a10d-4901-9083-2610510036c4">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="d2fad1b3-5cee-4861-89e7-b761e5bfb08f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fb13562b-3b25-45c9-bf62-83565a32fbfa" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="54817d37-043a-4fe7-bc4e-b0d059ec096d" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="69d1aa7e-8065-4c39-b999-6eabc241ea2f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCH" id="0eb52bf1-eda3-4caa-a0d4-b168ecc59353">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="32daecae-2929-4a82-9455-dc02c555f47f">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="8e8b8fbe-f5fc-4d74-900b-1c85982b5549">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="d0f159cc-cf10-4d19-ba95-d04137a350c1" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4e82c06a-103f-42fc-b910-8768df186398" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="0d9fd940-239d-4364-942a-3de60ca56365">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="81feb6cd-d80e-4758-9cb1-1b2094181239" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP" id="6c08afb9-ab69-40e3-b109-d55aae973ac5">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <sch:SendMessagesRequest>\r
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>\r
         <sch:Messages>\r
            <sch:Message>\r
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestSuite#TimestampNOW}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>\r
            </sch:Message>\r
         </sch:Messages>\r
      </sch:SendMessagesRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="4bc1acb0-e9a0-4e0d-b5f3-e1026dc469bb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a6171bc-8909-41a2-a34b-274fafbb77be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e6ba73e1-0771-4275-9c9a-d76e0bef8545" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d7ba4bcc-e1c4-4a72-8bb9-a2e4b81ae5e3" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e3516688-3582-44fd-8ab0-9182f617d33b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="4a0ef19e-1f5a-44c3-86b7-7664f4ac2cde">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="fc332506-d5f0-42dd-8bae-30ebe998f557">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="541926ed-b4aa-4410-ab20-956edd08f482" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b70c2eec-20e3-4f72-b20b-8252e7c8ec76" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="cfb6bf6e-3c3b-4a1c-9452-a2fa51f597fa" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="bfafdd10-054d-4538-afc3-39a42fbbd6dd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5fd03154-90ae-4505-9f49-0253cffa0613" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e1cd7e37-c651-454a-907f-37aa575b3a20" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="6f13269a-21d3-46b7-ba68-7de9b9581847">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Completed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="031d2b57-2c5e-44f1-8519-2ad790ad910a" name="Xpath: verify ctd_ctp_buffering is false">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>f</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7c859f4a-ff3f-4ed6-a32c-5e04b48a82d8" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="542a7615-e60f-41a3-99dc-479a2e3b22bb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="8273aa94-4170-4178-ad8f-472138da1833" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="abd4a0d2-9fc7-4dd6-8d2d-81be20af4c24" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4dea347f-da68-4d0c-b113-2ad9a27da413" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a22e8495-5e2c-4dd4-81b0-c68b9d3302da" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTP" id="4aba613b-9573-4a27-a83d-b081740c5f85">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="b7937800-7af4-49ed-8534-2c7ec63bcf04">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuit#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="f8e35c89-0c68-4076-bce8-6ce48a59016f" name="Contains: Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="43016be5-dc37-4d0e-833f-6422f76d414c" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e9c66c04-32a8-481e-9360-31a8f5146341" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="97b88bfb-a97e-460c-a9a7-e8517b1de3c8" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTP" id="d3fbebc1-e0cb-45ff-aa29-7e74a9fbe9cb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctpRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTP" id="482d76e8-2628-4a8e-8ace-7b4b06d19cdb">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="926ef35b-f445-4e94-b654-afb17dcec4fa">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e6dfda9-e7a1-4f43-9ec2-aa347193b77d" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8c12f77a-03bd-4296-ab15-1d6570c84275" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTP" id="f6997ad5-48cd-41e7-a81a-4fea4ab3d90b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctpRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Performed received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Performed received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2b3c213f-0138-44bc-a486-fa2d996519f3" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="f9f404ac-ce48-4d66-99f0-a7f4bd612709">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 180.seconds
}
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="B2.7. CTR-CTRA ok-CTCH-CTC" searchProperties="true" id="8470e13d-37c9-4ec1-8dcd-165348d65b9b" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="6761303b-35b3-4ed3-ba7e-2185df6a88b3">
        <con:settings/>
        <con:config>
          <delay>6000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTR-Sunny Day" id="09e36e71-324b-47cd-a43b-54fc4b3bd7c5">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>7-${#TestCase#contractID}</value>
 </validationblock>
<note>Sunny day-sent ${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenr. ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table" id="03a01245-ee46-4a70-aa27-4c857bd96451">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c9ccd335-34de-4102-9a35-294ddae0f4a6" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="58ecc692-5abb-4a1c-bd67-da0f79b92449" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="495e2abf-7435-4272-92a4-1d23a8856dbf" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="24a5f668-896a-4617-9ce3-9a1e84bd3a4a" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="0b9a1c49-810e-4d3f-94f6-6710274ba053">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="a949cba1-78f0-4a53-a815-b5f3f5f10d77">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="a503d9c0-5bee-4821-9dc3-643251d49b94" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="36aaea2d-62fe-40f6-afa1-72165dd47d4d" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="6277023b-e0b9-4e34-b291-6e29d5c1ab7b" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="95175cd5-aa95-43f3-83e8-64863344785d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="6d0cb7d1-7259-4447-90c4-89dced07d40d" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="cd315a47-ce6e-41dd-a837-c043f756c4f2" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="aac0f281-e5c7-4475-a4ef-b800cc9a4c87">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6b7fa186-01ea-4b41-ade7-6132cd7f23d0" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="517b0406-dab2-4415-8320-f7f1063c64ba">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="30bd5395-1109-49c0-a25b-c2f10c458af6" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e2e1845b-b707-4f8a-b089-5abc86c4262b" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0959f434-ccad-45ae-9761-a76d2aa7be43" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="e31cb70b-a7f0-4898-a05d-94779b107881">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="1b9ddf43-357c-4680-b30d-331333cb8600">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_Send" id="fba116a2-5ec8-434b-8922-673f0fd1b0af">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6fd8fdb8-fe05-4e2f-af45-73c140676174" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="60ea33de-3eb9-4250-a411-ad25f998a3b3" name="Script: SaveST_SXM_ID" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ST_SXM_ID[1]", "stSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="480ab6fb-a006-4161-8df4-c440849be4af">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: XPath match wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3a999d84-ec00-4802-a1c3-e42c8fa7aa1a" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a57142b0-b385-4aaf-9c2b-bab93e8d14ab" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="76ca6c2c-4628-4ee9-b623-5582a58040cd" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTR" id="1dc7a069-0564-4227-9e60-342e756a3df2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="a88eeee3-3632-47da-ba70-7cdbc7281a79">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="a0bf75ae-ec3a-43f1-811f-eb8a5d61874e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="a9185d14-2d5b-407f-b6f1-67aae7c7ff92" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cc2bb3a4-205e-49cd-9a12-18038de8e2f9" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="d9783a31-cca0-4fcd-9b75-229b9bb0ff85">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7ca6cc40-9e00-4590-ad05-011ef3e3a2cd" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="e0e5bb92-39e0-4eda-931f-85e6b6bb5284">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="8db7a8ea-d894-41a9-8238-14fd0b828a59">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1fde385c-a84a-475a-9b08-7b5f134a0dad" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="382154f2-a649-4398-8f05-b2d649980ecf" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="14e73011-b058-4f76-aeca-f97cb60a16ff" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="67eb0172-253c-4846-bfea-3cef17e0f724" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b348db1f-e142-41d5-bc3d-c689cabf86b4" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="2c2a6c15-51aa-4cbf-89c1-c966b25b26dd">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="25428b5e-e5db-40f3-99eb-0a4fe51f9d63">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="dcee7ba7-e7df-4a76-abd0-a7925cf87c82" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="04c4e421-b1d0-47b5-99ed-3671b0de69c0" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="42957c58-aaea-47ce-8018-43e6831f2b1f" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="87cb935a-de21-4492-ad42-699c60fff676">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="518634e5-4aa0-48a6-8d61-cfa31a4f096b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7d09d494-b7c0-43b2-ae5d-e0ecd8523cae" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="f049247a-2f6a-4ade-8a23-2152d5690e68">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ed060c08-befe-4543-ae3c-2df168d61cc3" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="d5e15ba1-6f41-470b-9467-9e0a1b7fc5db">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="XQuery Match" id="40cc6fa1-0d78-43c5-a10b-f043ddf625c6" name="XQuery Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ce33a0e7-78c1-4420-89f1-9e2733e9dd1a" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cd4be11d-bdff-4506-97d6-08d975c5a208" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="bf5e5fcd-2b66-42e9-93ee-b62a93c89ddb" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTRA" id="cf9ef096-5a15-4b98-9e4d-4f62c4f892b1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="65126eb3-5fce-4b42-b832-8882ef7a5d51" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
              	          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e61ddd63-abd5-4afd-a6ce-6711128f37c3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b7f7a891-58e4-40f1-af84-45931e76ee66" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9571ab04-5974-41fd-a91d-869ce6c30903" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTRA" id="eaee9ec9-b27d-4003-85fa-a1fa5cbd3fce">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCH" id="697b5e32-c07c-4a20-a31f-6f00dd878a56">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCH" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<change>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#soapVersion}>
</change>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="611515f4-aa5a-44bb-9038-5efb4661d656" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="4c4aa14b-781b-4325-8f36-84e716be7574" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCH" id="438b463e-eb39-49b8-8787-1e7033604985">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="11f58b24-4cc9-409c-bf4c-7ba5a57ffa50" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a214dfc2-db59-4fa7-869b-bcba7a8412c6" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9bd0a3e3-7d97-458e-aade-07e6594d587f" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8a28c2ba-672c-44cc-b8f6-a1abfea79149" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller 3" id="fbbb2f5f-95c9-409e-b4ff-2f0c49424be1">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCH" id="aced9a41-46e5-4933-bafb-5c087681a560">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="182cc58a-decd-497e-b178-073629ad056d" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5bebbc31-11e0-4b84-b0d9-b58f2d0a6d6c" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f717be79-94bb-4f28-9d52-4945634e8aa0" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="0082356a-5f1b-49b8-b3f4-63d88972f7cb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#propDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b506989f-2613-4b26-a4af-cec2ef0d6594" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCH" id="0541ccb8-04bc-4b52-afd0-236919ca55b8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1accbc12-11ae-4c5c-9159-b0cec576b505" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f1a3ba65-dd65-44ac-a3ce-06a73e5c5ddd" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="a73b16c8-ea42-44e0-84af-fab338c64c6d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="2f7d35d5-6695-4e22-aecf-3764a6a3f60c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="67431cd2-f913-477c-a779-ba41e0d04ecf" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="eb2d7f96-0714-4b35-b63b-2b1b552fe4fe" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="52337d3d-50ee-4fa8-8cd4-0fb348124533" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="f0b271cf-ea0a-46ff-91c5-0fde6785ca29">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="69d3d02a-5da8-4229-a0f1-ebdd4d16a39e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fb13562b-3b25-45c9-bf62-83565a32fbfa" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="740f1432-1a58-401a-aca9-f1d41b03300b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="18518d20-13e7-458b-946e-e031487ebf20" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCH" id="45140b10-27e1-48e5-9794-09bf0c1fe269">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="04ac4ada-182e-4b84-86b3-5bfacbfbf585">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="d4c07c83-83be-4414-8c2b-9fd04d25083c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="9c55b050-46fd-4419-b4d6-0a63889dcc6d" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="811066c3-4188-4015-9514-4ae748ee1536" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="a4d71f4b-aedb-4ac1-b444-482ca1a3d8d8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6534409f-7155-41a3-bb2f-02437311bf46" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTC" id="4fbf5671-4ac6-43b4-bddf-34b045d06020">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTC" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <sch:SendMessagesRequest>\r
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>\r
         <sch:Messages>\r
            <sch:Message>\r
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<cancel>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</cancel>
</body>
</message>]]]]>><![CDATA[</sch:Text>\r
            </sch:Message>\r
         </sch:Messages>\r
      </sch:SendMessagesRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTC" id="ccc0ce07-95f4-4cbd-ad33-8405d052c181">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>cancel</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="a2273dba-88b1-4e17-ab1b-099144e29ae9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7cf60adb-8727-4387-9473-a01e967546a2" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5f6a61a2-0463-47d5-840e-80adbba7f76e" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3b7501ef-0402-45b9-9c99-5e912c031947" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="b66198b7-aa17-4c56-96eb-561c712ebb95">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTC" id="0df3303e-d4b6-47a5-b06f-ff931f080d44">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="865501ef-2a4c-4d64-a717-852a72aba7be" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="719b67e1-9949-41be-b303-1a95cead800e" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d213c5aa-9064-4f38-a072-2673758ba2ad" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTC" id="c18a828d-4cd7-4131-9d92-1a185004ddbd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f229a929-4cd2-4b6a-8613-84822dfd7d54" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ae4e2d74-3f01-4647-823b-bc3faca62a5b" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTC" id="b540fd04-6bad-488e-a826-e1ead8f6f63e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Cancelled</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="800cde96-119f-4b60-9c65-e60644266429" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTC" id="fdd95189-680a-4de3-9b40-c60ec22cb10a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=11 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="b199af58-886b-4a43-943e-d947f7528217" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="00ee9c04-20e5-4269-95d8-967d68ace019" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b354e4ca-ef52-4623-b354-f3f6b0b798ad" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0022f31d-ee95-498b-a4a8-4ea60809a3c4" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTC" id="687bf15a-59cd-4a32-b39e-dd058b1b35cb">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
 
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTC" id="fcf3bd5b-b2b7-4750-893e-e271655a1c80">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#contractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1270b552-020e-4693-a671-1f97f10b284c" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6422ee69-7789-4e2b-a2b1-a038dc500da9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="50bec937-00d5-4d60-9ad9-ae1b9710fdb7" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTC" id="c6beda36-4402-4c70-aab9-f01349e3c591">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctcRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTC" id="60409091-e2ce-4f67-83de-844e3fdcc217">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTC" id="4f815852-0192-41b2-9125-83a0f99a5d6f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e8377588-b4d6-4dc3-9731-1a79c30aeb24" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="21f6b835-eabf-49a0-8cc6-44150e1cd7d4" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTC" id="9d54cb7e-92e2-4ca7-9ecc-f8d2451afb1a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctcRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Cancel received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Cancel received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="45bd2011-1510-4299-8d76-2f99a3aa9ff0" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="5629565e-e4e3-45a0-b161-a6ccfabd7636">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="B2.8. CTR-CTRA ok-CTCH-CTCHA ok-CTP buffering" searchProperties="true" id="2e0e7fa0-874e-4190-a7d8-bbdddf464403" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="ef0d331b-235d-4fa6-833d-8721fd1bc0e0">
        <con:settings/>
        <con:config>
          <delay>7000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTR-Sunny Day" id="c91f573d-c8d6-4c0a-bf4b-7626b1e60ae7">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>8-${#TestCase#contractID}</value>
 </validationblock>
<note>Sunny day-sent ${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenr. ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table" id="23f2cbc7-1e4c-41b7-9f82-d2be0de44f98">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="994dad10-745e-412a-be28-19dc1b566931" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="316bec78-fd2d-4528-b799-f7ba6cb81cfe" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="dc7e6065-0939-4aaa-b537-f45b36533fc7" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0a9c1226-f232-4a52-9552-a68b467fb2e4" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="ceea0217-289f-42f4-a12b-c3cace1fee5d">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="722a20ba-dbf8-47e5-8f01-74f8d0d0adba">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="457cbc6f-df78-4521-8b60-b89e9bd1fa52" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="0e83756f-a798-404e-a2a5-93d3237a7a65" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77e791af-dac7-46e1-b28c-3f9470e682f2" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="3ea67ba3-34e5-430d-b50e-492d4cbe546c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="da29290d-de90-41e9-ba7c-af87b9b7b45d" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fae48422-dcaa-4527-a4c5-ba50c06efae6" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="3969b8c0-52a9-4322-81b8-bd566e7b56e9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="46f70bad-cecd-499d-9f0c-78f5440c4f8c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="806bbaf6-0a5a-43e2-a0b4-e88050f922c5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="56ea30ea-c7ff-4c35-9e97-39f1b65b318d" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a3c45312-dd4c-41bd-80bc-16693828de6d" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="bd1ea29b-fa08-408c-bb13-2762baf23a98" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="465c048b-3b68-4a89-b93a-8e042d9544cc">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="80cb96e9-c942-48d2-9bab-8beb218e3908">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_Send" id="dd567cef-24ef-4a37-bad5-ea1bf9542e03">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="741be3e8-3eee-4f85-ac45-a36ba7d7546f" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="6c31b1ca-d95b-499d-bcdb-fa812c8d6287" name="Script: SaveST_SXM_ID" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ST_SXM_ID[1]", "stSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="d49e55e4-f89f-42f8-b757-00fb28d82f77">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="64cb4b3a-ccda-45b3-8350-71eb14dbde78" name="Contains: assert donor soap version">
            <con:configuration>
              <token>&amp;lt;${#TestSuite#donorSoapVersion}&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="08133e5e-df8f-4bd7-ad58-0aab90d914e2" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="47863c55-b57f-4610-8f5e-913b3d88883f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3862edf2-aa71-49a0-bf69-43e576dfeb7e" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTR" id="248db3c6-0a8f-44a8-8e1b-9ce36125e816">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="1126826d-3b85-46e5-812b-19864770ae75">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="93f04cae-fb2c-46c7-9739-3fbd39930fb9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="360e0ed7-ff2d-47b6-813e-42b5c7f090b5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="6169067e-beec-430b-9579-7a70fbce4826" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="21f542b5-141d-45ee-a9ef-4b592d9909f4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="bf82416b-1033-4d22-a247-540a1227cbb4" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="6d66e984-3064-4906-857b-072f75a32584">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="c0d364b0-7366-4897-8d1f-bfc3a51abb59">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f3297a17-685a-4bb5-b9c3-c660bd26872f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ed6f34d2-77b4-4418-a947-44228c15326d" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="19ae7563-9e76-494b-b9f0-cbd31088fd3e" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4ab0b488-0d6d-4678-8eba-f79255171e3d" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="e49c7481-9075-4ded-9b7f-06f3b8701c2e">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="3f9c6210-7f08-4088-ad5f-3d2a79c6d4af">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="625aa9ea-4aea-47b3-8337-14f149dc6245" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="3637d554-fb13-43ee-ab40-30cc7fd9c4f2" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="b18ddc8c-bfc6-44b5-b873-2408d2a1527d" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="45ccd65b-0355-429f-81e6-01e31b037d3a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="81e7d38c-ab1a-4390-970e-1007d0835108" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4f14526c-b472-431c-a1a0-b06e4fc083b2" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="2983e388-c720-45e3-b21a-4cbed47ba42f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4fe2d2aa-c761-44e9-a91b-ba55c6a6f2b8" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="fa2db090-fb85-4be8-a9b5-8538b34bc4b9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="XQuery Match" id="40cc6fa1-0d78-43c5-a10b-f043ddf625c6" name="XQuery Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="92b023b2-d49c-44de-99e9-d4feb47ca0f3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1fe72e68-eabd-4e65-97cb-f8a65293c7cb" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="fa5fed61-6bb1-4246-93dc-09a6f9ddb48e" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTRA" id="a671feb2-f8c2-4214-9a1e-5c48b70b4984">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="65126eb3-5fce-4b42-b832-8882ef7a5d51" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
              	          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9b9fd5f9-2704-4b25-84a2-a07753e6aea3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d6815b4d-3f3e-4625-9207-e280dc665d9e" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6ec23bda-9951-4473-bc09-7d315bd69336" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTRA" id="5b5df20a-dadd-4bed-9df2-2d532b5ecfb1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCH" id="54687e16-9b24-4de3-af04-dc2d11697823">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCH" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<change>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#soapVersion}>
</change>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="611515f4-aa5a-44bb-9038-5efb4661d656" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="4c4aa14b-781b-4325-8f36-84e716be7574" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCH" id="3f38249b-0fdd-468d-8c6d-acb0857d9dc6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4a96326b-d7b0-452a-b45d-630a46ea3e91" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="707a541f-051d-4845-b3aa-e72bca083288" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6d794841-53ba-444a-93ce-677199d8b298" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f097fac7-253f-464d-b6d0-8f06b3d1c760" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller 3" id="908987f4-0a55-4581-bc0a-aeae782a182d">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCH" id="fd7c007e-a9c1-415d-944b-c176daf061a0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c8b834b1-af5e-4e77-ad55-4dfca98ecdbf" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="4382f348-c1a7-46df-959a-1e26a3d226f3" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8d363ee4-2792-4bf4-a4de-bd89c0ff2bf5" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCH" id="f49aeea4-715c-461f-8f36-bbaadf5435e7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="2b625dea-dd06-4f3c-8a21-7eb3bb063513" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5c06f0af-31d9-4de4-a212-45181f15f82a" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="0c3a1f89-3dbf-416d-8e77-43a69cecec1c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#propDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5020729b-ed91-4db4-ac54-550bdf756400" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="1842c6f4-b02c-4e67-a548-768db238f530">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="2f7d35d5-6695-4e22-aecf-3764a6a3f60c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ae20fbc5-a0d1-4ba5-962f-a5d680cda2e9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7bd8eb3e-57d1-4dd1-8711-23ee8e593c73" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="11233961-8bb7-4bc6-a500-ff34077ff035" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="e6cdbc4e-9f20-471e-af74-cd0afe15c4c9">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="edb29fda-eea1-4b24-ab6e-af53a8df37bb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fb13562b-3b25-45c9-bf62-83565a32fbfa" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="83e64b27-51aa-4de7-8307-43c3e5ffe385" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="2826c3f7-f963-49f5-8185-d1abdcedda04" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCH" id="09221143-f537-4dc7-bfc2-df7bea9443e3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="f24e669d-16cd-4359-bd36-165e78ec3154">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="8517b36a-2cd5-4579-934c-6ac3f213ed0d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="2319c597-7b45-4280-8345-30817d299fdc" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="40d9785f-2f9c-4ddf-bbaf-71df6d25f11b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="9cca0c55-e889-4b1f-9691-276beea5933a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a9746764-4a75-4cf9-a5cd-40c93be6aada" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA" id="f94e56dd-f017-41eb-9935-e6a58542abfe">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<proposeddatetime>${#TestCase#proposedDate}</proposeddatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="e30b39d4-c44b-4611-b750-7782c66f1d63">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6ec03d99-5851-459e-b6b0-b19a8a26fbe9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c0e31924-1041-439f-8d69-bd2614dba6eb" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4adbf44d-7e1f-48f7-84f4-ca97e7465f7c" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a1e1284f-8806-4569-8efc-91de13b573bf" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="f4e95d9d-821a-4117-871c-47990cddece1">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="53041397-d887-4fab-b97e-3aa710de9309">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5e436a15-e60c-459a-afbd-47fa21d9b1a0" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="58deee03-5a3e-45cc-87bb-2cb9094b948a" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d695da76-f122-4631-840f-2499dae35be5" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="4f7ce5b0-76c1-43c4-a6fc-88e14a10e38a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="fe58140d-7d05-4861-aa5d-4f838b1bd487" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="18e11c4c-4f5e-4f1c-82e6-334727abb97d" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="4ec3f231-cd20-44d5-925c-2168f8382cac">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="771f0efe-3f16-4af2-8dd3-30c88586058c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="f43b1d4b-b08c-47a7-b63b-b606a66adb9a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="8af8dc75-df09-4ea0-b7eb-67cc0baa0261" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e19cc46-9985-4cc3-aa89-4b23272920fe" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9227b310-0687-4fef-962d-3b2df207a669" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="9e14f78a-ccf1-4dae-8464-d823048e9a8b" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA" id="d5003f44-6d1a-4ee7-b730-4c5f232026d7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%&lt;blocking>N&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#soapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: wishdatetime">
            <con:configuration>
              <token>${#TestCase#proposedDate}&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no proposedatetime">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7e51312e-ff87-4be1-87e0-9fc542f430d6" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         	              <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="278fb545-a17e-4de4-8c35-44850234da96" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b4355e30-117a-4aab-9fb9-7e52128339cf" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCHA" id="09c4132a-bf36-45c2-a7a2-d0fa9e344179">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP" id="47770f21-d782-4208-a615-05bb1ea38241">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <sch:SendMessagesRequest>\r
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>\r
         <sch:Messages>\r
            <sch:Message>\r
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestSuite#TimestampNOW}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>\r
            </sch:Message>\r
         </sch:Messages>\r
      </sch:SendMessagesRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="813ad0b9-ac1a-4a95-b50e-8802e651a6a0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fb8ad0c4-d586-4c33-aad7-9f9f26f6965c" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5971856a-8713-441f-a1e0-d990679dcac0" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="84bd332e-5d22-462e-9ae8-e244726440b2" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="15fdf17c-398b-49e5-ad28-945f9830ffd7" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a19cbf8f-844f-49ac-af77-80ca559565ea" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="6d8c21bb-1b5a-4e01-a657-6e1631fec560">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="fa2c586b-02b2-445f-8ea8-39d36efc014d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9cf6ab9b-fe00-4a80-adc5-0493902d1e43" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="c18657d8-bd6a-4228-bd22-63eaa22b7a64" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f808d2dc-066a-4f82-88df-c245d3900865" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="0d62253b-0a9a-40dd-9b00-2833bbb5a683">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="beb93306-57da-48fe-9f60-ce35a8ea3119" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="743fac22-fc41-42ea-a7c4-cde7650e8821" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="0495084f-f3fd-4556-b7d2-dcb4e3a7de2a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f9c928e4-359f-40c0-bfda-2a37bc9f7d7e" name="Xpath: verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3157ffde-3f01-459a-9cf4-9ef7be2be47b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="25a8b922-8348-4d07-ab50-2e3662c9a7a0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="8273aa94-4170-4178-ad8f-472138da1833" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="71f716ec-4dea-4e7e-9ee3-333bfa183716" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0459aa41-36cc-4a3c-925e-9cd302de2407" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c07f5726-a811-4f21-b0c8-368e078f6dc8" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="957db0b6-eab5-43f5-9ccf-a934308bdd20">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple NotContains" id="3cc84ce7-892d-4037-848f-cb97180dd31b" name="NotContains: Not Contains">
            <con:configuration>
              <token>Performed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="486e10bb-fde5-4f27-b8e9-f1cd22989b71" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTP" id="89d47368-2df9-4de5-ac93-85b388ccca3e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctpRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="B2.9. CTR-CTRA ok-CTCH-CTCHA ok-CTP direct" searchProperties="true" id="a75f6fa9-1128-4804-9d0a-4a791a985749" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="d5f316f9-54c0-44b8-92ae-120bc63c9828">
        <con:settings/>
        <con:config>
          <delay>8000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTR-Sunny Day" id="3f7f98db-04e0-4ed5-9717-da787b212357">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>9-${#TestCase#contractID}</value>
 </validationblock>
<note>Sunny day-sent ${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenr. ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table" id="d9c4bbf5-69af-494e-a089-fc830ba3c504">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7db1c36f-fcfc-4bbc-b1ec-f901a3b0ec39" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0d714a93-1143-4b06-a4e8-9f98de60aa51" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="637d7fef-4b6f-4350-800d-ba7d7d0117ba" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="06f4d597-3d09-45a6-817f-d816cd031090" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="b2c09dbc-a440-4048-b4e2-24a92b1cf275">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="38fc3387-dd81-4dc7-ab1d-94c97577658a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f1d8a12b-1ed5-4bc1-a43d-3bda335f99be" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="8626d996-47c3-418e-9452-d6a4e8a3a5d0" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="14d1cdd7-180b-4a59-b403-95d2afeee428" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="e79e7ebe-3c84-4ce7-83fc-7e0332e6e67a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f57efed5-4a9e-4d5d-9bac-d88d64b28250" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a791b62c-68e3-4fb7-b301-a3fbaac6d1e7" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="c7d2d84f-fcf1-473c-b284-d8c98c532f06">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d8aa7352-7871-4269-99bf-e0e1cee4d057" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="c5554185-e979-4393-b9d0-0b8d9d508199">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="86a055cd-87c0-431a-bfcc-f2f906ee445c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f0e0334a-a74b-4594-a5cc-9bef4817130f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="06d1d8ce-6e2d-46b1-a020-ddda254bdb1e" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="db4996f4-8fe6-4aa3-a128-8a11228750e0">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="24175d11-1521-4387-b93d-659a2633bf90">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_Send" id="0b4eaddd-743b-4ada-9ffb-4a7d0710e4c6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7e3ae428-bd31-4602-8799-47c752edaa1d" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="4e523d8c-2eaf-4f85-9641-987e000987c0" name="Script: SaveST_SXM_ID" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ST_SXM_ID[1]", "stSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="3452316b-c9fd-44d6-85ef-d63f4c418ca8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="64cb4b3a-ccda-45b3-8350-71eb14dbde78" name="Contains: assert donor soap version">
            <con:configuration>
              <token>&amp;lt;${#TestSuite#donorSoapVersion}&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="78c5ae3a-f6a5-4feb-9c1c-5b3955ec6741" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4962a563-b2fc-4cd0-98cc-2e0074dea4d8" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d982495b-aea3-4424-8546-9cf82b1a660e" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTR" id="3fb30e8a-c5af-457f-a6c3-97a8881d60ec">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="3d753d81-3e0c-4346-832c-45f234aef6c6">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="e4e62b3f-e31b-4b4e-b842-4e1f170b1d17">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="2c377262-d921-458d-b152-eab80c489e7e" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f2e55045-604c-4d10-b06c-7039a60718bf" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="c4277e6e-b8a0-4268-a304-a64b41c6305c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="052de4c5-97f0-4858-8f28-784c31b84472" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="f0628062-cc01-4660-96e9-46fecf0ac55c">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="dff79c71-7a6c-4deb-8dfd-01fd983408a8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7f1a10f1-873a-460b-9ff6-fcbea19d91df" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d0dab017-ada7-42b5-b1ca-8f748700b898" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d13a93e1-8d5a-4948-9b28-6602a1aa2af1" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a30d5b47-c44f-48da-8a4c-0a54564bacc1" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="dfdb7528-0bdd-4477-8a26-2d73c3d69f4a">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="eaadd7ca-1adb-4d00-9af6-2019d87b4f9e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7bb9bbeb-4165-4a7b-9092-3cd4c026c40a" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5d785e5e-3655-4b3e-9c0b-cf01848b1cce" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="3253a89d-2914-453d-b5c2-8ace5c9b5291" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="abee6817-4c00-4d6e-a124-852f952ec6ce">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="04aad480-2f09-49f3-b24d-380e0fbaf292" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c5e1186b-6a08-4ab3-bcd8-6608beaad169" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="c5883e51-c150-4412-9ec8-6953edf1871f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b2d335d6-98ad-431d-b038-81b8397f6e26" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="eacdfd1b-2090-40b2-95b4-b4d5de07cc88">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="XQuery Match" id="40cc6fa1-0d78-43c5-a10b-f043ddf625c6" name="XQuery Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="eb3ca4cd-0d91-4992-83c0-13f973c2ed5a" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="2ddcb8b9-efbe-4f5a-9af2-35bbe2669158" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f7568fad-3b8e-4d98-b790-a77aacb40f69" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTRA" id="09709aff-c3e3-4f98-b09b-94abb3960bc3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="65126eb3-5fce-4b42-b832-8882ef7a5d51" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
              	          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="053606e7-8ef0-4e64-92f7-4d02863ea4ab" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="519e7dff-5580-4f66-bb26-820b306b81c8" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1f003e6a-03a1-4e99-833b-da66f1341e4b" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTRA" id="4afdfe3c-fba4-4343-8a2d-83d7d7261607">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCH" id="4f64c6ee-b206-4fea-bf31-ba9bed0db596">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCH" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<change>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#soapVersion}>
</change>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="611515f4-aa5a-44bb-9038-5efb4661d656" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="4c4aa14b-781b-4325-8f36-84e716be7574" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCH" id="75870957-40fd-4504-8469-a64a4842b2d8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="536c932a-ec2b-4a41-a82c-1e0b893420da" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="62a92cf4-098c-4225-b3a3-aaedfc74f454" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c77e4af-f0a1-45b4-84bd-26b35c497e9b" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="34cdcaaf-6545-4ea2-be40-896a24ac8ff5" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller 3" id="8f67ab44-9a39-4957-986d-f30ec179fd4f">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCH" id="383d3111-b029-42af-a576-66e24814dcf6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cef1de67-f91b-44c8-8eb2-02632fc894c8" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="f1a3eb7a-2d84-4ce0-92b5-02ea84e76c93" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="2e9482c6-c513-406f-9221-c9dc7febe7c6" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCH" id="9ffd51ad-a911-48c6-bd5c-f91618008dbf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ddae2cf0-0368-42a1-bada-4e4233433426" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="17a36732-fba0-49df-b03b-ca321c1c0b4d" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="9b75c542-0437-47d5-bec3-55b7fb3507d2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#propDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="dca9796f-f928-4ad7-9f25-001add2a87b9" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="c96c5314-11fd-46b9-a8d6-ddc64a34faaa">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="2f7d35d5-6695-4e22-aecf-3764a6a3f60c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="37df4363-584d-4809-81bd-8ecd535e2b40" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f3cb166c-36a7-49aa-bb1f-ee8be8c8cd80" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="485393f4-e988-40cd-8666-8b87fe48b343" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="163b54d7-670c-474d-ac83-97c23c90c48f">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="63de8a8d-5cf5-4b4e-9c7e-17ac8646f087">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fb13562b-3b25-45c9-bf62-83565a32fbfa" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b741f0e7-b99f-46ea-ba92-e3019943258e" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="36983172-9f27-4cc0-b6ff-65491b5851b4" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCH" id="8b921ef9-3f5b-4739-99cd-3ea19fe9fcb6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="20120f28-801a-4b4b-a5e7-7af80f28daa0">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="0cfafb4c-a2f5-43cc-b995-406bbb149abc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c4d30bfb-c3cc-4542-b887-e7daa215344f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ebaae9e2-b58a-4c9b-a0de-003b8c89de81" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="918b3917-7d11-4482-908a-8d9eb8f9e4cc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57c239af-9736-4c58-9498-e63c0e4cf7c3" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA" id="14599772-e6f5-4db2-8b68-f47824241f63">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="e7e7e511-7c6d-4dd6-814a-8bbeb3d2c810">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f6c05a55-b26f-4bd9-b303-56461538a8a2" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="74a35f65-5182-4f24-98a9-1e5e0391bbd2" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b2830046-1c9f-48e7-8767-c86370a584e3" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b6f9264b-b68d-4956-a328-72471efe5330" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="32f6cf5c-946b-457f-9c13-4ab824c8f2d1">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="d8c914a9-76d3-422a-9608-bbbf3ddb53cb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d0e1985e-6e3e-45cb-b8b0-b45a21f9a2bd" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="fad17aaa-1f6a-4473-b040-bdb4a0c1356f" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="b7dc5ab9-72ae-4e59-b585-f68e4af8b77b" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="648bfb0b-835d-4960-a00e-e388f21881c0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="64a67ad5-82d2-4b22-9a8d-02b9ead1c738" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2fb6578c-865a-470f-aeea-249ec110fc48" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="3f7d917e-1ebb-4431-8c7e-b90981af1537">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d39811c4-2232-47ee-ba08-6ba3ca210866" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#propDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="af8a9c23-57b9-4f46-a2f0-69bcd2ab4af3" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="e8c5ddbd-7ff5-4f0b-a997-af654bacff5b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="8af8dc75-df09-4ea0-b7eb-67cc0baa0261" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="bd859157-dcc5-4ef6-9e3c-d9b4efb1f01c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7a0a25ac-22bc-4ade-88cf-3ad103b2398d" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a100f9b7-bc3d-4ba3-bc76-516b894226b4" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA" id="18ad3471-62cb-4f10-b9d0-393c36cac6b5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%&lt;blocking>N&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#soapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: wishdatetime">
            <con:configuration>
              <token>${#TestCase#proposedDate}&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no proposedatetime">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7e51312e-ff87-4be1-87e0-9fc542f430d6" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         	              <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="19f6e252-7356-4c05-9f21-4ac8436f2557" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="18c6cfb2-213b-4206-b98f-7d89ed896be6" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCHA" id="f0426843-3c22-463f-bd79-e8d1207c3e7f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP" id="bcead640-ba45-46d0-a22f-271906619bf0">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <sch:SendMessagesRequest>\r
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>\r
         <sch:Messages>\r
            <sch:Message>\r
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestSuite#TimestampNOW}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>\r
            </sch:Message>\r
         </sch:Messages>\r
      </sch:SendMessagesRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="f71891b6-3eb8-4691-8dcf-6ff07e8a8e14">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdf71928-4f2d-439e-9755-22b3e1d12bf1" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4dcac48f-4ae9-4d7c-8bb3-a374c5278725" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7b79d9d6-ca0a-4e44-b56f-276ad51188e9" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c1e9649c-7c47-4069-9adc-768ba69030e7" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="7b7b1896-2765-4c44-baba-3e31384a9bcf">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="6b07b7fc-e500-4e1b-9fd7-94081c93aa19">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d97f5a0c-1691-4fef-b90a-be122d568dc2" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="e88044e5-e189-4cb7-91b2-da9332eaf6c6" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f02a9486-c71b-49f9-bc89-5796a6135cbd" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="1f75caed-2b0c-4614-8c39-8eacbd7f5fd1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="44bcd1c8-107e-4c9e-bd74-1dc17c3e10cb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6ff99ba3-5330-4bcd-b803-dd187c4b1449" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="542f155b-202f-4fbf-adc3-182abc7bbb0b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Completed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="031d2b57-2c5e-44f1-8519-2ad790ad910a" name="Xpath: verify ctd_ctp_buffering is false">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>f</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c4bd875f-4f7f-4f59-a9bf-7a3068419cb4" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="03cf3fdb-d85a-48e2-b60e-b5047eff81a8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="8273aa94-4170-4178-ad8f-472138da1833" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4b5160c8-7fc3-4231-a254-0eabff2e6325" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="bb1c223d-972d-4a25-bb1d-9c9ebc5ff0b6" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8dfe5381-3e37-428b-a905-b71e962eb763" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTP" id="7b7a4cc3-c4e2-4f4e-9a26-4b31a82cfb8b">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="b643d98d-cd48-43cb-9f01-7a3ca9e442c5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuit#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="f8e35c89-0c68-4076-bce8-6ce48a59016f" name="Contains: Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="43016be5-dc37-4d0e-833f-6422f76d414c" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b2d0a195-6d53-4616-b3d5-0c93d38b4b52" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="978db4e7-f348-4e5f-b8dc-8685b3b05c95" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTP" id="87bddbf5-87bc-4c52-85e7-4b1d05dd17e8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctpRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTP" id="a5e0faae-e235-492e-89b3-ae7db3c3a912">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="23711603-e3cc-45a5-b7f4-a0b132fd8f43">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8939b607-7b85-49a9-b6b8-864afc85eaa6" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="888941f9-a9d1-4ced-8ddf-3dfe4dc0339d" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTP" id="2daa685c-416d-4d04-8523-adca8c035713">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctpRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Performed received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Performed received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f5928a95-0238-4aa0-8e9e-056b7f1d5fa9" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="f756ec33-b328-47c0-a470-dcc506a0764c">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 240.seconds
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="B2.10. CTR-CTRA ok-CTCH-CTCHA ok-CTC" searchProperties="true" id="8ec2b972-f1e7-470c-938b-b42124740b13" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="110b038a-c69b-402f-aa44-6b6e534c0460">
        <con:settings/>
        <con:config>
          <delay>9000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTR-Sunny Day" id="01c317b6-f3cd-4cc7-a3d7-e3a11cf0fb2d">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>10-${#TestCase#contractID}</value>
 </validationblock>
<note>CTR sunny day sent ${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion} - linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table" id="419e52e0-187b-45e3-9fed-d4123604aa23">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3f268f83-511e-4e1f-ad7c-f26e4693b75a" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="994ba593-3b5e-4ba2-b1c6-2c2494393006" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="43003981-c70f-4bf0-a856-9cc35dbde05b" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d14c5578-2874-470d-9da5-38e9ae4d6423" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="c11af716-2f09-4360-a717-ad5c36d8dc55">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="1182473b-70da-41a3-ab53-b173c4888ee4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="28fd093c-849c-4672-b3d3-cab89ef3c3c4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="c1ccd63d-7915-4d51-a8a1-cb414a529dd7" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="1f91c918-e8e8-4139-9f84-c669920ed282" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="35071dd8-9647-426f-ad19-004ccfb9df84">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a35dbc25-3cd4-41df-bbd1-9d9e2e972e9c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="20686e84-64c7-4fe3-8bed-50315b0200dd" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="b28f8f49-9c1f-4a22-844a-4a0481e8cc3b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="445e3a63-2c2d-4972-b14a-ecbef1d48b52" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="8b71076e-73de-46f5-8152-6b1eb337dc49">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3135e58a-7812-4d8f-b764-01a98f3b02ab" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5855f306-53d4-4e80-be34-304deb708dcf" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="53aebd22-47c2-4f27-ab49-205d5ad5b29d" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="6f397e31-c58b-4546-8a4b-61785a5919d4">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="4bc7e3ae-a625-428b-8f9b-9be17fd6c412">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_Send" id="422b8c5e-c30e-4d35-a3d9-7104128beed0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="eaa64202-d55a-4f0c-aca1-02ab3c55aa72" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="691bea70-bee5-4ec9-8b6f-9cf93bd0b73b" name="Script: SaveST_SXM_ID" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ST_SXM_ID[1]", "stSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="c227a712-fa6c-4325-ba9c-684549b855d1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="64cb4b3a-ccda-45b3-8350-71eb14dbde78" name="Contains: assert donor soap version">
            <con:configuration>
              <token>&amp;lt;${#TestSuite#donorSoapVersion}&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="41fc16c4-fc73-44e4-8d09-6c88fe435eea" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9689c8c2-3de6-4978-a7f3-ac694efe059e" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6db0a4b2-c48c-4401-8f4a-e24931a00189" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTR" id="33c52caa-ecb5-4dd3-9027-d121c9bdb7ff">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="63b73489-20eb-4bda-ade9-b104d4d73f73">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="8466d2ce-9911-482f-be3a-830e35c521f1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="3f301ecf-0060-4d15-bbf0-d13078dee70d" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4e92c0d2-9aef-4316-b28e-6f9d4117347c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="c83cfc9f-1bb6-4234-a05e-1169f20b6bd9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b9b1f073-6546-41c7-9bca-b87aca4b3f01" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="e8ecb4e1-a479-472d-85e2-902a96eabd3a">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#donorSoapVersion} sent ${#TestSuite#soapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="484f2247-447f-43b2-bae9-5b6b46ed3bda">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5683c5d0-3890-4237-a619-4c0ae5b2a739" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d663eae2-5cef-47c0-8b14-775dbe358bcf" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9bbf7e0f-c8c1-4259-ba4a-e60c85ae55df" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f5cf9106-824e-4b7b-bc75-f14d7db7caf3" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="e145e0b2-681d-4e96-9858-8b8aeb7438eb">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="41c6d30e-cc77-4c4b-969b-f1ca077677ff">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9464ebb9-9a63-487e-bd72-c10d582ef16a" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="483b9a7f-66ab-46b0-96ec-e5549c6bc135" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="85ad1969-fdce-453a-96e8-f78e1d2fcba7" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="ad67b5fd-0032-4e98-be30-9a1e5daa928a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cd2ab4c1-fccb-4527-9a4c-d23f6574aaef" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2035c21d-8f40-4b64-bc97-b62f1e5a09dd" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="040aeca1-12a2-4b4d-abaa-930ab8227a87">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="59a46f81-aaf4-4d2b-8d1d-1b0d526f78c3" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="4f78e305-dfdc-48c4-808c-fb0e7564522f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="XQuery Match" id="40cc6fa1-0d78-43c5-a10b-f043ddf625c6" name="XQuery Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="37d11723-b373-4096-9b2c-2572bab27762" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e0286478-78f1-4f71-a1c8-cf6e587f646f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="60ed4963-b5b7-496d-ad7f-5a9709fc6648" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTRA" id="b2bb81f3-5d0e-414e-94bc-180d87169f81">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="65126eb3-5fce-4b42-b832-8882ef7a5d51" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
              	          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9b077e80-8e19-412c-bfba-5d95eb2e45ae" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="2ab0eef7-bbde-4bc1-b568-2cc456223a81" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a4355a78-2121-49ca-9fdc-6baf9429817f" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTRA" id="9d8d782c-2930-43f2-aae1-4fe7046ed7bf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCH" id="9a4c16ab-2f48-4567-8232-ff32bebec68f">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCH" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<change>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#soapVersion}>
</change>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="611515f4-aa5a-44bb-9038-5efb4661d656" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="4c4aa14b-781b-4325-8f36-84e716be7574" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCH" id="8f262df8-bd5d-46ce-96a3-98ce03db0b11">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3e6adc0c-9cff-45d1-bca8-39deae854790" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4724dc43-6a77-4ecd-a33a-f8b0ec2737e1" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1fa1e72f-a68f-499a-b1de-dc363e0b3304" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="89277294-6ca9-4fb6-bfbc-dc075831a33c" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller 3" id="841dffe0-4f73-4f69-9280-b107c069f34b">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCH" id="efb36fd4-e6d2-496e-82cb-601d75a8b38a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5b69eb5f-2877-415b-83da-020397e31d11" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="0dea9dbd-196d-4ce8-9477-f96095d70c7d" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c0bc433f-0f13-419a-b131-0a0af09f515f" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCH" id="9514363d-cc38-4937-b8ab-16c0301f652d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="2542a3b8-2dfd-4ce6-96e0-675d9adeb559" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="60920dc6-0b23-4de9-99b9-b223782049ec" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="4e2946c9-71d9-4113-87f6-e25387eee56d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#propDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b784f168-e014-4eca-b631-cf6e5fb6572f" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="3a5b9c65-fc48-40b6-87a9-f5241141ebfd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="2f7d35d5-6695-4e22-aecf-3764a6a3f60c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="bdfc4ce7-1a62-4193-b425-c5fd360ae52e" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="127afc5b-da6f-4ab7-9858-c2a6b8b95b72" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a37eea1d-5ec6-440a-b322-86003a4edbce" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="4f85d5cc-e64d-4200-b325-c40b42c2ba7e">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="dec2f99a-b15b-484c-a04d-30773965fd49">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fb13562b-3b25-45c9-bf62-83565a32fbfa" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="a01e3919-6d7e-4155-b1db-49a6cafd80be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="698aae0a-1828-4af1-b3ef-285b16add0d4" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCH" id="b591c152-be45-467a-8538-78d4cfb7fd03">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="120cbc8a-5cd8-4aec-9da2-a25bd4882dc3">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="abd73981-7363-42f4-8417-52f2b7c607be">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="d403b124-0ae3-4980-8c54-bce38f11f8d1" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d31e3137-4cc5-4f98-a437-dfa10683f014" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="c2e7f1c6-5bc4-4044-9384-af04480290cc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9cc6e8c7-d369-4819-a1ac-71f0ea59b690" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA" id="01cb085c-a2fd-478e-8b24-470e809d5f0d">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="79652deb-7f3b-43c5-8d23-77d2e1ee0bb6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fca0742d-08ec-46f9-a877-59717db2bf2d" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7956cdef-8e8b-423c-a089-a3efaf4e3f5b" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="32573c3e-139a-4680-a70a-f9c220de4bc5" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="16843e5c-45c0-40c5-9e5a-f73fc7bf6ec3" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="e433df94-2691-4461-b91f-224f7c4a0d49">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="93409328-1635-4f9e-b67c-2277e5068821">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4f22c499-49e6-4d12-9d32-fd4f09295b30" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="c84769ce-5a40-4596-9531-a4c5ba535bd5" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="6f6c32a3-7d08-4a98-b1e1-c2efcd0397ef" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="c25cada6-8601-4f7e-b683-e3601e7805c9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4daee3ea-1219-405a-98d0-6a7f216e2e12" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="907f7ab1-395f-4b3b-bf64-465a3571955a" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="1748cb5c-cd58-4747-90e3-b802c0072c0b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="85fd4c3d-fd6a-4969-92b0-a12048a141fc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="6f118561-bd55-4731-a270-b8f55899bd5d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="8af8dc75-df09-4ea0-b7eb-67cc0baa0261" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="223b79d8-f9af-4881-a28b-c1e2779e099c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d95815b3-5a7e-4a93-8bb9-1a0ddf20ed62" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="fdf36f0b-f31f-4f48-bab7-6ee2a54fec4c" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA" id="ee43e2b6-4086-471c-ac92-a2680aefefbd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%&lt;blocking>N&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#soapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: wishdatetime">
            <con:configuration>
              <token>${#TestCase#proposedDate}&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no proposedatetime">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7e51312e-ff87-4be1-87e0-9fc542f430d6" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         	              <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="19351c99-df58-493b-8b90-8f3155b1410f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="663a010e-62e3-40b2-a2f9-892bdce03d9b" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCHA" id="6dbeabfe-9370-4892-ba24-fe3c18f9f415">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTC" id="3fdd02ed-c766-420b-90ff-eacacb2b1bbb">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTC" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <sch:SendMessagesRequest>\r
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>\r
         <sch:Messages>\r
            <sch:Message>\r
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-002</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<cancel>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<note>Cancel sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</cancel>
</body>
</message>]]]]>><![CDATA[</sch:Text>\r
            </sch:Message>\r
         </sch:Messages>\r
      </sch:SendMessagesRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTC" id="148045c8-1843-4451-8b8a-6800c560e783">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>cancel</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c58e5601-f93e-449c-ae18-6b1cdfb8fe32" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8e6e7b8c-aa31-4f0c-9ca2-b0ddf9ef9974" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7903d164-03cf-4854-be47-184df7e46ec6" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8cdb08f7-b772-4163-93bb-9d56b77737be" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="793913fc-2f60-465a-8f59-d79d96d596e8">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTC" id="23be149a-f9bf-4f27-89fd-93fd9b5df8ce">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6bfa2e91-bdaf-473f-8eb9-9e0e57b09e6d" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="876e30d9-2bac-4753-bfa0-2fd451510fef" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="718e0d2f-cf9c-4c9a-9767-677ba8515c1b" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTC" id="cfb91c9a-95b3-4ac0-b728-2dbf25f2d120">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="585d19c5-ffc6-4fa9-a77d-af81bb1e1366" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="63286ef5-a8c6-4dcb-b6f0-7ba39775f1b4" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTC" id="08b18b6b-2453-4eb7-bcbc-3337fbd02e9c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Cancelled</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cd9e364d-765e-45fe-9be1-9ce90556ee6d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTC" id="5d80c85f-93c4-4736-b743-645e4407c44a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=11 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="b199af58-886b-4a43-943e-d947f7528217" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="34eb4c2c-931d-4890-9f13-768fa0c60ad1" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="483b915f-f617-444c-859f-6120e8b66f9a" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="72e73908-3c96-405f-8f00-3cdebc20bf91" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTC" id="fc58a7ce-853a-4271-9ce0-fd5876e294d8">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
 
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTC" id="f7a8a001-ca13-462b-adf7-6a6e328dedfe">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#contractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1270b552-020e-4693-a671-1f97f10b284c" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f8dd905c-afcc-42f6-9b80-a65fc833f991" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7acae26e-cacd-4b48-8074-2a67c6ac7614" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTC" id="9e1b33f9-0b32-4a54-911c-acb2b35118b5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctcRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTC" id="94352217-8093-4885-b854-fc938755d29b">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTC" id="e9a99730-c2e0-4e30-9e54-c4d427de1d20">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="762da31d-6e85-487e-b02e-ac3065f25d00" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="93130a62-2c19-4453-a293-9e3e3e55b0c2" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTC" id="9a2da8d1-5969-4d90-9d62-7b35a4afa04a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctcRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Cancel received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Cancel received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1400c290-eb02-4843-8da4-646c67eab35c" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="d1255547-4496-420a-9de8-053ef522db53">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="B2.11. CTR-CTRA ok-CTCH-CTCHA blocking-CTP buffering" searchProperties="true" id="2c08a07b-1670-4cd9-9fd6-ed237b848a64" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="fe46836a-77b4-43b0-9394-fc1b6a85b333">
        <con:settings/>
        <con:config>
          <delay>10000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTR-Sunny Day" id="d4b88e59-562b-4196-83c2-da1e72c51303">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>11-${#TestCase#contractID}</value>
 </validationblock>
<note>Sunny day-sent ${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenr. ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table" id="9c6add18-5b83-447e-91a2-daf57e2b30b2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9a01d789-0412-4ce3-b8bc-049aed2fd730" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="779f438f-c7d5-48a7-bee6-88463af131a1" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="95ba4139-9a9d-446a-8ba0-ddb9800cf011" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b9fb55ff-6b32-433b-98e1-7d433aeb4c01" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="97449c6e-0a1a-42e7-a6e8-d42657a56acf">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="26a3c8ad-543b-4a6c-baee-842a0320a206">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d2f310ea-aa0b-453d-8d97-2e71cf005491" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="009a8a3b-19d4-4e36-82a2-babc2f5f05e2" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c5c12629-ecf6-4289-866a-5d7fcd70fadd" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="b9e50f2d-182a-4cfd-a5de-a2ee3f6fe812">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3e0850f0-2c7c-4ff9-9f0e-be9d9c7f7efb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a450e6ef-ac38-442b-81f8-11379d671c37" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="f07478df-151a-45a5-9e74-23c11c53d6b1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8bf2a925-e0b6-4303-83e7-d75c802f18fb" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="d32946de-a890-4e40-bef4-9ce3119d18e4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="75167b58-6305-4328-9adc-592eba474e31" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5bc42729-914d-45bd-970a-302fb06f3f10" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8c1ce420-c5c6-49e5-ba06-45c114741ea4" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="f38d7ef0-fbe0-4d26-ba1e-001c391735d8">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="9139353c-030e-409c-abb4-a973c21cdc15">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_Send" id="3ae13a7a-1d1a-41fb-b58c-341acd999750">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="129e1ca0-868e-443e-b25d-5f64834299e0" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="dddb580b-24b9-439c-ba62-8729fc0c515e" name="Script: SaveST_SXM_ID" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ST_SXM_ID[1]", "stSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="8cccb827-2d72-474c-86e9-29309b45e2bb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="64cb4b3a-ccda-45b3-8350-71eb14dbde78" name="Contains: assert donor soap version">
            <con:configuration>
              <token>&amp;lt;${#TestSuite#donorSoapVersion}&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5d6b928c-c588-4762-8165-b2ab8ba9427a" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3be40bc2-6191-4d40-8879-42fd73c7b192" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="53b3ea13-5c99-4d30-a4bc-d367d23e125a" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTR" id="0a58a171-7962-49b4-82fc-76b7e3fbbe4c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="375ad0f0-a4e0-40c2-8a26-c904942e346e">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="8bd640c7-71fb-402a-b754-ab92cdcf6964">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="4f44a03d-456a-4f74-bae7-d254ef247ff9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d26bf83b-1bde-4b3f-b9c6-93667f273699" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="af9a076c-ce26-4d8c-becc-47c105b25f83">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="72d6f278-2854-4ee1-9859-dcf46c1b1ee5" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="35280ab6-c131-4879-adef-1ba2b08641c8">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="03f60e41-9804-443b-9235-4dc55b30d26b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b95b9404-eba8-4423-b7cd-c8caa9793706" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="6170fee3-d7a0-487e-beef-3b671d01fe64" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f1ecab24-d450-42cb-ac93-0bac32f74301" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="bee4d3d9-74ee-4107-b2b4-ecd6cf58e24a" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="38280e77-e4aa-45ce-98d9-9e478e4bc6b1">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="6ef7fe1d-6e1e-499a-8cfd-9d76d8ea7b5c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fbdca40a-26c8-47e0-934b-984bcb6870c9" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="e2067e7d-813e-43c9-a9ad-63926d5a861b" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="44e9f58d-51ea-441c-90ad-71e30f5f6529" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="51388dce-98e0-4d9f-9590-80352c5ae1e9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5da4761d-a2d7-46c6-96f3-64c730f1cfec" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="45230d37-72b5-46a5-a23c-13b34b2556c6" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="bfdd9705-041c-498e-9105-4788b321f89a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="08296dfb-af3d-4442-8646-0d6818ca34d0" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="e0b08f33-e503-42bf-849c-b3cddafeb396">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="XQuery Match" id="40cc6fa1-0d78-43c5-a10b-f043ddf625c6" name="XQuery Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c38e5fe5-45f5-486b-a04c-e62361404406" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b8651047-ec67-4deb-9cb6-e138b2c7b702" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="db27d021-3473-4676-8ad3-bfa8da474028" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTRA" id="edadef42-3ae0-40b2-b06a-9c2a374f471b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="65126eb3-5fce-4b42-b832-8882ef7a5d51" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
              	          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="193e716b-6eec-4252-b9a7-54b9f70a4da4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8f6d82e0-ac8a-4b70-8786-8d2dc806e62c" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8f5c8906-3266-42d9-bcb4-e40af4775fed" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTRA" id="ccb487f5-76c9-4d5a-ac9c-062aec0aec59">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCH" id="f7c133f6-ee22-4301-a37f-5d893597fb4d">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCH" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<change>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#soapVersion}>
</change>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="611515f4-aa5a-44bb-9038-5efb4661d656" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="4c4aa14b-781b-4325-8f36-84e716be7574" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCH" id="81a14407-906a-4d00-b0ce-5aa77b8dbded">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4ae1278b-a415-4b8b-98f3-a2de9e9b6244" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="64527374-a946-42dc-9a88-0d13d9ef8f07" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="79c7f43b-5ac6-49cb-bf62-80d7e16bf8bc" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ad009e2d-7f14-4260-9a8d-bae696973f0a" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller 3" id="bc92a73a-3c0a-4ca9-9409-9bf6fd542f3d">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCH" id="8d860b7a-5c96-43c8-b54e-37a7fd14d806">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ee3121df-2d39-4870-a916-a68311473ea1" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="582d9d07-7306-451a-b136-b8697067104b" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a83cd523-dd92-4153-ba7d-390bf24af4f3" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCH" id="cceaa89c-469e-4fbf-bb78-5d5745ad7634">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="01920448-e643-47b3-9ed6-4594f443267d" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c128eb7b-ac88-4398-9205-696858919ce5" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="59cb623e-ebfa-44b4-8ef5-2a44bc4ded00">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#propDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b7c72c35-5d82-43e1-ac36-d6cb5306fc18" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="01608a27-aa96-41b5-b89b-ea3f51cbed96">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="648c6061-5dde-4376-a0d5-fd2265f519da">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fb13562b-3b25-45c9-bf62-83565a32fbfa" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7f96944e-1b36-4fc2-9884-cd2f03fce8b4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ec920ead-2432-4ab4-9293-032a26bba5bd" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCH" id="9207cb44-127b-4c72-826b-5b277bb3e567">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="5886d550-b1d3-4c87-8e74-1b3dea30d982">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="d39b419f-e671-4903-9f2a-21448f7a7ff2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="f9bdc0a8-a73a-4ee6-aa02-07b9dcbd7463" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9d005440-a2f4-4bea-a599-1a1d529ea1ba" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="20cfc8c8-945d-41ad-8259-609e5c171823">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4c81e16a-348b-4e32-b77d-590d7412f928" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA" id="fd2539d0-91ce-43f1-a995-ad56a3c71333">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<blocking>Y</blocking>
<proposeddatetime>${#TestCase#ctchaProposedDate}</proposeddatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="ee47a13c-00c3-4849-b87b-e95c8c20122e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8c0454a2-ea47-4b6a-b191-2fe16595949b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="af6e1dcd-85c0-47f5-a89c-83459ab12bde" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6eb39dd7-eb51-4ba0-a815-14b5c426570d" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="86d2a305-9f3d-48b2-a3a9-e0605935b273" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="b642b781-4919-40a4-83a8-4b3ed9cf8076">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="97a02a22-ce18-4bfe-90d9-fdf1b7327216">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="bb10af1f-abc0-4b80-91a1-7f8e2bd4e46c" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="510d691e-b3f3-4e9f-a32d-f0577a79a7d7" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="827d06cc-9efe-464a-ad6d-90493af9e689" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="28f6fde6-9c31-4e50-ac65-88f56e5ee258">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1ba781f4-0fe7-4d4e-8c87-f360a7457f16" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3c5860e0-5dd2-4688-b930-5adfa01dd689" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="5bc3968c-6491-4aec-bdc5-79b0bcff2edc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#cwishdate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_CTCHA_PROPOSEDDATETIME</path>
              <content>${#TestCase#ctchaPropDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c39a6c4d-9517-4e36-a666-d1764121f666" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="5bb4388e-c1b3-4cfd-8f25-2e595e8e85cc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="8af8dc75-df09-4ea0-b7eb-67cc0baa0261" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="046d078d-8a1a-49d7-8993-b9700fda6a20" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f0577dae-ef06-4e40-8876-fb91f4d587d8" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0368042e-fbd9-405f-b19e-2caef9acb2f1" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA" id="ac02c453-8ecb-4d66-bd7d-b760126d33a3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%' 
and sxm_xml_message like '%&lt;blocking>Y&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#soapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: proposeddate">
            <con:configuration>
              <token>${#TestCase#ctchaProposedDate}&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no wishdate">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4e3586cc-73e8-4cc0-a4e3-fb31eb644576" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         	              <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fb352a75-c9c6-4f37-9a12-de202037e22e" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="76f7cd65-cba3-46b9-a5f1-39a2ff4f0548" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCHA" id="3f2c1365-81e6-4a30-997e-4e22a2cf322c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP" id="c5027c10-f022-4651-9e62-f2ec314048cb">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <sch:SendMessagesRequest>\r
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>\r
         <sch:Messages>\r
            <sch:Message>\r
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestSuite#TimestampNOW}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>\r
            </sch:Message>\r
         </sch:Messages>\r
      </sch:SendMessagesRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="08a9d75e-97ec-4c60-91aa-900ff345c0e2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6660eff5-bac9-49fd-b52a-c3cc7a5ed62f" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="91132d30-bf85-4e7d-9973-f11bd6f2ab5b" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="87d7967a-f099-4cfa-98ac-20113d907940" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="77533153-5495-4497-804c-e1d94dbbf620" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3a3abc33-244d-4b25-bd52-e7fd5acdd72c" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="cb179d43-55fc-4916-ad71-ed982d73091e">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="a25e6af6-b34a-4645-b71d-ab41608933e7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="49569fac-1d25-4156-b777-c1b0b75e873d" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="73c3ad17-cdb6-4cff-aee4-b665fae754d3" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0a07e69e-b79a-448a-9e7d-243fbd7536b3" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="b9d7034a-039e-4a70-8315-6cff79de3800">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b401cf7e-0582-41fb-8da2-d3759a0d90cb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f2f70f4e-7498-42b0-94b2-e2412b923fd5" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="2f70ab99-a8db-4640-b012-73076f62321a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f9c928e4-359f-40c0-bfda-2a37bc9f7d7e" name="Xpath: verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="bd67ca22-e711-447b-88cd-e77ae08d14c1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="84480495-3788-4f07-953f-54ce996e9391">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="8273aa94-4170-4178-ad8f-472138da1833" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="96cd2223-05ff-4e2b-865f-09501454fb2b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="88bfd1b4-e7e9-44b7-9690-46c74774c89c" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="5dc8578a-2bf5-437d-8489-3cc83ac1aae8" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="6796651a-ceee-4d73-bbab-269ff47cb151">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple NotContains" id="3cc84ce7-892d-4037-848f-cb97180dd31b" name="NotContains: Not Contains">
            <con:configuration>
              <token>Performed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="94d9c25c-44ad-4e07-adc1-38f060a61d5f" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTP" id="f02a48db-2418-47cb-a18a-4837976206d6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctpRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def ctchaproposeddate = today
use(TimeCategory) {
	   ctchaproposeddate = ctchaproposeddate + 3.days
}
def ctchaproposeddatestr = ctchaproposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctchapropdatestr = ctchaproposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("ctchaProposedDate",ctchaproposeddatestr)
testRunner.testCase.setPropertyValue("ctchaPropDate",ctchapropdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="B2.12. CTR-CTRA ok-CTCH-CTCHA blocking-CTP direct" searchProperties="true" id="e060a620-b6ad-4823-9e3a-b3754d94fb49" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="685548a6-f277-452f-b8e6-4764bf11bddd">
        <con:settings/>
        <con:config>
          <delay>11000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTR-Sunny Day" id="269f0513-5185-4ba3-af77-60fbc1798f44">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>12-${#TestCase#contractID}</value>
 </validationblock>
<note>Sunny day-sent ${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenr. ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table" id="d3f86563-976b-4a2f-816d-5c2b466bf66e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ddf9caf9-d382-443b-b909-899e0cba3b40" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="374ec9d2-dd4b-4a72-bcfb-0956d8cfd84b" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="18ac3ed8-c6e0-4a19-b194-80758659120a" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5499f820-4d08-4604-b579-74558c10c2cf" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="38de111b-f617-4e4f-b760-3b7c199a6ef4">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="2306a371-76cc-4cae-be7d-fb1e3ea80bef">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e2ababa0-b69c-4e92-a8ab-646e7fa3c3fc" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="a8e13a17-4931-4716-a743-60afe91568b2" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d171eca7-ff1a-4e5f-a97a-84868f6f32ed" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="fceb921f-6a0a-4eeb-887a-035f37e9caa9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="90de6c58-ce01-40f7-8601-320c181b4c6a" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6f97994c-fe88-4225-a5fe-6b03e5f2f4df" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="bc3643b3-3ab9-4bec-968f-81c6792e1395">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cb8b1c13-c84f-40a3-a5e3-04efa971192a" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="8129643b-efa6-4cdb-baa3-c7a13911496d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="94715765-d952-40c7-9581-5446d3002a1e" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="497080d3-7c46-4c92-9610-7a247551f1c0" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d36cfbf8-880a-41a6-a7c4-eba15e457c14" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="fe9506b8-0543-4b60-9939-4fd4ca14ccf5">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="ac287ea5-d432-4068-9a6a-a5161d3d8ec7">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_Send" id="abd89d63-2f1d-49a9-835b-3363704f477b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="a17e98c5-3441-40b7-84c9-c9025b0da6a7" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="561c996e-a46c-4ea3-a7aa-5b4a5a0fb0f0" name="Script: SaveST_SXM_ID" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ST_SXM_ID[1]", "stSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="0095bd0b-bef0-4e5d-8aea-6df9628fa939">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="64cb4b3a-ccda-45b3-8350-71eb14dbde78" name="Contains: assert donor soap version">
            <con:configuration>
              <token>&amp;lt;${#TestSuite#donorSoapVersion}&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9c83ecf5-f557-4d08-a034-3055b5fb2e87" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0fd802a4-632d-4b31-b2de-0abf465cc52b" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8d259c17-bd72-476e-b037-ab9d66d7bd5f" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTR" id="e501c960-8951-4a61-bcb9-ceab83b0f8e7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="bf7a3d8a-9245-4a50-b145-90b27f5aea1f">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="a11d070e-5f30-4985-943f-cff908913126">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="d5d0187d-5491-4688-ad97-184401a15758" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e4b5f942-319d-4107-a900-ef266e51c5c8" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="06d7fcb1-351c-4a08-947c-152e6cd51d92">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9baa275f-6981-46db-91b4-4ef6783a385b" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="a69ccb15-069b-4667-9e6c-0aea9a5b7924">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="70329d9b-afa9-4936-8f17-a7f872f78a90">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="bbd7e90e-4604-467e-a622-5a89338fbe41" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9f0b646d-4a6a-4b74-9019-b8e6d593a9a5" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8b360e0e-3a90-4ddb-b425-47382878a95a" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c750a461-f19f-4f7b-95f6-d8a9fbc5caf8" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="55670b76-87e6-42da-beba-d232b34f35c5">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="29195eee-0777-492c-89b6-044854b750b7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="564e76c7-7b2b-411d-adc6-014f3c488a9e" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="c17799d1-21c3-45d3-bfec-32e2ada56d5e" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="63e9224a-65fa-4d1e-b3d7-df0be4afd5da" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="f552fa6b-8884-46e4-af26-eadbd8a10d14">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="2e052ec7-2c61-41b0-8f93-cc0085efc6e8" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9799605d-7f8c-461d-a27e-de435f31a869" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="efa3dd96-8e09-467b-a7c1-3574773ca89c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="a979f89d-780f-4822-9a0b-3c14c02041d8" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="d9db10ae-59b6-4aee-888d-9ffd2bd63036">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="XQuery Match" id="40cc6fa1-0d78-43c5-a10b-f043ddf625c6" name="XQuery Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c6b86378-99d4-4342-a8c9-189b4cbcd5f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="06dd0708-0d2d-409b-a896-609b2b8db2c0" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0b70d6c7-397f-43a1-b310-d8bb6e0ccf43" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTRA" id="039fe54f-241e-4513-aa0d-b9c9e34a4d65">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="65126eb3-5fce-4b42-b832-8882ef7a5d51" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
              	          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4a080b0b-0d95-4175-9526-e493eb5ec014" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="db9efba8-92a3-4543-a07a-025ae1fc2689" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f59a0e11-2b65-4230-ae2d-c39892a219a2" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTRA" id="78c1a53f-a752-4589-a380-db8c2d9b493f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCH" id="69909d5e-838a-4a75-8828-c99f3f837c11">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCH" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<change>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#soapVersion}>
</change>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="611515f4-aa5a-44bb-9038-5efb4661d656" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="4c4aa14b-781b-4325-8f36-84e716be7574" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCH" id="55fdade2-885a-423b-b9e4-924db71d6eda">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="55e70613-7a57-47b3-ace3-103b5f08eb94" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="230b14c8-34c8-48f6-b5e2-1079fe01d5f9" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c4856776-8b75-4f68-866e-dba563bc62a7" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="365de7ac-2bfa-4b56-8b90-dfb7006a3ba9" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller 3" id="a4d36502-80f7-4da5-bcf8-f9af4aedc8db">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCH" id="f3036aed-025c-4c2c-9b9e-1e53fc900005">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c3c48ad0-9aae-4b98-82f8-bef1f802eb53" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="e4f51202-118a-4bdd-8b70-f79bf3001e8f" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="9c23fc35-5e66-49d9-867f-c2314c5250b4" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCH" id="0503ba3f-1155-44f3-bf8a-4c8621915597">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="232e91ee-9b45-4e78-9185-a577b64a95ff" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e73fa650-7d9f-4030-bac3-ab1bc9edab78" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="28a2204e-4b99-4da2-a7ff-1494e1b0c25e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#propDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="210b3227-4e13-4719-9485-d8181b8694ef" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="b978356f-3e9e-4575-842a-6f1cfdb048fd">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="fb94d3f2-cf8b-4e68-b850-babacb8aeb22">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fb13562b-3b25-45c9-bf62-83565a32fbfa" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0d437220-c1a1-4e52-aef4-d267bf3b7e4e" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d4263024-884a-4dd6-876c-21ffc3e55625" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCH" id="fb678730-6472-41e1-8c95-6d9b8b1d904d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="06234af8-096d-4199-8fc4-959b4645931c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="75079ceb-d8a6-45ca-80f0-099d7a5f56f1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="83dcd833-a36c-4a55-b61c-bde185a571b0" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="149c1f9e-9efa-4d97-a018-56f9c255451b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="0b94fb0a-cb9e-4eb9-8006-61b0b49ca074">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5816f322-3191-4868-93ae-81ca47c598d0" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA" id="65757fd3-92d0-4440-82c5-2e05921213da">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<blocking>Y</blocking>
<proposeddatetime>${#TestCase#ctchaProposedDate}</proposeddatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="ec7f2824-5594-4238-802e-269a89bf2850">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f26a826e-e719-480d-be85-0e8e68abf26f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9ef5f433-0ff0-4875-8645-1ea450ef7553" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c0862322-6066-4aa6-bce2-02e254621499" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="066f659c-3e6d-45f7-9537-5fd252d38e6c" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="d965586b-65b8-46b9-a480-28e0d0511e76">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="755df75c-6dba-42e0-8586-8b551d31b349">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="a602ef4a-0716-4e8f-8c72-4569f0b39cac" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="2675c4d3-c8d0-4506-b14f-7be53e7a3701" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="dc7f3ec8-f218-480e-8e0c-44897ef5df88" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="2ceed3f6-ff5f-4b7c-ac3c-f6eed5bffe9d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b280620a-4aa6-4873-a7d8-156ceca81c95" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="760fdccc-fe10-468d-880c-f2cf0297ad2a" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="276295c8-9440-40dd-b149-9fd071f3b27a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#cwishdate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_CTCHA_PROPOSEDDATETIME</path>
              <content>${#TestCase#ctchaPropDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f67dc4a0-096e-43dd-9933-72e6b97f5fa2" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="b5a270f7-b4c4-4271-860c-ddd1f17a46e1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="8af8dc75-df09-4ea0-b7eb-67cc0baa0261" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#DonorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="05d46822-b9a0-4fa7-b778-6dd08dd57cdb" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8f20b959-73ff-4be9-a20b-cc6fcf8afff4" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="ceb614c6-6716-4f9a-a77d-9f3aa11cc0f0" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA" id="e73448f9-42d0-49ad-aab2-4410f905bce1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%' 
and sxm_xml_message like '%&lt;blocking>Y&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#soapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: proposeddate">
            <con:configuration>
              <token>${#TestCase#ctchaProposedDate}&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no wishdate">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4e3586cc-73e8-4cc0-a4e3-fb31eb644576" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         	              <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c67d4c01-43fb-4940-944d-64dcf97b82e2" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="fcb76e46-70d3-4a34-b61f-de4f981aa9cf" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCHA" id="4e786ef5-2e2f-4598-8c4f-1b6cb7526c79">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP" id="6d751fef-2443-426a-8c79-02d1bf35e360">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <sch:SendMessagesRequest>\r
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>\r
         <sch:Messages>\r
            <sch:Message>\r
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestSuite#TimestampNOW}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>\r
            </sch:Message>\r
         </sch:Messages>\r
      </sch:SendMessagesRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="22b12542-b4f7-4798-a8a1-4a2c7dfaac89">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6204d5a2-fd9e-426e-91f1-b0352d4d6831" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="e09d86d5-9576-4246-8f34-482c0ed596d9" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="bb9b53f4-82e6-4ac1-a336-a874cd71ca27" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="41c9d190-3434-4e99-a904-457ad09ef113" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="327f9496-91be-496e-a74f-83c7da6c03c4" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="f3c48cc7-30f9-426f-91a3-c9a1d1a6f867">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="90045362-cf2b-4a7e-aaac-cac030ebb8cf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b3b9cd2f-9cae-4a34-9c76-51cb02c34edc" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="7766c0d6-8790-42d0-975c-0e8207fc23c1" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="87824ee3-ff04-4fcc-a20f-5f4396b73160" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="34e7f60e-cd47-4509-9ff0-ba86b74b16b6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1e3487d4-ce09-450e-aa45-4afb49c3fe09" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="66c890e3-fc47-4a7d-956b-72dd43e9cbdf" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="179cc3eb-e308-447a-ab75-c48e000aa824">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Completed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f9c928e4-359f-40c0-bfda-2a37bc9f7d7e" name="Xpath: verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>f</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="90a79185-41da-4695-b697-9f13b5156e1f" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="cebb8bd4-548c-42f9-bbf4-aeb53b7a22e1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="8273aa94-4170-4178-ad8f-472138da1833" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="523fa644-cc32-431a-b910-18d229e5e62b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ead69719-37f2-4d88-b54a-d2db0f05a01b" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c1273bcb-d3be-4e54-9008-e262af560d32" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTP" id="604f8e4e-047d-4129-a74a-b7ed52790610">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="1c0de5d8-b696-4f59-bcee-774dcc4fb2b7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuit#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="f8e35c89-0c68-4076-bce8-6ce48a59016f" name="Contains: Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="43016be5-dc37-4d0e-833f-6422f76d414c" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="56cd5db4-996b-47ef-88cd-e9a50cec57b7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="352467ab-e93b-4e14-a133-cbcf1b417e5d" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTP" id="962b2964-779d-4c5a-9631-fe30b0892e6c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctpRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTP" id="f549840a-861b-4d3d-9957-317f9720ddc4">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="fda4094c-c80e-412b-9b90-545ce7eea85b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple NotContains" id="3cc84ce7-892d-4037-848f-cb97180dd31b" name="NotContains: Not Contains">
            <con:configuration>
              <token>Performed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="89bc0511-4bf3-42aa-8b19-b25fe2ff6b75" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTP" id="1dc8f16e-8ece-48eb-a46a-b5fe04dcb2e4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctpRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Performed received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Performed received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7d7b3805-a993-47de-8ee2-0123afdda55a" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="743c75ff-9a95-424f-a30d-77f4a2c1a798">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 240.seconds
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 5.days
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def ctchaproposeddate = today
use(TimeCategory) {
	   ctchaproposeddate = ctchaproposeddate + 3.days
}
def ctchaproposeddatestr = ctchaproposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctchapropdatestr = ctchaproposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("ctchaProposedDate",ctchaproposeddatestr)
testRunner.testCase.setPropertyValue("ctchaPropDate",ctchapropdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="B2.13. CTR-CTRA ok-CTCH-CTCHA blocking-CTC" searchProperties="true" id="e19f1479-e1ae-458b-95d2-a00943dd57d9" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="150cee86-2ec3-4f98-8fef-d21ca2039d29">
        <con:settings/>
        <con:config>
          <delay>12000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTR-Sunny Day" id="5538cda9-27ba-46c2-8307-effd2f03aeda">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>13-${#TestCase#contractID}</value>
 </validationblock>
<note>Sunny day-sent ${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenr. ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table" id="8385bbd8-7db1-41d3-b30d-50c9b06adf30">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ab863873-20d4-4f3d-84ce-e8ad8fe0799b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f25acb57-d14f-40c0-80c0-7fe299f8ba1c" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="db63e0bd-d8a8-483a-95f8-87e9fb5ed540" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6bc1e2d3-9d68-4da9-8925-7a543a9b860f" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="5fac744f-6dfb-47b2-a2d2-548d475244b3">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="7854cd79-0ffd-48b8-8d18-18e8fe97a3bc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bb67d6e-7c4b-41d5-ba1e-9475c415e226" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="22f86c45-01d3-4bbc-a80d-0283704b1de5" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="63c10364-77e9-4488-a9e8-6b7d0845ed81" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="51ca1cf2-4326-498a-a7f4-d7c6d9242e9f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="dd857f59-1fb5-40ef-843c-c4c52879dca4" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="49f6e6c9-1089-4179-b90d-4c5c8cf71542" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="2923982e-116d-42b4-8cf9-b45d09d9ac34">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b76d8747-a7b1-455b-b7fe-7f363b0b6c7d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="f0a99f94-4c07-44cc-b6d3-53e485e97a19">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="887bd717-c961-43bf-a55d-348733bfa204" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3605f923-067b-4c0e-9cbc-989a745e9b4f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="bf60879f-bcc9-4eb0-8a37-1860fd44789d" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="0532edde-07c9-40c8-b079-a3112166fe16">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="6acbb67f-394a-418c-a12b-c65e15fa1fc9">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_Send" id="ec08b50e-5194-4976-9daf-195cc9416824">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="eee51af8-d12c-4443-899f-5ea254e91429" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b004a11b-3d8f-4801-bff7-2f83d8cad41e" name="Script: SaveST_SXM_ID" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ST_SXM_ID[1]", "stSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="c699d7bc-aaf3-43e1-9a5c-b87b9bf68448">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: XPath match wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="2ec1320e-50f6-43bb-922f-92391a503566" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="34694d5e-c099-4c06-a67c-8fd9beebe0d7" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6a2ea40c-1852-47ca-ab2c-62ed85d466a8" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTR" id="2dc18304-96e0-4bd6-9d8b-845f3cbbdcf1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="e0d39330-8c50-495b-b9cf-97e5e67895f6">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="4aee7524-1e17-4484-a979-22d3d5a6a9c8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="ba174d4a-1d66-452c-a3fd-ee68756a95f6" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="466c2476-668f-4c84-b1f6-71a8de2f6e56" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="001d5a0e-63ae-4ee7-949e-d157201a2676">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a90f3256-1d9d-4326-ac5d-299e1b92c59a" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="875dc3ea-9d2f-449e-a656-9d080ba7573d">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="a6fff513-4d03-44c1-bd4e-0c679fe095c3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d96e992e-3fd0-4234-b929-3a9b34c7ddce" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="96b1a575-46ac-41ae-bb5b-be78cb650aa1" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f0d76019-ada2-454e-81db-78efc99825e9" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2cafc052-405b-4082-bb03-c61cac80713e" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="f7b21cb8-8c88-4c61-8806-135c05683039">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="36bb2639-a0ca-419b-a3f8-2f5da9a73463">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cb4efaec-5804-4f84-9d72-6d6bb3f41fc8" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="568c2ff9-7240-4841-bae9-f60473a9fe05" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a563fae4-a59d-4b6c-a977-ae3c93dacbb0" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="5cf346a1-a4a0-493a-911b-abe304955140">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="6bb706a2-2554-4455-b1dc-2c82882a1b40" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6afa053f-9674-4176-bce4-414ce501226e" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="dddc9cbe-308b-443a-b9e5-445dd4855184">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f98a4bda-e408-491d-aac0-91301175af0c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="53130c91-121e-436e-8a67-403ec73783e6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="XQuery Match" id="40cc6fa1-0d78-43c5-a10b-f043ddf625c6" name="XQuery Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="616e69c3-bc87-4faf-8769-04411bdcf381" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8af57d29-ea16-44c1-870a-13af2d134d48" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d704c453-c189-4af1-9fb5-15fe4b72a460" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTRA" id="e93df3f6-2eff-41f8-ba93-103576195882">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="65126eb3-5fce-4b42-b832-8882ef7a5d51" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
              	          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7fdf737a-7cf9-4d01-9ff1-d9d374a3e5e8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e866d727-de91-433d-8767-e6928775ebc6" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e6dcb6e8-fa0e-4f7a-8fb5-953ef8b042eb" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTRA" id="95d973de-e76f-4673-b236-12afb08b84d5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCH" id="fd9a7493-f0d0-4358-aa1a-3350b84b3772">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCH" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<change>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#soapVersion}>
</change>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="611515f4-aa5a-44bb-9038-5efb4661d656" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="4c4aa14b-781b-4325-8f36-84e716be7574" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCH" id="9729e5ae-01eb-4a9f-8a0f-c35792b92fa8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fe0767fa-4e43-4304-95b3-f8fae3e408a3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="32b4d74d-a07c-4c49-8ed6-04dfbcb9a51a" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="80198c3c-f272-47e8-b1dd-b137746ed490" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f59433f4-5d85-4488-bbda-4163d6dab478" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller 3" id="68a4b5bb-5049-473c-944b-bd196df508dd">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCH" id="375f1c8e-806c-4b2f-9132-164ce1fd8c1b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7af7c920-f794-4830-bad1-19ca97418ac8" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="c07af822-2650-4b4b-822f-8a8702445c5f" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="6b7d397f-688d-4996-9a4d-e7388768bb8d" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCH" id="dec4b825-8f1e-43b2-a6d8-5853fb272134">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e9fb0e43-ad96-4576-aedd-97f890feeadd" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="02ad54be-a5cc-40a2-ab76-96c3add01e15" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="0d185431-83fe-4e9a-980e-e0287602b2de">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#propDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="74f3352a-1521-4149-a5be-c8da462256c6" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="c153e240-afda-41a8-844f-84066dc20523">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="2f7d35d5-6695-4e22-aecf-3764a6a3f60c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="36a7a48a-be8e-40d1-88ed-7eb131283deb" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4c5fcc8a-a882-4777-8e7c-7a463c034673" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="ac2c4f8f-57ea-483e-833c-bc085bcb5658" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="ddb8810f-45d9-4831-9440-1e5571e533e0">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="11eaca2c-7f90-420d-a327-2f2b2e51baf6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fb13562b-3b25-45c9-bf62-83565a32fbfa" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="150ab197-b73f-46f1-b8c4-b40c0933bc66" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="aec2987f-0cdc-4889-827e-41a51f1ee2c9" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCH" id="e800ace4-27f7-4695-8d7c-f1911a1839ab">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="06060407-50ca-4f4e-b564-e79309bdde57">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="19859440-639a-4dd2-b7a0-1565f230b866">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="3d082ce3-a30d-42e8-857d-4a3c0c774b53" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c985593d-a383-4777-b535-f8e2708df681" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="2301c89c-b16e-4c96-b103-5fbb85865043">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="55a049c4-1c10-47f6-8082-8f319eba4cf5" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA" id="0d520de6-82c6-44b7-bca3-338a1b25e580">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<blocking>Y</blocking>
<proposeddatetime>${#TestCase#ctchaProposedDate}</proposeddatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="c374fd24-11ef-4c18-b1c0-ff0945c60fa2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="517cd940-6437-45cb-97b2-75b7df12f4d6" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="be8eec54-7015-4776-b30d-5ba944407971" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9ebe228f-0ae9-4277-a28b-1e26cbabe25c" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="db76d2bb-5c60-4e02-9fd3-fe5899e69240" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="dea6cd62-40a3-4197-8585-656124bf48eb">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="ae61ed13-a4d6-4183-ab38-2f1fbbec70b2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f6b76826-8915-45a6-b7b0-907682541315" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="a8daec5d-052c-4972-85dc-56a5e38c41ab" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="41c4df0d-0e45-403a-ba64-695f408c29dd" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="c575c7aa-f501-4504-9cc3-038f2c5f83c5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9ce7905d-d41d-468e-bb8b-549242ba8036" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="deac5e09-84b3-4669-a4f1-61786fdd40d1" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="d31e9cc7-a11f-45fd-bc42-d7bde73fe2f5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#cwishdate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_CTCHA_PROPOSEDDATETIME</path>
              <content>${#TestCase#ctchaPropDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="86674ca0-a162-4ac3-88e3-1e5f4bc8e99d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="b3bc2f2c-c8be-4f55-8e7b-58d1c9d7605f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="8af8dc75-df09-4ea0-b7eb-67cc0baa0261" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5b1bf89e-7cec-4bfb-9359-234240b03757" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="69ae6d41-7e10-4653-b73d-aa10abfd9958" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="116a9765-0a9f-440c-9d3c-48173a59e752" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA" id="8b9454a7-634f-4e20-975f-a132c6b00b6b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%' 
and sxm_xml_message like '%&lt;blocking>Y&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#soapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: proposeddate">
            <con:configuration>
              <token>${#TestCase#ctchaProposedDate}&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no wishdate">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4e3586cc-73e8-4cc0-a4e3-fb31eb644576" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         	              <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="a6b02431-ea3c-49d5-83dc-97d88fc00a6d" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="edc47519-4783-483c-994a-f912b4ab8b40" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCHA" id="9966f02c-bcfc-47c6-99d2-36c0a87e36c4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTC" id="4f740361-e043-4c21-9e22-7b571fcd8ca3">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTC" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <sch:SendMessagesRequest>\r
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>\r
         <sch:Messages>\r
            <sch:Message>\r
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-002</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<cancel>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<note>Cancel sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</cancel>
</body>
</message>]]]]>><![CDATA[</sch:Text>\r
            </sch:Message>\r
         </sch:Messages>\r
      </sch:SendMessagesRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTC" id="8eeffb6d-653d-4ef2-8ac7-736ba9f30a37">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>cancel</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="2d3ebe21-fe7e-4ea6-85da-05fdbd457893" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="fd034a4c-cfe7-4f38-958d-841058c68fb4" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f3cd9486-4c72-47d0-8f19-4791fca08298" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="95d7db8b-d18e-4a03-ba7d-4b7c26c85651" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="c344da26-4f07-4eef-a7e4-b5666c47d29f">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTC" id="77943f5c-1f4b-493d-93bf-1670e283ceb2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="a0eb7785-dc83-4317-b38a-1bbe57cd802f" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="cc51dbdd-db84-4532-ac8c-9e6149519641" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="efc46c27-2f78-4653-bec3-c7d91f387d90" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTC" id="d6559ffa-2ba5-4bd2-b8a3-17b6c9317e6d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="35d91fef-868b-403e-ae77-dc9f07026b8f" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="aded836b-b9a9-4d2c-bbf9-082e8ff48a23" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTC" id="f7720d74-2843-4032-8ffa-cbefb1006b37">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Cancelled</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1e18bb62-a102-44ff-87e0-2e05f74d610b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTC" id="4d14cf99-defe-4411-b00c-1cf83feceaf7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=11 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="b199af58-886b-4a43-943e-d947f7528217" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="79988e9c-7c72-4aa4-8e92-407f19a03f80" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1915dcf5-b846-4d95-9df5-7c2787a4a674" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="5a42964c-02e7-4bf5-9969-db9caa599b12" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTC" id="8305a71f-c865-4717-8d95-ce0b2f21b00f">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
 
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTC" id="f5dde9e4-2bd9-4967-8eed-e0a2d80ed267">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#contractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1270b552-020e-4693-a671-1f97f10b284c" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac29c4eb-709d-4d3c-84e1-ab07c7491edc" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8f8d03f3-71c2-4ff7-8234-188252f1dadd" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTC" id="90f80655-07e3-4b38-88e8-d957e7c403fc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctcRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTC" id="1b21deb9-9386-4d92-ba6c-08a2880df7d1">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTC" id="c5f8da7e-9cfe-4657-b05b-e6fb8225e853">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e83f7d20-765e-4780-b99b-671803fc721b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="945d3cf9-6302-48a9-b27b-fe93c351f4a3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTC" id="61c94fc1-73ba-4eb1-897f-82f563afb925">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctcRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Cancel received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Cancel received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="831b2db4-6acf-4661-b37a-b5c50beca037" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="90991b72-b402-4721-a1e2-4a641a210087">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def ctchaproposeddate = today
use(TimeCategory) {
	   ctchaproposeddate = ctchaproposeddate + 3.days
}
def ctchaproposeddatestr = ctchaproposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctchapropdatestr = ctchaproposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("ctchaProposedDate",ctchaproposeddatestr)
testRunner.testCase.setPropertyValue("ctchaPropDate",ctchapropdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="B2.14. CTR-CTRA ok-CTCH-CTCHA blocking-CTCH-CTCHA ok - CTP buffering" searchProperties="true" id="bc844c6c-6b8d-4a51-acfb-41e377edef3d" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="02bd61b1-19a8-4735-9235-7a85700c22f1">
        <con:settings/>
        <con:config>
          <delay>13000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTR-Sunny Day" id="b2d3e05e-f3dc-48e6-a97f-ee0522f1349c">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>14-${#TestCase#contractID}</value>
 </validationblock>
<note>Sunny day-sent ${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenr. ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table" id="c8f3dfa4-b27f-4e9d-9f6b-7c02c7dccdf2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0ac2f48a-e3fc-4eff-8d3b-99b1b43b655b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="85db56e4-8757-4bed-8afa-3b286e8c5ff4" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a4ed8c62-8b37-49cb-9fab-b99476f29cee" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8b8faee4-dccb-4534-adf3-4ad2331d7e94" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="b7eaec61-aa60-45a6-a53a-02079787a5b3">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="c87ab7b0-7c3d-4d35-9964-c6a266f3d861">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="00a9a348-88bb-44e0-9b91-f6f67abb4a9b" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="7921e5a8-5e37-4f24-9e34-24a25e240d52" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="9bf4baa5-9001-40c8-895c-c25bd61cacb6" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="150dcf15-c9f3-4559-a953-35aa81722cd7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7610b089-c73f-4559-bd15-7a5c476e8f74" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="98abd252-abe4-470d-99a1-a5bcbb3b8733" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="234e8c89-614e-42f4-83dd-87ff689846c5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8bb47e6e-b912-4216-91cc-0f0f56f8618c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="6e910fb8-7d6a-451d-8325-a459ac85bd38">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d3d27f5d-df5c-4d91-9dae-4a5b5f6709d9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="88d2d01b-6410-4acd-ac26-a38bc2f03c2f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="3aa7b620-d85c-4568-a7fc-31f8e1ffc71f" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="847af81f-5d4e-46d2-a9f0-133e2466b852">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="700787b1-427b-4888-a87b-566358ecd8fa">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_Send" id="add43b08-14df-4836-b8ea-98d8b782c721">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f979dbb0-4d7e-48c1-8468-793ea8bad233" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="704a6e28-d758-4562-817b-488cc66c97c9" name="Script: SaveST_SXM_ID" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ST_SXM_ID[1]", "stSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="b2557c29-18c4-4901-b0f2-5cfbe5a52249">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="64cb4b3a-ccda-45b3-8350-71eb14dbde78" name="Contains: assert donor soap version">
            <con:configuration>
              <token>&amp;lt;${#TestSuite#donorSoapVersion}&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="56c90030-23d4-4815-a7bf-7451f65952d3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0cc66279-459e-4ad6-b548-281ff9f2ea2c" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2d4e789a-87ea-4f69-a25a-46ed4048ec27" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTR" id="faa91d0a-aa7a-4bbb-8246-7679c330a11a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="6d43ffc7-182c-45a5-a5a2-2c9f3a61d6e9">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="038d8375-5acd-4ee8-90ee-eaeaa6828a5d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1913aa84-76cb-46d4-b96b-698a552ed584" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a04e4e38-25ab-4e0f-91e6-d194877d1a51" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="908ec0a0-fc7b-4ea7-8c73-1912ac26f267">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f0a68cac-1837-47ac-a96f-5e02f171e53d" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="be189b74-4ebb-494e-bc1e-42e59f1785dd">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="07e667b8-8f9f-41c4-89bf-b227b2b3fb3b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c2ab8c98-6167-458b-8ffa-6f4fdfb65514" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0f55da64-7819-4521-9feb-e327c2d0588f" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b84d60d4-bf34-4741-a1c5-7cf2142cb4f8" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4a7afd52-7f46-41b2-a5c7-eefcc810dfe5" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="e7cf6420-1845-480c-b733-33598fae6a6f">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="2394daf3-d4bb-4651-be18-f0a7bb2d049b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="49beafe9-0a35-4d4b-b1df-b19e16314f0b" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="a86491d1-c927-4395-93de-25bc9d3ba596" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="12abde8d-fbdf-4723-8bf8-f5f918dbdd62" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="d05a7064-4ea1-4f90-ae27-bbc0f6551761">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7581f85f-d348-4732-8bb1-f740202b4925" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="51f6c40b-7a27-43aa-b37f-a7ed73cd9288" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="63bd1b9f-31b3-429f-87a6-7ddd10474417">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f13baacc-aa83-4d24-9b3f-a6dc7791c152" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="1c1214c2-77b8-4b53-aaf9-7cc43fbb24aa">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="XQuery Match" id="40cc6fa1-0d78-43c5-a10b-f043ddf625c6" name="XQuery Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="a5705841-c269-4093-9341-4af58677df31" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ee1c1d0e-c2ba-4d19-b4d9-aa0511acb02a" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e4b01942-12b2-4880-bbdc-f01a4b760566" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTRA" id="e25e0093-0401-4ca0-848c-9e81c4307f1b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="65126eb3-5fce-4b42-b832-8882ef7a5d51" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
              	          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="97ac8bb5-9634-45cf-81ce-2bcecf647f35" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="6a15c445-d9dc-42ad-8394-fde987e48f55" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2eee5295-6ad9-4522-b3bc-bbc16feaa195" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTRA" id="78f44b73-c445-44ec-8521-7d56131ec31f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCH" id="878e9686-baeb-46fe-b896-3a4814bf5aa2">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCH" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<change>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#soapVersion}>
</change>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="611515f4-aa5a-44bb-9038-5efb4661d656" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="4c4aa14b-781b-4325-8f36-84e716be7574" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCH" id="ee0ef391-6163-422e-be8b-48575c1a3368">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cace04ce-3fdb-413e-b3d7-5f06206401ee" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e3369319-200d-4393-92f4-71c442de8dd6" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="dbaf1387-4b99-4ad7-8168-9ceb48cb5ac7" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="59ad0d37-9896-422c-b7fd-8b600a125be2" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller 3" id="1491bc4c-0ebf-4587-b8ff-461753fee629">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCH" id="1806fe8e-3ef7-4352-9e10-67d71a8dff89">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b9685b3d-200e-4698-9086-fb365c04cad1" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="88e9a698-1795-467c-999c-4acbde7863b9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0b18945e-c099-4dc2-b39b-a253c1f8d12f" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCH" id="7826dd0b-d952-4bed-8182-578f15d1acc4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ed1c95ee-4c4b-4f55-b01e-850f78116a91" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c3583683-9387-4739-a341-c67ab8c86022" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="347a09cb-73c3-4b38-8c99-43a289b43080">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#propDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f91efa64-a4cc-42b2-a2fd-6e7bce10d97b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="0307285b-40ac-44a5-a40c-c0f5652bac03">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="2f7d35d5-6695-4e22-aecf-3764a6a3f60c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="02ba576b-74f0-460f-b95c-d7b5670cdf9b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4a07b0ce-4c88-4150-ad8c-fe6dd00c9661" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="83c757ff-002d-470a-9b0b-4e5fafdb2134" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="b06d362e-c179-44d3-ad89-b11dfe1ce30c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="83a06a71-fd8a-4c27-b73f-75a8d13285f0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fb13562b-3b25-45c9-bf62-83565a32fbfa" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0978f39d-5f7b-4677-baf6-8603083720ea" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="062802d1-e1d3-417c-8b47-d95fac86b680" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCH" id="88dc7feb-c201-4466-999e-aceae15dc521">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="a2856f12-ed25-4405-a552-e96281f9fa2f">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="d4d9def1-cfa0-4c8a-9b1a-683d7007fcc8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="fae3a59b-b18a-4bb0-b0fd-d50bfe8dc1eb" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="caeb115f-f284-4a99-ba1a-b1bc5666fafa" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="92d514ca-5056-4f57-a7d3-2e050875e3bf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3e0110e3-88af-4dfb-91a1-411a043c4d59" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA" id="5a05bd9b-c764-4f11-8e8d-090759bd7f8b">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<blocking>Y</blocking>
<proposeddatetime>${#TestCase#ctchaProposedDate}</proposeddatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="f478ec8e-2e92-49ca-8220-4e269ad16ec1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="aa426f9f-52a5-4395-aeff-6c5f077e7382" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3b028d1b-7451-4980-9a02-40105601ad81" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0ac4cbaa-f191-4693-a686-dff743bff779" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d2810c49-d4f3-4f84-80d6-4f55ed6eb2d8" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="43999077-561a-4667-b1a8-0444cb73d912">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="e0ec4913-5aeb-4fc5-b25e-391ac0e8991a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e7130e05-faa3-426e-9d63-6c2162bcd8e5" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="ccf8e3a3-b7b5-4b2a-9ba4-5f67563b4c2b" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0caf06ac-e0e1-4efd-9474-0375afd10f56" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="64d328be-66cd-4f4e-9353-2195f029574b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e9f27fa4-dba6-4fdb-90a1-f97f5d1be614" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="dbe457bf-a9ee-42f0-ad03-e3a9c06fd575" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-blocking" id="55a334b7-786b-4600-a737-c2fb68d9c313">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#cwishdate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_CTCHA_PROPOSEDDATETIME</path>
              <content>${#TestCase#ctchaPropDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b61d7e66-e799-4b93-b6ea-aa2277bd9e22" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="296a92f9-8f63-4152-be76-73288abf32a1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="8af8dc75-df09-4ea0-b7eb-67cc0baa0261" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f2701d10-5502-4ca3-8a81-9143ea0f6be2" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="91582b09-f380-4ddb-9453-aacd43b041f1" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="217cf384-8f60-4152-a5f7-7a000f5ebda5" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA" id="37699ae2-f259-4405-985e-b9b3122e97bc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%' 
and sxm_xml_message like '%&lt;blocking>Y&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#soapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: proposeddate">
            <con:configuration>
              <token>${#TestCase#ctchaProposedDate}&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no wishdate">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4e3586cc-73e8-4cc0-a4e3-fb31eb644576" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         	              <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ed3422d5-56df-43a7-8304-358cd0b9cd02" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e8af616a-ddf9-4a5c-8408-29f606e3d6d5" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCHA" id="f3a5bfed-fa84-48da-a4c1-10c9507e0f65">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCH2" id="1b1ef9e3-2c8e-4783-8344-9fff676e8d29">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCH2" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-03</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<change>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<wishdatetime>${#TestCase#ctch2ProposedDate}</wishdatetime>
<note>Change ${#TestSuite#soapVersion} OK, 2nd Change in dossier</note>
</${#TestSuite#soapVersion}>
</change>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="611515f4-aa5a-44bb-9038-5efb4661d656" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="4c4aa14b-781b-4325-8f36-84e716be7574" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctch2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCH2" id="634678dc-3c3c-479f-9ea5-a2b179cd2129">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctch2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctch2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctch2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8acbe359-2129-4c2c-bf60-8943648de478" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b0a84ce3-e4b4-4572-9972-533341a37f32" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="dd58b235-ce1f-4d70-88ab-caec55ba6e21" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5332532d-3d51-4bde-b2f1-73f042e57ea4" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller 5" id="bc1a0ace-876e-4157-b6d1-496e075029fb">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCH2" id="534ae54a-7c8f-4874-9c98-a486ffd5c3b4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctch2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ae7c8b62-1551-4cd7-b6e5-5c9f0fd20dfe" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="1a21519f-640a-44e1-98af-be835fd1b866" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8916d1af-c275-4e05-bd47-54399827f850" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctch2RSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCH2" id="e7132e0a-363e-431e-ae0a-b46e09a43363">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctch2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="2c613a81-9259-4bb1-b6cc-9627457248fb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a22a89b6-4abf-48fe-82ce-5107ac5d0f4d" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctch2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH2" id="2022639b-8172-42a4-bf20-afa31616e062">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#ctch2PropDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4bb3c5e6-0358-4f3a-bb9d-7f36ea414dd5" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH2" id="8b7b2a38-5f49-480e-90f7-2dcdf84b31d0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0558fd7e-5580-4554-83b2-b3584b05066c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c7737b1a-c1df-44b3-9390-f5fc8396131d" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d9319c61-a419-421a-b77d-541bebbd5ea2" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH2" id="9c7f95be-4b37-41fa-a267-25aa65db6909">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH2" id="ccf2e4ea-1c6e-439e-b57c-b67bf66c2264">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="60640bcf-8a2b-432f-b4e6-f46d17ba0c10" name="Xpath: messagetype change">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[2]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2f8a7419-efbc-445c-a6d3-6e1f21ffca33" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d6d6725f-e150-4780-8316-a44d25aca03c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="2b98ce49-3ffc-471b-adaa-7096b2058d48" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCH2" id="2828b693-f254-4c7a-aabc-52088bd22265">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH2" id="db2d5376-ab54-44ef-ab91-ac0b737c999d">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH2" id="c582c89b-6cd1-4370-b3c0-debf5e84e6fa">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="65a8c850-86bb-4cc2-bf73-5b893d390535" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5451a4fd-0b88-421f-bfe8-da467eb8be72" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH2" id="18b4a3ca-eb26-40ea-b48e-84d6ec952148">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctch2RSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9599f8d7-21bd-45d8-82b4-b38d1912c240" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA ok" id="370c95b4-f107-4db5-8b8f-b131100262a7">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-03</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#ctch2ProposedDate}</wishdatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcha2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA2" id="aebea2bb-9512-438b-b72c-13581a0cbc02">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcha2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1c88186c-1714-4c3e-a0ff-dc315c725d03" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="dd73e2b3-9301-4305-a072-0703c2644ee9" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcha2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="bb152b0e-2f50-43f0-acb7-26e49865fb8f" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6a978efc-85a2-48c8-9d3b-c2f976286cdc" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="52e7c0e1-89ad-4810-a267-3681c9d29813" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 6" id="487aa5e4-17c5-452a-ad4f-aec16a4ffbd8">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA2" id="296f279e-30ce-4053-8fea-860b9e333e02">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcha2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7acca514-d660-4e4c-b0e7-cb9796c028f4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="a7c154f6-80c4-4a79-975b-0a1ccbfad5b2" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f7c9d798-a8b8-4117-9ec6-f31003b01cab" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA2" id="4c270c96-65ce-40dc-b686-6ebaed7c9a11">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="307d8621-f0a7-4a02-9c17-58ee9b19f700" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="25cf9f1b-b7fa-4482-ad2d-94c32ef7caba" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcha2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="425b1579-60e3-41a3-af87-90dfd78279b3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="15763cf1-cd9c-41cf-a426-3b5d396ed6fd" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA2" id="0228aa25-6bf3-48af-a3cd-00bdec2a43c6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="bce66a82-e321-4490-b4b4-e6e5efd0f567" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[2]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4067c6f4-dc84-4828-a2bc-daaab27df850" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="dd0bdf3a-b1f5-4282-929c-9a5c58de30d1" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="804878a2-8b2b-47d9-8b29-bccb6c295fb8" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA2" id="4d6fe002-5ba2-4fb7-a24a-093d403ed424">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%' 
and sxm_xml_message like '%&lt;blocking>N&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#soapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: wishdatetime">
            <con:configuration>
              <token>${#TestCase#ctch2ProposedDate}&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no proposedatetime">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d552133a-bb21-4eb3-9a49-c830bbac8eb4" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         	              <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c997ab43-7d8c-4490-8551-4908eea72668" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a9bf201d-7346-4685-a276-93a87e55771f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCHA2" id="bd92b43e-44a5-4d1d-9f2e-a6cf93ccc3c3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP" id="2ddac68a-ec36-48cd-b483-d541642717a5">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <sch:SendMessagesRequest>\r
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>\r
         <sch:Messages>\r
            <sch:Message>\r
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-04</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestSuite#TimestampNOW}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>\r
            </sch:Message>\r
         </sch:Messages>\r
      </sch:SendMessagesRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="94ff5324-a638-4324-8134-9a6c639e3b17">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="a35415fe-c3a6-401c-97d7-33b7491bb487" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="3f8d1ec8-dc90-4557-82db-8953757d6467" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="102716a9-4bea-4b03-bc62-dc43c64fa003" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="973d9529-be4d-4615-ad78-4f5dadfba95e" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9e161c1f-8bb5-40c6-989a-69fbe1f5f1d0" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 7" id="b042ec28-bf09-4d03-abe1-58670e9a3067">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="eb7806e1-d61d-4398-af01-cea3622ce9ac">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3526f7b3-7051-4c3e-b624-171fc10a8fe3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="efdd64b3-dd34-460b-b2e8-1bdf8074a91f" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="739c93f8-2b64-48a2-b1cd-7864c9d023d2" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="64817a6e-fcfa-460a-888c-3d57c5966bc4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="6b57eab5-8e7a-482b-b7ba-25fb3c6b63a5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c90377d-c59d-4e83-ab3b-1040abbb8c00" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="f6fecdd0-a45d-48ec-ad4b-e96721b86394">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f9c928e4-359f-40c0-bfda-2a37bc9f7d7e" name="Xpath: verify ctd_ctp_buffering is true">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="270177b4-3b5f-4d1f-ba60-b9d272adbe6a" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="c0650a29-0cbf-48a2-970d-0790061fee60">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="8273aa94-4170-4178-ad8f-472138da1833" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="400a0b1f-93ec-43a5-8944-ef289ddc5b28" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4b622c96-1cb1-4357-a682-559048ec84dc" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f07987d3-5213-4f3f-863f-7fefc1fa0e83" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="cd612350-f804-47ab-83bb-cfadaa989ca2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="3cc84ce7-892d-4037-848f-cb97180dd31b" name="NotContains: Not Contains">
            <con:configuration>
              <token>Performed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="25869ada-cde6-4dcd-b053-932fe5b34ddc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTP" id="4b114e67-d433-47bd-84d5-b68383dce774">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctpRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="753b12a6-07ea-40fa-b22c-168be0d14ce2">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 4.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def ctchaproposeddate = today
use(TimeCategory) {
	   ctchaproposeddate = ctchaproposeddate + 3.days
}
def ctchaproposeddatestr = ctchaproposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctchapropdatestr = ctchaproposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("ctchaProposedDate",ctchaproposeddatestr)
testRunner.testCase.setPropertyValue("ctchaPropDate",ctchapropdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="B2.15. CTR-CTRA ok-CTCH-CTCHA blocking-CTCH-CTCHA ok - CTP Direct" searchProperties="true" id="8f28446b-d0b2-4d96-85c1-ace990a74cb3" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="88fae193-3cae-4e43-8bc9-7c2a114452e8">
        <con:settings/>
        <con:config>
          <delay>13000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTR-Sunny Day" id="d6a966a7-6abb-4273-ac73-9ead61fcabeb">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>14-${#TestCase#contractID}</value>
 </validationblock>
<note>Sunny day-sent ${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenr. ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table" id="082b055d-bd4f-42df-9063-806d1cc35b0e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0ac2f48a-e3fc-4eff-8d3b-99b1b43b655b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="85db56e4-8757-4bed-8afa-3b286e8c5ff4" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a4ed8c62-8b37-49cb-9fab-b99476f29cee" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8b8faee4-dccb-4534-adf3-4ad2331d7e94" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="1260eb4d-4c3b-4e1f-929a-7ad1e302c12e">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="fdc15fee-8ee8-4819-ad2d-a611cf35f5b3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="00a9a348-88bb-44e0-9b91-f6f67abb4a9b" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="7921e5a8-5e37-4f24-9e34-24a25e240d52" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="7f120bcf-8f7a-4414-9f89-06d6786a9c4a" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="76c8d478-a5ad-4cee-9966-cd14571d0a30">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7610b089-c73f-4559-bd15-7a5c476e8f74" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="98abd252-abe4-470d-99a1-a5bcbb3b8733" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="38a681ac-2bfd-4d3a-ac99-c08b6ae3cdb8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8bb47e6e-b912-4216-91cc-0f0f56f8618c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="d61e324f-6ec1-4bc6-a2dc-6133a1642d04">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d3d27f5d-df5c-4d91-9dae-4a5b5f6709d9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="88d2d01b-6410-4acd-ac26-a38bc2f03c2f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="28d2d500-2aa9-44be-9d7f-00ba1c5eb610" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="79dd74df-1aad-4805-b56d-61c746f039ef">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="70fe08b1-466c-4357-81d4-7affcea9fc8d">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_Send" id="65e9e32e-5077-4abf-b816-c082c6b904ce">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f979dbb0-4d7e-48c1-8468-793ea8bad233" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="704a6e28-d758-4562-817b-488cc66c97c9" name="Script: SaveST_SXM_ID" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ST_SXM_ID[1]", "stSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="3c707c69-8517-4cf7-8038-fba74f06e2d2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="64cb4b3a-ccda-45b3-8350-71eb14dbde78" name="Contains: assert donor soap version">
            <con:configuration>
              <token>&amp;lt;${#TestSuite#donorSoapVersion}&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="56c90030-23d4-4815-a7bf-7451f65952d3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0cc66279-459e-4ad6-b548-281ff9f2ea2c" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2d4e789a-87ea-4f69-a25a-46ed4048ec27" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTR" id="3f8360e4-9f95-4b0b-a114-e252c298052f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="acaa5323-35b0-4661-8ce1-3a221b60d492">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="75edb505-03df-4d02-ac76-dfa17011a997">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1913aa84-76cb-46d4-b96b-698a552ed584" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="03dab5a6-3230-4141-bcef-04c359ca5739" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="3221b008-f74a-4687-a31a-b61fe01b370b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8544bd9e-6f7a-4cc4-8121-9a730b257983" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="12f15963-b997-4ef1-a9b7-6396b78658c6">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="076a1584-8915-42e0-ac65-1d7591bd6087">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c2ab8c98-6167-458b-8ffa-6f4fdfb65514" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0f55da64-7819-4521-9feb-e327c2d0588f" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b84d60d4-bf34-4741-a1c5-7cf2142cb4f8" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4a7afd52-7f46-41b2-a5c7-eefcc810dfe5" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="8f451875-c2a8-4caf-ad4c-32a4d9d57dd5">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="dc65d59c-4c37-4d48-8302-99b0812cbb21">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="49beafe9-0a35-4d4b-b1df-b19e16314f0b" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="a86491d1-c927-4395-93de-25bc9d3ba596" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="04f65fca-7367-435c-ac61-c1dd87fb02cc" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="cdfaba29-ee90-4be3-a4d3-4c11cdb472d6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7581f85f-d348-4732-8bb1-f740202b4925" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="51f6c40b-7a27-43aa-b37f-a7ed73cd9288" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="e1d3edf4-b642-4ff3-8a2c-e2650dc79dfa">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f13baacc-aa83-4d24-9b3f-a6dc7791c152" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="47f0abce-fab8-4c90-85d5-12ce906cd016">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="XQuery Match" id="40cc6fa1-0d78-43c5-a10b-f043ddf625c6" name="XQuery Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="a5705841-c269-4093-9341-4af58677df31" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ee1c1d0e-c2ba-4d19-b4d9-aa0511acb02a" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f805897e-67d8-487b-882d-01b54026ab4e" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTRA" id="d6f3430f-3e84-4b8b-a6dd-7353906f1a97">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="65126eb3-5fce-4b42-b832-8882ef7a5d51" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
              	          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="97ac8bb5-9634-45cf-81ce-2bcecf647f35" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="6a15c445-d9dc-42ad-8394-fde987e48f55" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2eee5295-6ad9-4522-b3bc-bbc16feaa195" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTRA" id="f6b2498c-3ed3-43bd-b074-6bef0e727c75">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCH" id="7ce064c2-8bff-4067-90c6-4fc89575d704">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCH" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<change>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#soapVersion}>
</change>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="611515f4-aa5a-44bb-9038-5efb4661d656" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="4c4aa14b-781b-4325-8f36-84e716be7574" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCH" id="4f41d62c-8da2-4fad-93a4-bd346f2ea335">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cace04ce-3fdb-413e-b3d7-5f06206401ee" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e3369319-200d-4393-92f4-71c442de8dd6" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="dbaf1387-4b99-4ad7-8168-9ceb48cb5ac7" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="59ad0d37-9896-422c-b7fd-8b600a125be2" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller 3" id="81f3ded2-a302-4b1a-b669-743eeee4162b">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCH" id="a995740f-f39a-4107-92c9-1022121e1b00">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b9685b3d-200e-4698-9086-fb365c04cad1" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="88e9a698-1795-467c-999c-4acbde7863b9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="ad475e89-4222-4e48-80f1-214c39bc36d0" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCH" id="bbc01983-08b0-43b8-b589-bff6814ac3d5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ed1c95ee-4c4b-4f55-b01e-850f78116a91" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c3583683-9387-4739-a341-c67ab8c86022" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="b1e81dc8-d781-42da-bfc0-2fd79fad0eb3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#propDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f91efa64-a4cc-42b2-a2fd-6e7bce10d97b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="8368b51f-44ab-4a89-b0ac-d67a602f7e2d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="2f7d35d5-6695-4e22-aecf-3764a6a3f60c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="02ba576b-74f0-460f-b95c-d7b5670cdf9b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4a07b0ce-4c88-4150-ad8c-fe6dd00c9661" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="4265f0f8-4617-4638-83f4-1ad80df28f56" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="70c6497f-7e5c-4a81-a054-15eac64945e7">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="09a3b363-8d1e-4c14-b6ec-7869cb3ae59a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fb13562b-3b25-45c9-bf62-83565a32fbfa" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0978f39d-5f7b-4677-baf6-8603083720ea" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="062802d1-e1d3-417c-8b47-d95fac86b680" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCH" id="79e2dbe8-974c-47a8-856c-d4d6b8c5b66e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="d280cbdb-da82-440a-8b71-bae721fc99f7">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA Blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="964ac33a-e4fe-4113-a5c1-df9f0cf200d5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="fae3a59b-b18a-4bb0-b0fd-d50bfe8dc1eb" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="583748e9-a569-43c2-a97b-e3a19f66fdb4" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="f83b7b09-93f7-4e72-b509-0d8eb09c9527">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="03439862-fdfe-4801-967a-f87e308b7605" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA Blocking" id="bdb03fc5-ba65-4a4f-980a-8623c7ce54b4">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA Blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<blocking>Y</blocking>
<proposeddatetime>${#TestCase#ctchaProposedDate}</proposeddatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="8902b67a-be0f-4d50-86e9-65dc0245696b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="aa426f9f-52a5-4395-aeff-6c5f077e7382" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3b028d1b-7451-4980-9a02-40105601ad81" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0ac4cbaa-f191-4693-a686-dff743bff779" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d2810c49-d4f3-4f84-80d6-4f55ed6eb2d8" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="4f7a69b1-7966-4f12-88c0-4cf26820967d">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="d77d0c97-5d59-46c7-b0c0-b4d259aff029">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e7130e05-faa3-426e-9d63-6c2162bcd8e5" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="ccf8e3a3-b7b5-4b2a-9ba4-5f67563b4c2b" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="1ad1afdb-d145-444e-8688-0c50c781cc1b" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="dc17e2ad-a41b-4cc1-9984-915eb2968a23">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e9f27fa4-dba6-4fdb-90a1-f97f5d1be614" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="dbe457bf-a9ee-42f0-ad03-e3a9c06fd575" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-blocking" id="ef1ed4b6-4b4c-4984-af2c-d99b67f7a53f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#cwishdate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_CTCHA_PROPOSEDDATETIME</path>
              <content>${#TestCase#ctchaPropDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b61d7e66-e799-4b93-b6ea-aa2277bd9e22" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="35f8cd12-0b98-4745-a162-1e8c897d0066">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="8af8dc75-df09-4ea0-b7eb-67cc0baa0261" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f2701d10-5502-4ca3-8a81-9143ea0f6be2" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="91582b09-f380-4ddb-9453-aacd43b041f1" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="290cbcdb-b8bc-4204-8aed-edce363fb7b4" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA" id="455d47eb-33bd-411b-bd90-ececde31ad94">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%' 
and sxm_xml_message like '%&lt;blocking>Y&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#soapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: proposeddate">
            <con:configuration>
              <token>${#TestCase#ctchaProposedDate}&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no wishdate">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4e3586cc-73e8-4cc0-a4e3-fb31eb644576" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         	              <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ed3422d5-56df-43a7-8304-358cd0b9cd02" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e8af616a-ddf9-4a5c-8408-29f606e3d6d5" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCHA" id="2bcba13d-563f-4e6a-8063-49684ff9255a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCH2" id="3527ed4b-c41e-466b-b1fd-61ad1aab7bb0">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCH2" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-03</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<change>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<wishdatetime>${#TestCase#ctch2ProposedDate}</wishdatetime>
<note>Change ${#TestSuite#soapVersion} OK, 2nd Change in dossier</note>
</${#TestSuite#soapVersion}>
</change>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="611515f4-aa5a-44bb-9038-5efb4661d656" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="4c4aa14b-781b-4325-8f36-84e716be7574" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctch2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCH2" id="de3bf5a7-654a-4d9f-b848-42fd7bf55e5e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctch2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctch2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctch2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8acbe359-2129-4c2c-bf60-8943648de478" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b0a84ce3-e4b4-4572-9972-533341a37f32" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="dd58b235-ce1f-4d70-88ab-caec55ba6e21" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5332532d-3d51-4bde-b2f1-73f042e57ea4" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller 5" id="5f8e4de5-ba0a-444c-a597-4bccfdb15f18">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCH2" id="66a8f7ca-4303-43ca-9dd6-b070f8abebdd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctch2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ae7c8b62-1551-4cd7-b6e5-5c9f0fd20dfe" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="1a21519f-640a-44e1-98af-be835fd1b866" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="3dc08c22-8370-4872-8602-14f0c8900f7f" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctch2RSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCH2" id="91ad219a-ebd7-481d-9fe5-c27c9875009b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctch2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="2c613a81-9259-4bb1-b6cc-9627457248fb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a22a89b6-4abf-48fe-82ce-5107ac5d0f4d" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctch2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH2" id="c3138d9c-d785-4dcc-bc02-89b6eae71aad">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#ctch2PropDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4bb3c5e6-0358-4f3a-bb9d-7f36ea414dd5" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH2" id="3adaabaf-31fa-4092-81b3-06292de7d971">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0558fd7e-5580-4554-83b2-b3584b05066c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c7737b1a-c1df-44b3-9390-f5fc8396131d" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="adc3d7c8-4e4c-4052-a5c5-e53213c43bd2" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH2" id="d423748b-805d-4f5b-90ec-9bcab5ed7ef2">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH2" id="e363af45-86df-401f-b1fa-276d68d67281">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="60640bcf-8a2b-432f-b4e6-f46d17ba0c10" name="Xpath: messagetype change">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[2]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2f8a7419-efbc-445c-a6d3-6e1f21ffca33" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d6d6725f-e150-4780-8316-a44d25aca03c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="2b98ce49-3ffc-471b-adaa-7096b2058d48" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCH2" id="bf8262af-06d1-4030-8c96-8fed2c9738ca">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH2" id="559fc798-8a73-41d1-b5c7-1fa6207947c9">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH2" id="d884f361-1c4e-4528-ba5b-dc9f361aca03">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="65a8c850-86bb-4cc2-bf73-5b893d390535" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="771cfe97-efa7-4408-8d72-900ea109da6e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH2" id="112de6ff-a0ef-4cdf-914b-6b38f28402ca">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctch2RSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8d31df70-55b5-4443-bd9c-7dc414be3862" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA ok" id="9f50af8b-2440-4dcc-92aa-b8fa97c7a613">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-03</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#ctch2ProposedDate}</wishdatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcha2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA2" id="5213ba29-80ea-4755-9c76-c977423e90d8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcha2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1c88186c-1714-4c3e-a0ff-dc315c725d03" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="dd73e2b3-9301-4305-a072-0703c2644ee9" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcha2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="bb152b0e-2f50-43f0-acb7-26e49865fb8f" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6a978efc-85a2-48c8-9d3b-c2f976286cdc" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="52e7c0e1-89ad-4810-a267-3681c9d29813" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 6" id="06470e2e-d8a0-40f9-b0ab-9f1d634c9573">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA2" id="aabbf8a0-4d77-4876-966b-1ca1540eb820">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcha2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7acca514-d660-4e4c-b0e7-cb9796c028f4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="a7c154f6-80c4-4a79-975b-0a1ccbfad5b2" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d5036359-40bc-42a6-9aa2-f2c247882989" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA2" id="86869ee6-74b1-4201-877a-f26f47f8fab6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="307d8621-f0a7-4a02-9c17-58ee9b19f700" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="25cf9f1b-b7fa-4482-ad2d-94c32ef7caba" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcha2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="cc7230e9-d1d6-4048-92f2-a3f4c552ea25">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="15763cf1-cd9c-41cf-a426-3b5d396ed6fd" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA2" id="7cbd8ebb-4090-4ed0-9307-eecb075c2ea7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="bce66a82-e321-4490-b4b4-e6e5efd0f567" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[2]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4067c6f4-dc84-4828-a2bc-daaab27df850" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="dd0bdf3a-b1f5-4282-929c-9a5c58de30d1" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c563d199-41a5-482c-ab25-3e82d30cdd50" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA2" id="009c63ac-80ee-4c9e-ad6a-f8b2668f4df5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%' 
and sxm_xml_message like '%&lt;blocking>N&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#soapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: wishdatetime">
            <con:configuration>
              <token>${#TestCase#ctch2ProposedDate}&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no proposedatetime">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d552133a-bb21-4eb3-9a49-c830bbac8eb4" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         	              <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c997ab43-7d8c-4490-8551-4908eea72668" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a9bf201d-7346-4685-a276-93a87e55771f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCHA2" id="684b3548-39da-484b-9cb8-5d860d2ba64e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP" id="27fc2347-7f25-4c03-b030-55de8c77e8a5">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <sch:SendMessagesRequest>\r
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>\r
         <sch:Messages>\r
            <sch:Message>\r
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-04</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestSuite#TimestampNOW}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>\r
            </sch:Message>\r
         </sch:Messages>\r
      </sch:SendMessagesRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="acb09dfe-b924-4867-8a9c-5875d6667b99">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="a35415fe-c3a6-401c-97d7-33b7491bb487" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="3f8d1ec8-dc90-4557-82db-8953757d6467" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="102716a9-4bea-4b03-bc62-dc43c64fa003" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="973d9529-be4d-4615-ad78-4f5dadfba95e" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9e161c1f-8bb5-40c6-989a-69fbe1f5f1d0" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 7" id="efb12ad3-aad4-4595-bf77-ce22091e3b0c">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="c59a65ff-285e-44a8-af96-2866d1cd5475">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3526f7b3-7051-4c3e-b624-171fc10a8fe3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="efdd64b3-dd34-460b-b2e8-1bdf8074a91f" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="225b7ece-b0b9-4d29-8fe5-519e60de46b5" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="35d8017d-4428-4ac7-96cc-1c7e47a69dda">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="6b57eab5-8e7a-482b-b7ba-25fb3c6b63a5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c90377d-c59d-4e83-ab3b-1040abbb8c00" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="bce06875-657f-4dd5-ab7b-f896692ef88b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Completed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f9c928e4-359f-40c0-bfda-2a37bc9f7d7e" name="Xpath: verify ctd_ctp_buffering is true">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>f</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="270177b4-3b5f-4d1f-ba60-b9d272adbe6a" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="ffd89a67-1e92-44ec-bc0e-d4d6c82de33b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="400a0b1f-93ec-43a5-8944-ef289ddc5b28" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8273aa94-4170-4178-ad8f-472138da1833" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4b622c96-1cb1-4357-a682-559048ec84dc" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="85b9c700-068f-47cb-b848-679a39ef21f6" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTP" id="56e5a28d-94a8-41ce-ae79-faedb3716675">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="afd9a45f-48b6-494e-ab17-50dc2110bd24">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuit#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="f8e35c89-0c68-4076-bce8-6ce48a59016f" name="Contains: Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="43016be5-dc37-4d0e-833f-6422f76d414c" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="84cd6024-9898-4297-b882-ff6580e31067" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a67f904b-3670-4717-93f0-d1dbee0197d0" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTP" id="1545fbb0-13bb-495a-89af-0fa918768a6e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctpRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTP" id="63ba6a61-625b-40b3-afe8-18054d201490">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="5a41e9af-8ca1-4093-a51b-2bf8cf70b2b1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="069b1140-62a6-4080-81cb-657c01f4503d" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7ba5546a-7c16-4a42-8def-b6d0a9bc5339" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTP" id="4145395a-b8af-4dee-bf40-37f3cf318173">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctpRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Performed received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a0f37df3-1447-4ff3-8b41-e4afef027ae1" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="37084be2-ea47-404a-9772-dd9d2f357c03">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 1.hour
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def ctchaproposeddate = today
use(TimeCategory) {
	   ctchaproposeddate = ctchaproposeddate + 3.days
}
def ctchaproposeddatestr = ctchaproposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctchapropdatestr = ctchaproposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("ctchaProposedDate",ctchaproposeddatestr)
testRunner.testCase.setPropertyValue("ctchaPropDate",ctchapropdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="B2.16. CTR-CTRA ok-CTCH-CTCHA blocking-CTCH-CTCHA ok - CTC" searchProperties="true" id="a5d68b8b-d812-4018-b360-cabb8118baef" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="5c8fec27-02c6-4eb5-acfb-603fbf936838">
        <con:settings/>
        <con:config>
          <delay>13000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTR-Sunny Day" id="6f90e708-2ec8-40a8-9f9d-d1dd5008b89b">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>14-${#TestCase#contractID}</value>
 </validationblock>
<note>Sunny day-sent ${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenr. ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table" id="e9977962-7b86-4f50-bcd4-e39ede28886c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0ac2f48a-e3fc-4eff-8d3b-99b1b43b655b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="85db56e4-8757-4bed-8afa-3b286e8c5ff4" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a4ed8c62-8b37-49cb-9fab-b99476f29cee" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8b8faee4-dccb-4534-adf3-4ad2331d7e94" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="940ed617-c24a-42c2-9526-1f3ec4a96236">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="4d439c9f-a6d6-4886-ac1e-306f2485cda3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="00a9a348-88bb-44e0-9b91-f6f67abb4a9b" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="7921e5a8-5e37-4f24-9e34-24a25e240d52" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="930ae890-11c9-4687-adbc-cf93ea1d1412" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="d6ecac6d-5ccc-4984-be86-2aae298a99e5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7610b089-c73f-4559-bd15-7a5c476e8f74" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="98abd252-abe4-470d-99a1-a5bcbb3b8733" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="b7b06a78-d640-4ff8-9a98-502277186aea">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8bb47e6e-b912-4216-91cc-0f0f56f8618c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="5ee02efc-7729-404e-82e1-bef9bdb44625">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d3d27f5d-df5c-4d91-9dae-4a5b5f6709d9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="88d2d01b-6410-4acd-ac26-a38bc2f03c2f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="17ba91ba-34b4-457c-9c30-92957996a235" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="fb587fa7-1b61-406b-a0f3-a950ca9160ab">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="bcbe634a-d9e3-4a19-a45e-909ae5d1157f">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_Send" id="8a56bfa6-76cb-4ca1-832b-3a85d35d797f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f979dbb0-4d7e-48c1-8468-793ea8bad233" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="704a6e28-d758-4562-817b-488cc66c97c9" name="Script: SaveST_SXM_ID" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ST_SXM_ID[1]", "stSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="f6463ee5-67a2-4e7c-b32b-644b679cd439">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="64cb4b3a-ccda-45b3-8350-71eb14dbde78" name="Contains: assert donor soap version">
            <con:configuration>
              <token>&amp;lt;${#TestSuite#donorSoapVersion}&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="56c90030-23d4-4815-a7bf-7451f65952d3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0cc66279-459e-4ad6-b548-281ff9f2ea2c" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2d4e789a-87ea-4f69-a25a-46ed4048ec27" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTR" id="0f36f7d1-9bc7-4bbf-a52c-54e00c4186d0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="90eda840-d25a-4532-9169-c82c60763510">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="99794d24-e03b-453b-9f94-8e3838361eaa">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1913aa84-76cb-46d4-b96b-698a552ed584" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0c528916-8b41-482f-9a0f-622f6ed5cb58" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="f1e9f53b-16ee-4b88-a3ab-1d5f5e1baacf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="aff25f9b-75f7-40ee-b58f-b8fb91148b08" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="ddf5ad53-3d4d-4270-8eda-f44857b840f6">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="af817fac-17f9-4f4a-b94e-f73833e4ea96">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c2ab8c98-6167-458b-8ffa-6f4fdfb65514" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0f55da64-7819-4521-9feb-e327c2d0588f" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b84d60d4-bf34-4741-a1c5-7cf2142cb4f8" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4a7afd52-7f46-41b2-a5c7-eefcc810dfe5" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="17b62517-3168-41bc-8c42-d7d9d6df9dbd">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="566d03e9-661c-4d34-960a-d3983fe0ac8b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="49beafe9-0a35-4d4b-b1df-b19e16314f0b" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="a86491d1-c927-4395-93de-25bc9d3ba596" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="b28cd976-66c8-4b7e-9fcc-310d9c126830" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="10ca21dd-d54d-4ca4-9cb2-43a2127a9a61">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7581f85f-d348-4732-8bb1-f740202b4925" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="51f6c40b-7a27-43aa-b37f-a7ed73cd9288" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="dc4784b6-1f51-4060-bbbd-d67e5730c1b8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f13baacc-aa83-4d24-9b3f-a6dc7791c152" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="6838af81-0fbe-4ddd-8ba3-3a4badbfac74">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="XQuery Match" id="40cc6fa1-0d78-43c5-a10b-f043ddf625c6" name="XQuery Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="a5705841-c269-4093-9341-4af58677df31" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ee1c1d0e-c2ba-4d19-b4d9-aa0511acb02a" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8f126a08-b7f5-4596-ba7c-f53b066ca6fb" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTRA" id="f413efec-402b-431e-bd86-9cea57879ce1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="65126eb3-5fce-4b42-b832-8882ef7a5d51" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
              	          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="97ac8bb5-9634-45cf-81ce-2bcecf647f35" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="6a15c445-d9dc-42ad-8394-fde987e48f55" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2eee5295-6ad9-4522-b3bc-bbc16feaa195" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTRA" id="2bf8eb2e-51b1-4139-8b2b-56501f43d6f3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCH" id="d731f77b-d174-4330-84c2-ed6ad403eac7">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCH" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<change>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#soapVersion}>
</change>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="611515f4-aa5a-44bb-9038-5efb4661d656" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="4c4aa14b-781b-4325-8f36-84e716be7574" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCH" id="5ef2a5f1-465e-4b04-b494-cc4de0812891">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cace04ce-3fdb-413e-b3d7-5f06206401ee" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e3369319-200d-4393-92f4-71c442de8dd6" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="dbaf1387-4b99-4ad7-8168-9ceb48cb5ac7" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="59ad0d37-9896-422c-b7fd-8b600a125be2" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller 3" id="c70552c1-7e08-463f-82d9-9a5e70d4e73b">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCH" id="1c9d65fd-4085-449f-8db6-e4c275c44693">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b9685b3d-200e-4698-9086-fb365c04cad1" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="88e9a698-1795-467c-999c-4acbde7863b9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="542769d7-255d-4a5f-87ba-15633185258b" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCH" id="dc78810f-f314-42ce-81b6-9b6b0db73a28">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ed1c95ee-4c4b-4f55-b01e-850f78116a91" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c3583683-9387-4739-a341-c67ab8c86022" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="b620b848-e188-4c91-9b89-cb99b199509f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#propDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f91efa64-a4cc-42b2-a2fd-6e7bce10d97b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="f594537c-e74f-4f18-887c-88a66b617ea4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="2f7d35d5-6695-4e22-aecf-3764a6a3f60c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="02ba576b-74f0-460f-b95c-d7b5670cdf9b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4a07b0ce-4c88-4150-ad8c-fe6dd00c9661" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="802de207-8caf-4c2c-a6e1-d4c56789f4ec" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="5e0e0bdc-5bda-4057-b406-384170d99e0c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="158adeb5-bff7-46e8-8198-1c0da041d943">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fb13562b-3b25-45c9-bf62-83565a32fbfa" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0978f39d-5f7b-4677-baf6-8603083720ea" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="062802d1-e1d3-417c-8b47-d95fac86b680" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCH" id="da821897-c116-45c9-9895-9b50ced95d72">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="7a67f456-a6d7-4d2c-9fa2-7e65675d39ba">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="51693ae1-fbb4-4ea2-9614-2bae595fb659">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="fae3a59b-b18a-4bb0-b0fd-d50bfe8dc1eb" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="37f883fe-4ddf-4e84-89a5-f4182b4795fb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="133503ba-e19e-40a4-97be-be3664832880">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="acb2c734-9d3d-4428-bfcb-c2122d210ad8" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA" id="28dd3731-7fd2-4fd8-80ed-2e6db8637b31">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<blocking>Y</blocking>
<proposeddatetime>${#TestCase#ctchaProposedDate}</proposeddatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="893cbc51-c1b4-473b-86bd-0b90ad3f9503">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="aa426f9f-52a5-4395-aeff-6c5f077e7382" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3b028d1b-7451-4980-9a02-40105601ad81" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0ac4cbaa-f191-4693-a686-dff743bff779" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d2810c49-d4f3-4f84-80d6-4f55ed6eb2d8" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="01b21b8a-a97b-4353-b52c-6f8439b0f585">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="854e12b3-f474-4d8d-b361-638ee0706a3d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e7130e05-faa3-426e-9d63-6c2162bcd8e5" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="ccf8e3a3-b7b5-4b2a-9ba4-5f67563b4c2b" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="6e9bc345-3100-4ece-b3ed-e57e081cf072" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="0048570b-5395-4cc9-9ffe-b35a9227029d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e9f27fa4-dba6-4fdb-90a1-f97f5d1be614" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="dbe457bf-a9ee-42f0-ad03-e3a9c06fd575" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-blocking" id="7b68ea5b-ef33-445b-81fa-c7cfa4ab754a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#cwishdate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_CTCHA_PROPOSEDDATETIME</path>
              <content>${#TestCase#ctchaPropDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b61d7e66-e799-4b93-b6ea-aa2277bd9e22" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="06d61199-db14-4bdc-9776-4e68299cf657">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="8af8dc75-df09-4ea0-b7eb-67cc0baa0261" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f2701d10-5502-4ca3-8a81-9143ea0f6be2" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="91582b09-f380-4ddb-9453-aacd43b041f1" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="34fb7a0c-2935-4c83-aa52-1d451ff391ab" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA" id="b646a9ce-339d-4dcf-b1f5-1373903eaed1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%' 
and sxm_xml_message like '%&lt;blocking>Y&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#soapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: proposeddate">
            <con:configuration>
              <token>${#TestCase#ctchaProposedDate}&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no wishdate">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4e3586cc-73e8-4cc0-a4e3-fb31eb644576" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         	              <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ed3422d5-56df-43a7-8304-358cd0b9cd02" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e8af616a-ddf9-4a5c-8408-29f606e3d6d5" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCHA" id="d46e4603-ce49-4271-aeb9-9d76d3bc7b46">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCH2" id="b993a2df-e272-4a49-906c-584a22e1fe8a">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCH2" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-03</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<change>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<wishdatetime>${#TestCase#ctch2ProposedDate}</wishdatetime>
<note>Change ${#TestSuite#soapVersion} OK, 2nd Change in dossier</note>
</${#TestSuite#soapVersion}>
</change>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="611515f4-aa5a-44bb-9038-5efb4661d656" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="4c4aa14b-781b-4325-8f36-84e716be7574" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctch2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCH2" id="264ed6d3-2743-466f-892f-49019776eaca">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctch2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctch2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctch2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8acbe359-2129-4c2c-bf60-8943648de478" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b0a84ce3-e4b4-4572-9972-533341a37f32" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="dd58b235-ce1f-4d70-88ab-caec55ba6e21" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5332532d-3d51-4bde-b2f1-73f042e57ea4" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller 5" id="7e647626-afae-45ee-9912-712c9fa6aee9">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCH2" id="86029601-720d-4e1d-af10-7d7984d37f53">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctch2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ae7c8b62-1551-4cd7-b6e5-5c9f0fd20dfe" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="1a21519f-640a-44e1-98af-be835fd1b866" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c20f1dd4-fd99-4060-994e-0bcfc83e9aa4" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctch2RSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCH2" id="6002cab3-1cab-4886-8f30-8097bd6e90ac">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctch2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="2c613a81-9259-4bb1-b6cc-9627457248fb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a22a89b6-4abf-48fe-82ce-5107ac5d0f4d" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctch2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH2" id="17ce2beb-72bc-4f25-9881-f1f34c4f9246">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#ctch2PropDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4bb3c5e6-0358-4f3a-bb9d-7f36ea414dd5" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH2" id="c3a0a33f-b273-48a6-ac42-1e151ed83878">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0558fd7e-5580-4554-83b2-b3584b05066c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c7737b1a-c1df-44b3-9390-f5fc8396131d" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="38e848e2-7144-4443-b808-36f53c3bfb1e" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH2" id="05b206c9-831c-4317-a6ba-9338f35ab64c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH2" id="d54d072f-adc7-413d-b784-f5b8c80805a9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="60640bcf-8a2b-432f-b4e6-f46d17ba0c10" name="Xpath: messagetype change">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[2]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2f8a7419-efbc-445c-a6d3-6e1f21ffca33" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d6d6725f-e150-4780-8316-a44d25aca03c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="2b98ce49-3ffc-471b-adaa-7096b2058d48" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCH2" id="57520062-1a29-4de8-89ac-e1394a706919">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH2" id="7f20ba8e-e55a-4da8-8141-9f632f4609bc">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH2" id="20c2cf4e-ccf4-48c9-bae7-2e9ffe7a696e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="65a8c850-86bb-4cc2-bf73-5b893d390535" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cc854b74-9ce6-4104-ae99-aa2159108a71" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH2" id="44408512-a2fc-4a63-9d63-82fc0f5f2ed6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctch2RSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1962e2aa-0c32-4dcf-99f2-568a0292699d" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA ok" id="1735fc17-02f8-45b3-a7fd-6bd2818da125">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-03</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#ctch2ProposedDate}</wishdatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcha2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA2" id="e08a5230-7838-487b-82f0-852e79752707">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcha2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1c88186c-1714-4c3e-a0ff-dc315c725d03" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="dd73e2b3-9301-4305-a072-0703c2644ee9" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcha2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="bb152b0e-2f50-43f0-acb7-26e49865fb8f" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6a978efc-85a2-48c8-9d3b-c2f976286cdc" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="52e7c0e1-89ad-4810-a267-3681c9d29813" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 6" id="e4a8030c-897f-4a54-8ecb-48e369f61504">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA2" id="aa081ff4-12da-4df6-ae2b-69b398526e70">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcha2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7acca514-d660-4e4c-b0e7-cb9796c028f4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="a7c154f6-80c4-4a79-975b-0a1ccbfad5b2" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="3958af21-cf90-43d0-8b4c-855fe2c3928f" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA2" id="381a5841-c6b5-4129-9c5a-8149628d8d7c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="307d8621-f0a7-4a02-9c17-58ee9b19f700" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="25cf9f1b-b7fa-4482-ad2d-94c32ef7caba" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcha2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="4637a751-1c64-498a-acda-2d2076ad81db">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="15763cf1-cd9c-41cf-a426-3b5d396ed6fd" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA2" id="5faacda5-1414-4e92-9087-ee53cb8a2bf4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="bce66a82-e321-4490-b4b4-e6e5efd0f567" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[2]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4067c6f4-dc84-4828-a2bc-daaab27df850" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="dd0bdf3a-b1f5-4282-929c-9a5c58de30d1" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="793ed985-7129-47d1-aaa8-6a809aa36e61" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA2" id="1c0461ce-5dad-4062-a910-f36471a23403">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%' 
and sxm_xml_message like '%&lt;blocking>N&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#soapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: wishdatetime">
            <con:configuration>
              <token>${#TestCase#ctch2ProposedDate}&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no proposedatetime">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d552133a-bb21-4eb3-9a49-c830bbac8eb4" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         	              <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c997ab43-7d8c-4490-8551-4908eea72668" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a9bf201d-7346-4685-a276-93a87e55771f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCHA2" id="c6ea98e9-57d1-4297-99c9-f580b75ac087">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTC" id="37912b98-8cd5-477e-9b64-1c6b10fa5d23">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTC" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <sch:SendMessagesRequest>\r
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>\r
         <sch:Messages>\r
            <sch:Message>\r
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-002</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<cancel>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<note>Cancel sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</cancel>
</body>
</message>]]]]>><![CDATA[</sch:Text>\r
            </sch:Message>\r
         </sch:Messages>\r
      </sch:SendMessagesRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTC" id="53306b7e-3ee9-475f-853b-3eb96a9ad312">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>cancel</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="2d3ebe21-fe7e-4ea6-85da-05fdbd457893" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="fd034a4c-cfe7-4f38-958d-841058c68fb4" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f3cd9486-4c72-47d0-8f19-4791fca08298" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="95d7db8b-d18e-4a03-ba7d-4b7c26c85651" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="2ebbd000-65bf-4406-8070-c2c485697c5d">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTC" id="a256bb62-7357-4a10-9925-04ee30d47e1d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="a0eb7785-dc83-4317-b38a-1bbe57cd802f" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="cc51dbdd-db84-4532-ac8c-9e6149519641" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="1d36e1f0-7be6-405a-b8b2-98a4ef069ec8" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTC" id="d461e5f9-69ef-4656-96bb-c58cc2f1c97c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="35d91fef-868b-403e-ae77-dc9f07026b8f" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="aded836b-b9a9-4d2c-bbf9-082e8ff48a23" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTC" id="a0564260-8e70-494e-8a11-fbb8b03a4cea">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Cancelled</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1e18bb62-a102-44ff-87e0-2e05f74d610b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTC" id="d751aa4e-8754-408c-a626-68517d309c87">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=11 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="b199af58-886b-4a43-943e-d947f7528217" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="79988e9c-7c72-4aa4-8e92-407f19a03f80" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1915dcf5-b846-4d95-9df5-7c2787a4a674" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c24c9769-01fb-4b9b-aa9a-41d1e6e9a455" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTC" id="683d50c4-9c99-40ff-a5bb-d1f59e0dc0f5">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
 
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTC" id="cc7cbee8-da1e-4ed5-a577-3c50efee443a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#contractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1270b552-020e-4693-a671-1f97f10b284c" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac29c4eb-709d-4d3c-84e1-ab07c7491edc" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8f8d03f3-71c2-4ff7-8234-188252f1dadd" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTC" id="e93ba1df-7dbc-419d-9c8c-7bc37f5921ff">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctcRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTC" id="011f0ee8-597a-443b-bd8d-aeb0c1b97df4">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTC" id="a39ba6a2-25e3-4a8e-a450-bf5e241e9462">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e83f7d20-765e-4780-b99b-671803fc721b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a8711817-cfcf-4b47-a346-28ec81000156" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTC" id="def03326-3adc-464a-bf25-8057d67e9321">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctcRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Cancel received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Cancel received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f449e3ef-8e15-4224-8694-8000c1bde21a" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="e64a5474-9571-4e90-aad8-73f4f12c6836">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 4.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def ctchaproposeddate = today
use(TimeCategory) {
	   ctchaproposeddate = ctchaproposeddate + 3.days
}
def ctchaproposeddatestr = ctchaproposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctchapropdatestr = ctchaproposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("ctchaProposedDate",ctchaproposeddatestr)
testRunner.testCase.setPropertyValue("ctchaPropDate",ctchapropdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="B2.17.  CTR-CTRA ok-CTCH-CTCHA ok-CTCH-CTCHA blocking-CTP Buffered" searchProperties="true" id="6ec27a13-5562-48a9-8d3c-7a75f4494d5f" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="e7302f91-4dea-4a07-a837-009876c237d8">
        <con:settings/>
        <con:config>
          <delay>14000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTR-Sunny Day" id="2ed42107-bc3c-4aab-8255-e47a6730f3b1">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>15-${#TestCase#contractID}</value>
 </validationblock>
<note>CTR sunny day sent ${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table" id="8c32613d-fd78-491b-8881-ae8051f62a31">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e608433f-ca36-4e70-8575-c50cd0734cbc" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="dc36249b-5b49-40c1-8737-21638355963d" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7dad7bd1-8d67-4777-a859-fe32f5fe1f06" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9823d754-f8f5-495b-a469-7346fccd6527" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="57d8f123-1c6b-461e-9fb2-975686e1af91">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="af1c45e8-5afd-4615-921e-151160b28e1e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="28644aa4-3c71-4619-b37c-8b0e5580b9a0" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5c03823c-0aac-4618-ac8a-c215f9695be3" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="3e6b7cfd-4596-4350-8991-7d2d94a51d94" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="2f7510c4-aed5-439f-b80b-3189ff1afdfd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="JDBC Status" id="5b820e37-9066-4edc-a2e3-9c7b11fb151e" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="58521b21-f33c-479b-97de-74fd5c87ed7a" name="Xpath: 1">
            <con:configuration>
              <path>count(//Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4c88da08-1618-4ccb-ad7c-5d2df210192f" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="666faa72-ed48-4258-a055-04788dfdb396" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="fea73f2e-b4cf-4131-bd32-8b7184495c47">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0238c840-f34b-494a-b297-4bc66d3fe5c4" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="29fbe815-4d17-47b1-aac5-d8303b607b21">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4fd75a86-3feb-4026-be5c-db8dd5af415f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="29506a6d-a3c5-49ae-ad2b-e630ba8c1494" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="04868c77-263d-43a8-8438-084f0913f069" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="0663696c-e075-45b8-885e-0854b5e83910">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="1015b8ef-21df-431c-a7f5-946a3a32b9ea">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_Send" id="bfa8e3cb-b41a-465d-86a7-0c72ef75c71f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="2cfdf3cd-d52e-4b0b-8e09-273e6960e53c" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="1f1e4cc5-1554-472b-9f37-12708a684e63" name="Script: SaveST_SXM_ID" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ST_SXM_ID[1]", "stSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="09af42a6-8d2d-4364-8927-43e95cc34d87">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="64cb4b3a-ccda-45b3-8350-71eb14dbde78" name="Contains: assert donor soap version">
            <con:configuration>
              <token>&amp;lt;${#TestSuite#donorSoapVersion}&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="742a139a-6b62-4449-96ed-84f26cce73ec" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="39e2c30b-ce8b-4a27-ae9a-80676f10f1f4" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e8cf4362-9a61-4e68-8c2e-67a05bc3a187" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTR" id="43187a45-1968-4fe7-a55e-13dabd4c6263">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="5c4e3ee7-752f-46d1-be93-532c46253054">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="a67b223b-45a5-4f94-8930-d90208576d46">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="4f774148-6e71-4697-ae47-ee0a8462ae4c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="410648b5-0e06-44b2-804f-ca681ffdc9dc" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="1ec6a1a7-9be1-49fb-9768-7ddf37b88e9a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2cc6eeb9-3076-4aa1-b5dd-a4d56ab1fc9e" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="0b1663c3-e08b-4c43-a295-1d7bcad0bb97">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="169395fe-7b22-4c4d-96b0-e3f7fff79bcf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="113454ea-cf42-427f-a41d-b164214e4335" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="469dba6c-8e72-4212-8248-c1b4bc13bf62" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9140a729-cc15-4762-8cb9-7bd825d2a1fd" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3b8b0475-0013-4080-99e7-f64906e5a6c4" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="670505f5-ace5-4b01-a739-3cc3842d3531">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="5aaba78e-19bc-447c-8fd0-5e99677b95a6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ff1ff1e1-5347-436f-9948-574895c30ce6" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5ebea46f-95bd-4f49-8715-2dd09cc51153" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f009f4fa-0a52-4206-9773-81e0e415ce0e" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="7c97de2b-87ee-4e7d-ba4f-5cf9ab0032f3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="5b820e37-9066-4edc-a2e3-9c7b11fb151e" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="58521b21-f33c-479b-97de-74fd5c87ed7a" name="Xpath: 1">
            <con:configuration>
              <path>count(//Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3eeb6b92-6e52-4cc0-875f-561e62bdff8c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9b61ceb5-af71-4f34-a142-7d8d7cf967c4" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="337f22ec-d625-4bd3-bab8-c81245454f20">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="94e96d83-3af1-45cb-8897-f600b13e9398" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="3549dbeb-5187-4d59-a3b7-b9afe48be8c0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="XQuery Match" id="40cc6fa1-0d78-43c5-a10b-f043ddf625c6" name="XQuery Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fbe04b6c-acb3-482c-9ca1-1be5ab0e5dd4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="505a9f96-90e8-4741-8401-d6aa141bb5ea" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d46bcf3a-a745-4a6b-a699-e6980cba9730" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTRA" id="bf2bc213-4d47-4ab7-987e-74f3c89e0854">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="65126eb3-5fce-4b42-b832-8882ef7a5d51" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
              	          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac17c2cc-e6e2-411c-b787-2f1ce682dd13" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e6766a59-b7b1-4a81-b5b7-3e3fd01cf9f9" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb615f6c-0b94-4782-82f4-4f5e57fa912a" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTRA" id="a6b23734-784f-4dcb-ad57-b4516fd5a4dc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCH" id="b9e546f2-75ac-4482-a4cc-d31703cfab87">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCH" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<change>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#soapVersion}>
</change>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="611515f4-aa5a-44bb-9038-5efb4661d656" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="4c4aa14b-781b-4325-8f36-84e716be7574" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCH" id="6f6dc0ba-ca8d-4d36-b651-241473e3b3b1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="21e3e1b2-8788-4d2e-9dfe-36d8424520df" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="fff15a85-9deb-41c9-98aa-e65863b548a3" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1a797327-d0f7-4df5-9445-0df78f631623" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="da67fa12-e8b0-4aff-b03f-130c589bfd39" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller 3" id="70cb10cc-f9dd-4184-8962-9b3e8589be33">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCH" id="7ef019aa-c0b1-4150-88bd-206edd62450f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d06d8bfa-0cd6-4ef9-909b-0d4c01b69747" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="921a8462-90bb-4d1d-9ea0-93dc09f331a5" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="6f31981e-18e8-4004-a53e-d9daa88e0e81" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCH" id="b7d90c32-8cc8-47aa-933c-93d195e21c98">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="5b820e37-9066-4edc-a2e3-9c7b11fb151e" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="58521b21-f33c-479b-97de-74fd5c87ed7a" name="Xpath: 1">
            <con:configuration>
              <path>count(//Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9a475cea-a15a-4359-8d23-4f1664908ae4" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="bdde0c0c-2cd8-4185-922b-ec88fd435623" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="3fb5a95d-9da1-480e-92dc-ff425dbcafb5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#propDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#propDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="92461ce7-674b-4d95-b4b0-ab8c809faba3" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="ca32a3f3-8f15-49ca-9036-8c69325b5c4d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="2f7d35d5-6695-4e22-aecf-3764a6a3f60c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9dd8ac76-2e12-4ad2-9fe0-b688a7540dcc" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f1b0398a-c387-45ea-a4d2-7888b29e006c" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="5ad29cb1-990a-42a3-866c-8e00ca15a952" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="3cd81fa1-75a5-4ff6-bc3f-169799f956e9">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="2c22ca13-6b28-4a13-81ff-b229c6d06435">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fb13562b-3b25-45c9-bf62-83565a32fbfa" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e4f8bb36-b12d-44c3-9346-6d011da427fb" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7f13a0fb-b90a-48c9-b005-d1c59c2e9a2d" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCH" id="343b2721-d390-4dfe-9fd7-b63b177c9b03">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="8b4c1b06-bad6-45cd-9a3a-68b381bac9c4">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="9d19438f-e96c-4463-8d2d-72317d319e74">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="7baf7e06-6645-4b29-9fba-7956311dcb6e" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7cf2db71-8cdc-4db5-98e3-4fd072a9b7f6" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="311b4f77-e744-4d35-b380-575a768eac82">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fe76951a-9492-49ae-ae22-46cb8de9dd08" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA" id="da1745cf-83b3-4177-be45-2d99dcec58cb">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="c116696b-2576-4c54-8b0c-c0572662ebce">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="db3b59a9-0b0d-410b-b9bb-0a0ea2a89bfb" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="007cbdde-0483-4e14-b969-7120f268878b" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3a122336-e3d1-40e2-9e86-744d3503c166" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2fe8a63d-7d3a-46bc-98bd-dd5185c694f8" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="7b417dfd-eab9-44b1-a8d0-0bae4ad7e754">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="dcfa55bd-b878-4414-93a7-fdec10f558ce">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3be24e4e-f095-4264-88ae-325093a20ddc" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="71c0e12e-c332-4a10-94be-ec97a5084ac5" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="08668acc-ce2b-49d2-8685-723e2b7a3287" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="ae1b6364-da0a-4ce4-b6d7-fad86c92dd58">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="5b820e37-9066-4edc-a2e3-9c7b11fb151e" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="58521b21-f33c-479b-97de-74fd5c87ed7a" name="Xpath: 1">
            <con:configuration>
              <path>count(//Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="429a4126-6fe5-41ec-8607-53e90a1d676e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a2518e00-8cf9-4c37-b0f3-7a0e4dc6ae21" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="f8014bfa-b16f-4427-8539-730bdef5f763">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#propdate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#propdate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="2582f0a6-3a84-442e-bee8-eabf46b40a41" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="e37f179a-b184-4ade-a649-1c86d118655d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="470b6e91-82e8-4d38-80d1-d7e26ea5adde" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0815089d-adb9-4aac-962c-eb21a5ed6b73" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d6492f4c-5015-4979-85a8-ec0d1395559f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="cd8a8010-34bf-4cae-87df-917d2d3ad7f3" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA" id="80fc12f5-45cc-4b02-adf5-61a0b3324cf5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%' 
and sxm_xml_message like '%&lt;blocking>N&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#soapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: wishdatetime">
            <con:configuration>
              <token>${#TestCase#ProposedDate}&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no proposedatetime">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d552133a-bb21-4eb3-9a49-c830bbac8eb4" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         	              <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="036532e5-8a29-49bd-842e-01a43c95fe68" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="270121b9-ef1d-4c46-a96f-5a5fd6283026" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCHA" id="b237c19e-ea56-40a4-bf15-ff65eb807866">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCH2" id="6783511b-b952-4a69-b06c-2bbdab6f9729">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCH2" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-004</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<change>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<wishdatetime>${#TestCase#ctch2ProposedDate}</wishdatetime>
<note>expect ${#TestSuite#donorSoapVersion} 2nd Change in dossier</note>
</${#TestSuite#soapVersion}>
</change>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="611515f4-aa5a-44bb-9038-5efb4661d656" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="4c4aa14b-781b-4325-8f36-84e716be7574" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctch2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCH2" id="356758ea-f5ce-40c6-8a77-f5b4930d267b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctch2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctch2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctch2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="efedf71d-5dc6-481c-a44c-6f5cdea5f3b8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a30993e4-0678-4d3d-8185-93ff7d194a3e" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="77d2e9d6-e743-4136-893d-690abafc83fc" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2033917c-f14e-4b91-922c-fde0b5441688" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller 5" id="dd29f5cd-732c-48c9-9ce8-c971bfef00a3">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCH2" id="cda58e40-0dda-4506-a03f-073fa1c3fb36">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctch2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="862f3567-12e4-4b19-afc4-b7cef5030697" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="8650e8f1-9839-4666-bf1f-41033b47dc6a" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="504069fc-24e4-4e7d-b7b2-607f3275db0f" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctch2RSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCH2" id="e67c9dff-9883-4afc-b871-3f18e8afeb46">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctch2TransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="5b820e37-9066-4edc-a2e3-9c7b11fb151e" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="58521b21-f33c-479b-97de-74fd5c87ed7a" name="Xpath: 1">
            <con:configuration>
              <path>count(//Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5f8c5fbd-2879-49af-b203-d8b7fac5b127" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4f818c1f-d868-4543-b1ff-5170fb571316" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctch2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH2" id="06b6712f-138d-41c6-a4e3-bc45a385ca8d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#ctch2PropDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="24aa0b66-ad2b-41d2-af7a-35f45da3208a" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH2" id="f9ca9e25-aa83-4741-a99b-a24afc228f07">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="14bb0a86-2494-4c6f-902b-add70a07da91" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="54058d37-9ce5-4571-8bd7-0c7ca616065d" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="08d110da-96ea-4198-b3a9-5d7aad27104e" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH2" id="de1628ac-37a0-4da6-ba6c-c3fc148210c3">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH2" id="ad0a9671-92f8-4374-aa18-e1c856c52594">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="60640bcf-8a2b-432f-b4e6-f46d17ba0c10" name="Xpath: messagetype change">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[2]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2f8a7419-efbc-445c-a6d3-6e1f21ffca33" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="19e772a0-1bca-4a4e-97e0-c96a93f007fa" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ac9e1558-7c31-408a-a0d9-8a7b02856119" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCH2" id="5572f78c-ab1e-473a-b769-f71defb66c91">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH2" id="9219b02c-df86-4cbb-92c6-d1180b2904d5">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH2" id="ef27b19a-4ed3-45a0-8c69-c3984f06a950">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="56235225-2397-4447-9ba8-b1b801802ed9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7db29f4b-3d31-48a3-b058-871d620961a3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH2" id="43ec3006-50d8-4a84-90f2-405e035d1fcb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctch2RSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7a02555e-9d71-4cea-8a7c-aadc9e5015ae" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA blocking" id="fceb1983-80de-4a54-9d73-013a211671d1">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-05</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<blocking>Y</blocking>
<proposeddatetime>${#TestCase#ctcha2ProposedDate}</proposeddatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcha2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA2" id="4d31be97-6049-47a7-bd18-401dd1e531d2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcha2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fcc25bb6-82e9-4766-b9da-aa7d240585cb" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="9a9d5133-446a-4762-bcab-aa8c094826b7" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcha2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="71b451ab-1123-422f-ae04-61bbc83bf02d" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f9f3ba4c-e73b-4b81-81b8-ecdffa26f44c" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9df30b48-98bb-4333-b3ec-07405da62536" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 6" id="881c5d07-1c4a-4a2e-aa58-907d7948fc78">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA2" id="ac356a18-57b7-4fe5-84ae-42560865916d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcha2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cb14cfec-071d-499c-923f-12867698cc9a" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="6b3a1e19-0e61-4cbc-99d6-9fe7d9a0912f" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e927a42f-8c51-41ea-9560-c5315dcbe7ed" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA2" id="5e1be130-b870-4453-9725-407b102b17ed">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="5b820e37-9066-4edc-a2e3-9c7b11fb151e" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="58521b21-f33c-479b-97de-74fd5c87ed7a" name="Xpath: 1">
            <con:configuration>
              <path>count(//Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="15170a2b-576b-4b00-8d58-23fa68cefa68" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5e7f575c-c714-471e-bfeb-1a5a490d814a" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcha2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-blocking" id="34cc71d4-7581-41d6-86a9-dc0eb0834fe8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#PropDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_CTCHA_PROPOSEDDATETIME</path>
              <content>${#TestCase#ctcha2PropDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b4a36c5b-1fea-4a10-a2f9-c7f7f42ab055" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA2" id="ce609230-d9a9-44b8-bd2d-2bd60af4f648">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="bce66a82-e321-4490-b4b4-e6e5efd0f567" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[2]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3dc0e071-6c58-4c65-ad68-e305cc09ff3c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="80ca7f3c-8cb1-4ae1-950a-0dfdd73c1028" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="7081b465-6d37-4b76-bfb0-bf0c3c7f08eb" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA2" id="dd725e7e-69d3-49f8-a9ca-045bd2eff4c9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%' 
and sxm_xml_message like '%&lt;blocking>Y&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#soapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: proposeddate">
            <con:configuration>
              <token>${#TestCase#ctchaProposedDate}&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no wishdate">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4e3586cc-73e8-4cc0-a4e3-fb31eb644576" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         	              <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d91237a4-664f-4f7d-8271-ca1d9a52dda3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="82e39ae3-1264-448d-ba40-6c87c1b5d33b" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCHA2" id="af8a86db-f67a-4ada-962e-2f8cff913a73">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP" id="325512c1-5368-4ddf-93a9-433e60ac9b86">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <sch:SendMessagesRequest>\r
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>\r
         <sch:Messages>\r
            <sch:Message>\r
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-007</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestSuite#TimestampNOW}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>\r
            </sch:Message>\r
         </sch:Messages>\r
      </sch:SendMessagesRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="f69e0841-b9df-499e-8d46-0e98b3d14f04">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3176a6e8-f1e8-44aa-9706-fe3f58d93f11" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="6614afe7-d836-45e8-8d4b-a10502c17734" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="90270da0-69ce-466d-9eed-6a5497e02dcb" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0ee4d280-cbd1-4704-bce2-ecdb937b8175" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f75d820c-d5bb-4d11-ac55-f4cd0bac74ed" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 7" id="3d1df586-ea20-406e-99b9-d129e3e7b2a9">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="7ce809fd-4016-481d-8158-f1b16decaf07">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="97cc9448-eed3-4bfc-b8ea-60a22e1e0249" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="477fe29e-b29d-40c9-9fe0-0546938dc7a5" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="b06406fc-07fb-4dd8-a63c-1bf75be3ae42" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="25c1dfe3-25b1-420f-8d6c-2dafe42eea6e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="5b820e37-9066-4edc-a2e3-9c7b11fb151e" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="58521b21-f33c-479b-97de-74fd5c87ed7a" name="Xpath: 1">
            <con:configuration>
              <path>count(//Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a1e42427-3daf-44cb-b0bb-3a08612d383c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b0099964-bcfb-49ef-ab1b-01cf05e44673" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="68bf3d1c-1a34-42de-a0d1-5547be3302d1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="031d2b57-2c5e-44f1-8519-2ad790ad910a" name="Xpath: verify ctd_ctp_buffering is false">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="006966e1-a985-4f58-9298-f4712eef6701" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="de25a180-b4ec-4051-ac1e-5e5e78c470d4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="8273aa94-4170-4178-ad8f-472138da1833" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5aae5786-ac72-4a4a-a1a6-87d10ba5ab90" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="da5dffb9-2f8e-431e-a5d0-f9bf3caa45b4" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="bd403838-3a74-4bed-b409-ad93bf299993" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="ed0ac9cd-1c49-4cd6-96f2-c4a580fd4d7b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="069b1140-62a6-4080-81cb-657c01f4503d" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c3820e75-a6e5-489f-b047-8a3e61166f10" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.day
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
// chcha proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="B2.18.  CTR-CTRA ok-CTCH-CTCHA ok-CTCH-CTCHA blocking-CTP direct" searchProperties="true" id="8ccda0d2-736d-4fb0-aab9-86e37f155dd2" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="f58d0286-6f91-4f53-acfe-29be294a80ed">
        <con:settings/>
        <con:config>
          <delay>14000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTR-Sunny Day" id="267205a8-8b56-4bed-9696-f86f2547af7d">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>15-${#TestCase#contractID}</value>
 </validationblock>
<note>CTR sunny day sent ${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table" id="2747fc0d-795f-47a1-aa87-309d5bed17bc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e608433f-ca36-4e70-8575-c50cd0734cbc" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="dc36249b-5b49-40c1-8737-21638355963d" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7dad7bd1-8d67-4777-a859-fe32f5fe1f06" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9823d754-f8f5-495b-a469-7346fccd6527" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="87208ffc-f464-48ce-ae00-8db8065ec5a1">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="883b7f30-74b4-48b9-86d0-d7a6c16ae379">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="28644aa4-3c71-4619-b37c-8b0e5580b9a0" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5c03823c-0aac-4618-ac8a-c215f9695be3" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8b958787-0dbc-45c2-86f1-4253bc7d6649" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="c4cd63f2-669e-49be-8826-393fe84b3f48">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="JDBC Status" id="5b820e37-9066-4edc-a2e3-9c7b11fb151e" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="58521b21-f33c-479b-97de-74fd5c87ed7a" name="Xpath: 1">
            <con:configuration>
              <path>count(//Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4c88da08-1618-4ccb-ad7c-5d2df210192f" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="666faa72-ed48-4258-a055-04788dfdb396" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="5d3a0782-7f2e-4267-8680-392ee46058d7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0238c840-f34b-494a-b297-4bc66d3fe5c4" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="5728b4a1-8c61-495e-bb07-575d82e6758a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4fd75a86-3feb-4026-be5c-db8dd5af415f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="29506a6d-a3c5-49ae-ad2b-e630ba8c1494" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="1868d073-bad2-48dc-b0fa-782756b1e6a2" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="065f2073-f4b1-4c60-8e9f-dc27e9f4100e">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="e1a287f4-a1d5-45ee-9a29-35601805c5e2">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_Send" id="da5c9a03-8d28-425b-a8a6-a92cf29c527f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="2cfdf3cd-d52e-4b0b-8e09-273e6960e53c" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="1f1e4cc5-1554-472b-9f37-12708a684e63" name="Script: SaveST_SXM_ID" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ST_SXM_ID[1]", "stSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="644a0e49-d10a-48cb-a31a-4e4689060ee5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="64cb4b3a-ccda-45b3-8350-71eb14dbde78" name="Contains: assert donor soap version">
            <con:configuration>
              <token>&amp;lt;${#TestSuite#donorSoapVersion}&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="742a139a-6b62-4449-96ed-84f26cce73ec" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="39e2c30b-ce8b-4a27-ae9a-80676f10f1f4" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e8cf4362-9a61-4e68-8c2e-67a05bc3a187" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTR" id="9c3421cc-137b-4288-9238-c19e380f7417">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="a2b57b28-7a8f-480f-9e5d-2183efce37b8">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="6e9c2fc9-050f-4cf0-9d3f-fec07f533993">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="4f774148-6e71-4697-ae47-ee0a8462ae4c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ea8aae60-632f-423e-ab6e-ac0a2a41e89e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="f8a6c08c-2efa-4217-9b75-ba5d10077836">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fbe29dc1-b09f-4c54-8ea7-2b512d078e2b" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="5845a024-b205-4a81-9ca1-0fbc3cb52ef7">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="868931f3-cbd5-438f-8e3d-4b5692c1b9ae">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="113454ea-cf42-427f-a41d-b164214e4335" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="469dba6c-8e72-4212-8248-c1b4bc13bf62" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9140a729-cc15-4762-8cb9-7bd825d2a1fd" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3b8b0475-0013-4080-99e7-f64906e5a6c4" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="a21a08c6-6886-4ac5-b2cb-9c1a0edbf6e7">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="9157727c-c7ae-48d3-a1e3-6927f15625b5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ff1ff1e1-5347-436f-9948-574895c30ce6" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5ebea46f-95bd-4f49-8715-2dd09cc51153" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c58107e8-cd9e-4dd8-85cb-1414d41d48ea" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="d6260c1e-c429-436b-9a51-0948a17bd5fa">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="5b820e37-9066-4edc-a2e3-9c7b11fb151e" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="58521b21-f33c-479b-97de-74fd5c87ed7a" name="Xpath: 1">
            <con:configuration>
              <path>count(//Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3eeb6b92-6e52-4cc0-875f-561e62bdff8c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9b61ceb5-af71-4f34-a142-7d8d7cf967c4" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="b1b65902-3de7-45a2-8a7d-32d29d601077">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="94e96d83-3af1-45cb-8897-f600b13e9398" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="b8ef176e-f19f-45d1-8a06-c9551585b786">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="XQuery Match" id="40cc6fa1-0d78-43c5-a10b-f043ddf625c6" name="XQuery Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fbe04b6c-acb3-482c-9ca1-1be5ab0e5dd4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="505a9f96-90e8-4741-8401-d6aa141bb5ea" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="dc589035-4490-4655-9b4b-9ccd81714004" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTRA" id="8891ebe7-0e9f-404f-9417-f64f97fbdf20">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="65126eb3-5fce-4b42-b832-8882ef7a5d51" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
              	          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac17c2cc-e6e2-411c-b787-2f1ce682dd13" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e6766a59-b7b1-4a81-b5b7-3e3fd01cf9f9" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb615f6c-0b94-4782-82f4-4f5e57fa912a" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTRA" id="7446aafd-3bc3-4351-9e88-a98d9a53ef86">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCH" id="a100a89f-ea97-4487-b08a-f207f2fd4715">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCH" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<change>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#soapVersion}>
</change>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="611515f4-aa5a-44bb-9038-5efb4661d656" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="4c4aa14b-781b-4325-8f36-84e716be7574" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCH" id="bebd70a7-9f9d-4889-87f9-484dc28d9d19">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="21e3e1b2-8788-4d2e-9dfe-36d8424520df" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="fff15a85-9deb-41c9-98aa-e65863b548a3" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1a797327-d0f7-4df5-9445-0df78f631623" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="da67fa12-e8b0-4aff-b03f-130c589bfd39" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller 3" id="dd2716d5-6f22-498f-871a-732fccef60e8">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCH" id="4e9c0ad8-3a57-4505-8545-545b880bc429">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d06d8bfa-0cd6-4ef9-909b-0d4c01b69747" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="921a8462-90bb-4d1d-9ea0-93dc09f331a5" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="13c0dcbf-5fa9-4ee0-94d5-c4430b66e618" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCH" id="8aa7726e-8c67-4f0f-97b1-3e3d60ed9754">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="5b820e37-9066-4edc-a2e3-9c7b11fb151e" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="58521b21-f33c-479b-97de-74fd5c87ed7a" name="Xpath: 1">
            <con:configuration>
              <path>count(//Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9a475cea-a15a-4359-8d23-4f1664908ae4" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="bdde0c0c-2cd8-4185-922b-ec88fd435623" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="7cf1ef1e-e563-4f48-9811-df06eec3b19b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#propDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#propDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="92461ce7-674b-4d95-b4b0-ab8c809faba3" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="820fd388-d25a-44c9-add9-8c5816726441">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="2f7d35d5-6695-4e22-aecf-3764a6a3f60c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9dd8ac76-2e12-4ad2-9fe0-b688a7540dcc" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f1b0398a-c387-45ea-a4d2-7888b29e006c" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="24ac4dea-0f2d-4a16-860b-46feda840496" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="f863a851-f6ac-46e1-8594-ccaf98cffc59">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="065ad976-d60b-4d80-91b4-1ad0e7eab66b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fb13562b-3b25-45c9-bf62-83565a32fbfa" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e4f8bb36-b12d-44c3-9346-6d011da427fb" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7f13a0fb-b90a-48c9-b005-d1c59c2e9a2d" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCH" id="87970798-d19d-4c1e-ad3d-25d522419095">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="eb3f71dd-5ba9-4241-b84e-d40bfcfcda01">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="bcf5cf56-49e9-4d05-9b1a-2a2864eb666f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="7baf7e06-6645-4b29-9fba-7956311dcb6e" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1788a8b0-f7d0-497a-a46d-2f6bbe16b786" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="e8cd0ebe-5f1a-4d98-a506-c8aac89fd4a0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9f236b52-357a-4282-a864-6bd13ee5c533" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA" id="84fbb8db-58d4-4b77-b26a-0c8b6cc6f92e">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="161673ca-1950-458a-944e-333140b27da8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="db3b59a9-0b0d-410b-b9bb-0a0ea2a89bfb" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="007cbdde-0483-4e14-b969-7120f268878b" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3a122336-e3d1-40e2-9e86-744d3503c166" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2fe8a63d-7d3a-46bc-98bd-dd5185c694f8" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="8aec45b0-f87c-40db-84ca-12394cc02e9d">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="aff04596-efa0-4eda-8144-92f4a259896b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3be24e4e-f095-4264-88ae-325093a20ddc" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="71c0e12e-c332-4a10-94be-ec97a5084ac5" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d74ca334-cc5f-4ea1-b514-b31d072fe6db" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="d3fea0d0-2b66-42e2-ab99-a88f15bb2c7b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="5b820e37-9066-4edc-a2e3-9c7b11fb151e" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="58521b21-f33c-479b-97de-74fd5c87ed7a" name="Xpath: 1">
            <con:configuration>
              <path>count(//Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="429a4126-6fe5-41ec-8607-53e90a1d676e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a2518e00-8cf9-4c37-b0f3-7a0e4dc6ae21" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="fee2d915-ba22-4432-828a-3767ac751cec">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#propdate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#propdate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="2582f0a6-3a84-442e-bee8-eabf46b40a41" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="0b5fd3fa-2de6-4eb3-bac8-ea978bac30b6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="470b6e91-82e8-4d38-80d1-d7e26ea5adde" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0815089d-adb9-4aac-962c-eb21a5ed6b73" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d6492f4c-5015-4979-85a8-ec0d1395559f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="fddd4ff8-6313-4649-8636-ffe1878fafb0" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA" id="d5bbf86a-b356-48b8-b7c1-d6594754df08">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%' 
and sxm_xml_message like '%&lt;blocking>N&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#soapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: wishdatetime">
            <con:configuration>
              <token>${#TestCase#ProposedDate}&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no proposedatetime">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d552133a-bb21-4eb3-9a49-c830bbac8eb4" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         	              <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="036532e5-8a29-49bd-842e-01a43c95fe68" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="270121b9-ef1d-4c46-a96f-5a5fd6283026" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCHA" id="4c52cf2f-8004-4752-8c9e-6653afac2b23">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCH2" id="937589e6-40a8-4303-9136-4b7064e2abdf">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCH2" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-004</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<change>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<wishdatetime>${#TestCase#ctch2ProposedDate}</wishdatetime>
<note>expect ${#TestSuite#donorSoapVersion} 2nd Change in dossier</note>
</${#TestSuite#soapVersion}>
</change>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="611515f4-aa5a-44bb-9038-5efb4661d656" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="4c4aa14b-781b-4325-8f36-84e716be7574" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctch2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCH2" id="fbb43273-fdeb-40f8-ad79-405c5c637603">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctch2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctch2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctch2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="efedf71d-5dc6-481c-a44c-6f5cdea5f3b8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a30993e4-0678-4d3d-8185-93ff7d194a3e" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="77d2e9d6-e743-4136-893d-690abafc83fc" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2033917c-f14e-4b91-922c-fde0b5441688" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller 5" id="c7bd6a12-6bb6-4aa2-afc8-e21216172443">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCH2" id="e43b4f66-1e64-4b97-9537-19d01ac0bd1a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctch2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="862f3567-12e4-4b19-afc4-b7cef5030697" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="8650e8f1-9839-4666-bf1f-41033b47dc6a" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="7115247b-437e-4c4b-9a70-f0731653ee9c" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctch2RSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCH2" id="d37d2d27-958d-4dad-80f1-305805e688d3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctch2TransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="5b820e37-9066-4edc-a2e3-9c7b11fb151e" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="58521b21-f33c-479b-97de-74fd5c87ed7a" name="Xpath: 1">
            <con:configuration>
              <path>count(//Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5f8c5fbd-2879-49af-b203-d8b7fac5b127" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4f818c1f-d868-4543-b1ff-5170fb571316" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctch2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH2" id="1ea2c9db-afc7-4538-8a37-1e1bb72bb45a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#ctch2PropDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="24aa0b66-ad2b-41d2-af7a-35f45da3208a" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH2" id="f8ccbd26-1ea9-441d-83fe-dfb0310a9fcc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="14bb0a86-2494-4c6f-902b-add70a07da91" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="54058d37-9ce5-4571-8bd7-0c7ca616065d" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="26786b6f-bb7a-48b5-9651-ee7d430b30e5" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH2" id="5b4cc24b-155c-410f-b053-68ce705c8757">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH2" id="6635087b-9b1f-4826-8b62-4418be0bb891">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="60640bcf-8a2b-432f-b4e6-f46d17ba0c10" name="Xpath: messagetype change">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[2]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2f8a7419-efbc-445c-a6d3-6e1f21ffca33" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="19e772a0-1bca-4a4e-97e0-c96a93f007fa" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ac9e1558-7c31-408a-a0d9-8a7b02856119" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCH2" id="5500f8d7-c115-4158-ac22-a720c5042a8d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH2" id="3be6a1bf-4cac-44ea-a399-1eb00181a268">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH2" id="e4c4383b-2ef3-41f0-97db-10596045b776">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="56235225-2397-4447-9ba8-b1b801802ed9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cca65bb6-917f-40c0-a7dd-e4ec734a1f16" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH2" id="54744477-6995-4241-befa-5b36319669b9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctch2RSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="411b3580-2b9d-4623-a1ae-9a396fe37e03" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA blocking" id="680c46a2-11bc-4a07-8aa8-25f2ebd81e78">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-05</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<blocking>Y</blocking>
<proposeddatetime>${#TestCase#ctcha2ProposedDate}</proposeddatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcha2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA2" id="5215ca8c-113d-42cd-963a-7e4c04c97060">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcha2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fcc25bb6-82e9-4766-b9da-aa7d240585cb" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="9a9d5133-446a-4762-bcab-aa8c094826b7" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcha2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="71b451ab-1123-422f-ae04-61bbc83bf02d" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f9f3ba4c-e73b-4b81-81b8-ecdffa26f44c" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9df30b48-98bb-4333-b3ec-07405da62536" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 6" id="86b0fa79-80ee-41a6-82c9-678dff4b1cc2">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA2" id="e737d10c-cb34-4506-a6e8-ea9b5246888a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcha2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cb14cfec-071d-499c-923f-12867698cc9a" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="6b3a1e19-0e61-4cbc-99d6-9fe7d9a0912f" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="830ab4a5-bdef-4e2f-af94-5f104d794c5b" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA2" id="a1e62ee5-f349-4bab-8aa5-8a1db2de32c6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="5b820e37-9066-4edc-a2e3-9c7b11fb151e" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="58521b21-f33c-479b-97de-74fd5c87ed7a" name="Xpath: 1">
            <con:configuration>
              <path>count(//Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="15170a2b-576b-4b00-8d58-23fa68cefa68" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5e7f575c-c714-471e-bfeb-1a5a490d814a" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcha2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-blocking" id="411a5795-cec1-433c-b698-6bb74ee364e8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#PropDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_CTCHA_PROPOSEDDATETIME</path>
              <content>${#TestCase#ctcha2PropDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b4a36c5b-1fea-4a10-a2f9-c7f7f42ab055" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA2" id="87e3e441-b727-4af8-b5f7-569453c5ba8e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="bce66a82-e321-4490-b4b4-e6e5efd0f567" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[2]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3dc0e071-6c58-4c65-ad68-e305cc09ff3c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="80ca7f3c-8cb1-4ae1-950a-0dfdd73c1028" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a4cea6c1-c4f4-41cd-b4a4-651597f0a1f7" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA2" id="133bd2c7-8b6e-44e9-94ee-0496b3dcadca">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%' 
and sxm_xml_message like '%&lt;blocking>Y&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#soapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: proposeddate">
            <con:configuration>
              <token>${#TestCase#ctchaProposedDate}&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no wishdate">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4e3586cc-73e8-4cc0-a4e3-fb31eb644576" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         	              <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d91237a4-664f-4f7d-8271-ca1d9a52dda3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="82e39ae3-1264-448d-ba40-6c87c1b5d33b" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCHA2" id="18f9167d-94ae-4da9-8d01-7fa4ccc5f17a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP" id="88807c66-9c8d-475a-a107-4ac7c51d8f6b">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <sch:SendMessagesRequest>\r
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>\r
         <sch:Messages>\r
            <sch:Message>\r
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-007</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestSuite#TimestampNOW}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>\r
            </sch:Message>\r
         </sch:Messages>\r
      </sch:SendMessagesRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="4779f09a-b69a-4017-bfd8-6d1bdf21915e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3176a6e8-f1e8-44aa-9706-fe3f58d93f11" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="6614afe7-d836-45e8-8d4b-a10502c17734" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="90270da0-69ce-466d-9eed-6a5497e02dcb" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0ee4d280-cbd1-4704-bce2-ecdb937b8175" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f75d820c-d5bb-4d11-ac55-f4cd0bac74ed" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 7" id="216d6634-177b-431a-a02e-e706eb602361">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="6a57c0d3-cf72-416c-8954-5a0c14dcf2da">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="97cc9448-eed3-4bfc-b8ea-60a22e1e0249" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="477fe29e-b29d-40c9-9fe0-0546938dc7a5" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="66ee33b6-a0b4-4e8e-a432-909dcbcbd5d6" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="ba053e8d-04e9-450e-891f-20f943aecdc7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="5b820e37-9066-4edc-a2e3-9c7b11fb151e" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="58521b21-f33c-479b-97de-74fd5c87ed7a" name="Xpath: 1">
            <con:configuration>
              <path>count(//Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a1e42427-3daf-44cb-b0bb-3a08612d383c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b0099964-bcfb-49ef-ab1b-01cf05e44673" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="b5fab884-077e-4a6c-a7ce-c16cc6f80cee">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Completed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="031d2b57-2c5e-44f1-8519-2ad790ad910a" name="Xpath: verify ctd_ctp_buffering is false">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>f</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="006966e1-a985-4f58-9298-f4712eef6701" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="9a6438a7-bfb6-4953-b210-d50845b9fb6a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="8273aa94-4170-4178-ad8f-472138da1833" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5aae5786-ac72-4a4a-a1a6-87d10ba5ab90" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="da5dffb9-2f8e-431e-a5d0-f9bf3caa45b4" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="65e19797-15d0-4581-b78f-9e98a788e4f9" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTP" id="415bcb01-1b64-4507-934e-48ab24323d40">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="a2162ade-cd9d-4560-b6a9-c4de1c241eb7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuit#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="f8e35c89-0c68-4076-bce8-6ce48a59016f" name="Contains: Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="43016be5-dc37-4d0e-833f-6422f76d414c" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="84cd6024-9898-4297-b882-ff6580e31067" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a67f904b-3670-4717-93f0-d1dbee0197d0" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTP" id="4b06f17e-1492-4efb-ac60-d60ce9c6d1e8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctpRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTP" id="4c1adc34-840a-460b-af0d-5d45728ac599">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="6409e19e-1bb2-4ee6-8bc1-e10ba155fd20">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="069b1140-62a6-4080-81cb-657c01f4503d" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="56f52905-87b9-48a2-97a9-a2f71249574f" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTP" id="01db9fe0-d3a0-4cb2-aefd-d2d21940d95f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctpRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Performed received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Performed received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="10c4f8ee-7527-4647-b1fe-7d490eb541ce" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="6f6f452f-98bb-4e9b-980f-0aacdbd5df1c">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 1.hour
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
// chcha proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="B2.19.  CTR-CTRA ok-CTCH-CTCHA ok-CTCH-CTCHA blocking-CTC" searchProperties="true" id="c440a607-fcca-4072-89cc-20507fe1b818" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="24a32882-47d8-4a15-bc9c-d94bcc4dfefd">
        <con:settings/>
        <con:config>
          <delay>14000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTR-Sunny Day" id="9e2c16a5-fd7d-4aec-9beb-0e806c543205">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>15-${#TestCase#contractID}</value>
 </validationblock>
<note>CTR sunny day sent ${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table" id="22896b10-f8a0-4271-b18b-996eb6f286d8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e608433f-ca36-4e70-8575-c50cd0734cbc" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="dc36249b-5b49-40c1-8737-21638355963d" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7dad7bd1-8d67-4777-a859-fe32f5fe1f06" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9823d754-f8f5-495b-a469-7346fccd6527" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="e365db4b-1fa8-492e-b0ee-af2a6351a488">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="5f6d70a3-768c-48ce-a16b-474a27579404">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="28644aa4-3c71-4619-b37c-8b0e5580b9a0" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5c03823c-0aac-4618-ac8a-c215f9695be3" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e12134f4-18c0-4948-bbcb-87f84adc3035" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="67c00835-94fe-4120-8c8d-39b7800fb997">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="JDBC Status" id="5b820e37-9066-4edc-a2e3-9c7b11fb151e" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="58521b21-f33c-479b-97de-74fd5c87ed7a" name="Xpath: 1">
            <con:configuration>
              <path>count(//Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4c88da08-1618-4ccb-ad7c-5d2df210192f" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="666faa72-ed48-4258-a055-04788dfdb396" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="c34d448d-bd52-4f56-9856-d60f69ad8ea6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0238c840-f34b-494a-b297-4bc66d3fe5c4" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="90d11d3a-60b1-4cc0-9ca6-9da39eedd05c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4fd75a86-3feb-4026-be5c-db8dd5af415f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="29506a6d-a3c5-49ae-ad2b-e630ba8c1494" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="6314e856-5ce8-4694-9c6a-ba18fc9b1dac" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="a0304e7b-2194-4760-9e9c-b7a14365dccd">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="45813732-48ed-415d-90c8-fe5272d0068a">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_Send" id="f831374e-a76f-4a4c-a581-5706885b4389">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="2cfdf3cd-d52e-4b0b-8e09-273e6960e53c" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="1f1e4cc5-1554-472b-9f37-12708a684e63" name="Script: SaveST_SXM_ID" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ST_SXM_ID[1]", "stSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="73def7b2-98b8-42c2-9799-48c263b4d193">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="64cb4b3a-ccda-45b3-8350-71eb14dbde78" name="Contains: assert donor soap version">
            <con:configuration>
              <token>&amp;lt;${#TestSuite#donorSoapVersion}&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="742a139a-6b62-4449-96ed-84f26cce73ec" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="39e2c30b-ce8b-4a27-ae9a-80676f10f1f4" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e8cf4362-9a61-4e68-8c2e-67a05bc3a187" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTR" id="9d778567-b7bd-44b4-92d5-59a1fcf8f1eb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="688387fd-c1fa-4c21-b22b-8fe283a2da0d">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="0e892951-ac0b-44bd-bc0f-8a9235b9c412">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="4f774148-6e71-4697-ae47-ee0a8462ae4c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ebc4c7b7-8f37-4b23-a78d-da07b8635532" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="27813f22-8bf4-4ea6-bb7d-237780b04b1a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctrRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="cb493987-61b5-4e80-96b3-f602abbe1f9d" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="62d02ebe-30fd-4463-89ed-ddd7d05ed1f0">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="69732a91-f6f0-4e44-8d24-228117e6951a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="113454ea-cf42-427f-a41d-b164214e4335" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="469dba6c-8e72-4212-8248-c1b4bc13bf62" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9140a729-cc15-4762-8cb9-7bd825d2a1fd" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3b8b0475-0013-4080-99e7-f64906e5a6c4" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="d8792e14-5ed7-40e4-954d-b7dd96f5ae96">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="694afa21-37cd-4e7a-9db9-f06f27105fc1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ff1ff1e1-5347-436f-9948-574895c30ce6" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5ebea46f-95bd-4f49-8715-2dd09cc51153" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="7e858436-264f-44c9-afec-6f5856ce28d4" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="822a5995-5d45-4fc7-ae18-48cc91310359">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="5b820e37-9066-4edc-a2e3-9c7b11fb151e" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="58521b21-f33c-479b-97de-74fd5c87ed7a" name="Xpath: 1">
            <con:configuration>
              <path>count(//Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3eeb6b92-6e52-4cc0-875f-561e62bdff8c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9b61ceb5-af71-4f34-a142-7d8d7cf967c4" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="83774077-ff11-4d63-a557-8ee551724f21">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="94e96d83-3af1-45cb-8897-f600b13e9398" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="069477a8-df82-4ab8-be81-b9b2b209e8e0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="XQuery Match" id="40cc6fa1-0d78-43c5-a10b-f043ddf625c6" name="XQuery Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fbe04b6c-acb3-482c-9ca1-1be5ab0e5dd4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="505a9f96-90e8-4741-8401-d6aa141bb5ea" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="09332847-405c-4731-8119-bfa853d6dac2" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTRA" id="0578a2ae-4540-4238-84d7-5a5b1abd7bd7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="65126eb3-5fce-4b42-b832-8882ef7a5d51" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
              	          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac17c2cc-e6e2-411c-b787-2f1ce682dd13" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e6766a59-b7b1-4a81-b5b7-3e3fd01cf9f9" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb615f6c-0b94-4782-82f4-4f5e57fa912a" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTRA" id="1c0281d6-8d22-4f0f-a928-8048a5211423">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCH" id="8eb63cb0-5996-4f4e-822b-ae1d283ada3d">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCH" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<change>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#soapVersion}>
</change>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="611515f4-aa5a-44bb-9038-5efb4661d656" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="4c4aa14b-781b-4325-8f36-84e716be7574" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCH" id="7333161f-cf15-4535-8271-33b8641bcf64">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="21e3e1b2-8788-4d2e-9dfe-36d8424520df" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="fff15a85-9deb-41c9-98aa-e65863b548a3" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1a797327-d0f7-4df5-9445-0df78f631623" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="da67fa12-e8b0-4aff-b03f-130c589bfd39" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller 3" id="32dc8253-d8f3-4abd-a544-30d2857bcb12">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCH" id="8648dc88-da93-47dc-9c84-6e0a263b2590">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d06d8bfa-0cd6-4ef9-909b-0d4c01b69747" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="921a8462-90bb-4d1d-9ea0-93dc09f331a5" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f47bcfeb-473c-40da-97bf-32cd419072b9" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCH" id="9ecb1127-9d87-40df-a93a-9979e8cd7dcb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="5b820e37-9066-4edc-a2e3-9c7b11fb151e" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="58521b21-f33c-479b-97de-74fd5c87ed7a" name="Xpath: 1">
            <con:configuration>
              <path>count(//Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9a475cea-a15a-4359-8d23-4f1664908ae4" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="bdde0c0c-2cd8-4185-922b-ec88fd435623" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="83583c7d-3077-4460-97c8-9eec3af3e5c9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#propDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#propDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="92461ce7-674b-4d95-b4b0-ab8c809faba3" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="9b938ead-95f7-4177-aab8-c2083d93a72f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="2f7d35d5-6695-4e22-aecf-3764a6a3f60c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9dd8ac76-2e12-4ad2-9fe0-b688a7540dcc" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f1b0398a-c387-45ea-a4d2-7888b29e006c" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="16c7a119-2a6f-4fff-ac98-07335d6811ba" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="323dbb2a-015f-4bca-ac9f-ddf349e2b358">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="849b1212-6add-44c0-9b6c-6fd559242694">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fb13562b-3b25-45c9-bf62-83565a32fbfa" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e4f8bb36-b12d-44c3-9346-6d011da427fb" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7f13a0fb-b90a-48c9-b005-d1c59c2e9a2d" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCH" id="a0463592-880d-423e-a98d-59f6fc034281">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="d4499a4f-533c-49fe-9340-aaf67d24aeb5">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="063af87b-22da-4c72-91d8-1b103823e771">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="7baf7e06-6645-4b29-9fba-7956311dcb6e" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0919e9ff-bbd9-4ff7-829c-96075b14f399" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="76181796-d4fe-497c-9512-db08641f63b1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7bd1697d-b047-48cc-b278-0741ba92a81a" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA" id="4cca9e18-ad9e-4d03-a3ac-492696dca70e">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="c169a02d-3f85-4d82-b6e3-e4fa773ce027">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="db3b59a9-0b0d-410b-b9bb-0a0ea2a89bfb" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="007cbdde-0483-4e14-b969-7120f268878b" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3a122336-e3d1-40e2-9e86-744d3503c166" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2fe8a63d-7d3a-46bc-98bd-dd5185c694f8" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="05c366e3-5274-4870-ad46-642c9053e1ca">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="48fb5dc7-105f-432a-8b6d-2559e59ff066">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3be24e4e-f095-4264-88ae-325093a20ddc" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="71c0e12e-c332-4a10-94be-ec97a5084ac5" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="dc285080-5885-446b-bff6-7dc0ccf37c0b" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="dccfc8cf-b9c4-430f-b41b-e87566f4d11a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="5b820e37-9066-4edc-a2e3-9c7b11fb151e" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="58521b21-f33c-479b-97de-74fd5c87ed7a" name="Xpath: 1">
            <con:configuration>
              <path>count(//Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="429a4126-6fe5-41ec-8607-53e90a1d676e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a2518e00-8cf9-4c37-b0f3-7a0e4dc6ae21" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="726c3c84-c3b6-456b-936a-192aef6a45ab">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#propdate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#propdate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="2582f0a6-3a84-442e-bee8-eabf46b40a41" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="7730017b-aa96-47a6-9981-9c1f2403ddcd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="470b6e91-82e8-4d38-80d1-d7e26ea5adde" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0815089d-adb9-4aac-962c-eb21a5ed6b73" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d6492f4c-5015-4979-85a8-ec0d1395559f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d17c1558-a07d-4d58-96c1-eb9d07d8531c" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA" id="16cb6f32-2217-42e2-b109-063805626d88">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%' 
and sxm_xml_message like '%&lt;blocking>N&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#soapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: wishdatetime">
            <con:configuration>
              <token>${#TestCase#ProposedDate}&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no proposedatetime">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d552133a-bb21-4eb3-9a49-c830bbac8eb4" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         	              <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="036532e5-8a29-49bd-842e-01a43c95fe68" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="270121b9-ef1d-4c46-a96f-5a5fd6283026" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCHA" id="1b0ec9a0-6ff5-4b48-a052-4b86f3c681b1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCH2" id="ef912578-bff5-4ffc-b58b-c730822d0223">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCH2" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-004</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<change>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<wishdatetime>${#TestCase#ctch2ProposedDate}</wishdatetime>
<note>expect ${#TestSuite#donorSoapVersion} 2nd Change in dossier</note>
</${#TestSuite#soapVersion}>
</change>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="611515f4-aa5a-44bb-9038-5efb4661d656" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="4c4aa14b-781b-4325-8f36-84e716be7574" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctch2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCH2" id="588e1fcc-f854-433e-b4ff-80ad639bcf38">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctch2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctch2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctch2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="efedf71d-5dc6-481c-a44c-6f5cdea5f3b8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a30993e4-0678-4d3d-8185-93ff7d194a3e" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="77d2e9d6-e743-4136-893d-690abafc83fc" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2033917c-f14e-4b91-922c-fde0b5441688" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller 5" id="543de9b4-d8ad-4a8e-8ac6-2e8d412b0af2">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCH2" id="6974a329-2a79-4096-b552-46c9e16a3935">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctch2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="862f3567-12e4-4b19-afc4-b7cef5030697" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="8650e8f1-9839-4666-bf1f-41033b47dc6a" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e0bd86fa-adb2-4bff-801e-74d40593f0c7" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctch2RSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCH2" id="6b398a6a-fd46-4ec3-a4e5-e19c4a599582">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctch2TransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="5b820e37-9066-4edc-a2e3-9c7b11fb151e" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="58521b21-f33c-479b-97de-74fd5c87ed7a" name="Xpath: 1">
            <con:configuration>
              <path>count(//Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5f8c5fbd-2879-49af-b203-d8b7fac5b127" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4f818c1f-d868-4543-b1ff-5170fb571316" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctch2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH2" id="3bb6756b-47b6-4ebd-ae76-ac680941eb57">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#ctch2PropDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="24aa0b66-ad2b-41d2-af7a-35f45da3208a" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH2" id="a75defb8-4010-4475-a538-d6ecef948c88">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="14bb0a86-2494-4c6f-902b-add70a07da91" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="54058d37-9ce5-4571-8bd7-0c7ca616065d" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="75ae5fb8-0c91-4c1d-b43a-31c00b5b9081" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH2" id="c04102cd-b381-4e8b-805f-c14cfb81b5c8">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH2" id="579a331d-3d8c-4d73-8fb3-49c2f95b8c39">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="60640bcf-8a2b-432f-b4e6-f46d17ba0c10" name="Xpath: messagetype change">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[2]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2f8a7419-efbc-445c-a6d3-6e1f21ffca33" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="19e772a0-1bca-4a4e-97e0-c96a93f007fa" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ac9e1558-7c31-408a-a0d9-8a7b02856119" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCH2" id="203b86e2-f0c5-4ad0-ad94-fe5f0aae81a1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH2" id="92c1dd29-f28e-464c-ab91-3618b536169f">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH2" id="1b206b3e-f7a9-4402-922d-74f57471554d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="56235225-2397-4447-9ba8-b1b801802ed9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1ce0bc58-f171-4d81-8195-cb40e42c34f9" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH2" id="c04e411a-1437-4a2c-b3ee-a3ff2d6431c8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctch2RSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="234a784e-98a8-4ceb-bac7-8a3a1615b928" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA blocking" id="9c98edd9-9507-4e7b-85b8-3e1f2d059636">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-05</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<blocking>Y</blocking>
<proposeddatetime>${#TestCase#ctcha2ProposedDate}</proposeddatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcha2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA2" id="51d86938-b23d-4431-bdce-dd5fd3a65844">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcha2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fcc25bb6-82e9-4766-b9da-aa7d240585cb" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="9a9d5133-446a-4762-bcab-aa8c094826b7" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcha2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="71b451ab-1123-422f-ae04-61bbc83bf02d" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f9f3ba4c-e73b-4b81-81b8-ecdffa26f44c" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9df30b48-98bb-4333-b3ec-07405da62536" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 6" id="9260b036-332a-4580-923b-ccf575bc0bee">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA2" id="548be028-d18e-4559-9ac4-af25b202500c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcha2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cb14cfec-071d-499c-923f-12867698cc9a" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="6b3a1e19-0e61-4cbc-99d6-9fe7d9a0912f" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="6b447c3c-1c7b-4266-926e-07ccfced002a" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA2" id="aa9c337d-26ac-4680-84e2-55bec4a50b41">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="5b820e37-9066-4edc-a2e3-9c7b11fb151e" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="58521b21-f33c-479b-97de-74fd5c87ed7a" name="Xpath: 1">
            <con:configuration>
              <path>count(//Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="15170a2b-576b-4b00-8d58-23fa68cefa68" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5e7f575c-c714-471e-bfeb-1a5a490d814a" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcha2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-blocking" id="30d99411-831e-4645-867c-b658eeb901db">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#PropDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_CTCHA_PROPOSEDDATETIME</path>
              <content>${#TestCase#ctcha2PropDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b4a36c5b-1fea-4a10-a2f9-c7f7f42ab055" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA2" id="c28cffbd-5c6e-423d-8902-99e0a1a3a435">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="bce66a82-e321-4490-b4b4-e6e5efd0f567" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[2]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#donorSoapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3dc0e071-6c58-4c65-ad68-e305cc09ff3c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="80ca7f3c-8cb1-4ae1-950a-0dfdd73c1028" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0ac9d6b8-1c48-4616-ba18-32a8e02365d3" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA2" id="9cc768d5-e919-46be-8a5a-c04e53f5f8cf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%' 
and sxm_xml_message like '%&lt;blocking>Y&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#soapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: proposeddate">
            <con:configuration>
              <token>${#TestCase#ctchaProposedDate}&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no wishdate">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4e3586cc-73e8-4cc0-a4e3-fb31eb644576" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         	              <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         		          <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d91237a4-664f-4f7d-8271-ca1d9a52dda3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="82e39ae3-1264-448d-ba40-6c87c1b5d33b" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTCHA2" id="22b3f488-ae49-4906-b7ad-4fc25ed9e5e3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTC" id="910fe213-4a32-4ca9-8d20-c358e99569d3">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTC" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <sch:SendMessagesRequest>\r
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>\r
         <sch:Messages>\r
            <sch:Message>\r
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-002</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<cancel>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<note>Cancel sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</cancel>
</body>
</message>]]]]>><![CDATA[</sch:Text>\r
            </sch:Message>\r
         </sch:Messages>\r
      </sch:SendMessagesRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTC" id="1896c345-49d6-4e8b-87ce-ae1858a916a1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>cancel</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="2d3ebe21-fe7e-4ea6-85da-05fdbd457893" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="fd034a4c-cfe7-4f38-958d-841058c68fb4" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f3cd9486-4c72-47d0-8f19-4791fca08298" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="95d7db8b-d18e-4a03-ba7d-4b7c26c85651" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="0cfef739-a68d-4390-a35d-75dd341250eb">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTC" id="d18418cc-622b-465b-951e-88281a7de581">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="a0eb7785-dc83-4317-b38a-1bbe57cd802f" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="cc51dbdd-db84-4532-ac8c-9e6149519641" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="ac8e95c1-178e-49af-90cf-6b6ffb77b359" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTC" id="7e8e09a1-3d14-449c-8d12-b3261c23c44c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="35d91fef-868b-403e-ae77-dc9f07026b8f" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="aded836b-b9a9-4d2c-bbf9-082e8ff48a23" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTC" id="f3f51eaf-4154-450d-ad81-f8f7e66badd0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Cancelled</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1e18bb62-a102-44ff-87e0-2e05f74d610b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTC" id="c1e12fd0-eef4-4d72-9589-89ae4b2c7e45">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=11 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="b199af58-886b-4a43-943e-d947f7528217" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="79988e9c-7c72-4aa4-8e92-407f19a03f80" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1915dcf5-b846-4d95-9df5-7c2787a4a674" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8896d124-e4bb-4d4b-886e-595dd4e7aa36" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTC" id="805b8a68-5b82-42f7-9255-c81d41e9383e">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
 
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTC" id="884de1ab-daab-4176-ad06-7b915b23de01">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#contractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1270b552-020e-4693-a671-1f97f10b284c" name="Xpath: header sender receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac29c4eb-709d-4d3c-84e1-ab07c7491edc" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8f8d03f3-71c2-4ff7-8234-188252f1dadd" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_NoRecord_CTC" id="399b119a-3ba2-4e67-8d74-f59257b468d9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctcRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTC" id="217705c8-bc11-4608-b655-8ba487a50835">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTC" id="65086e7f-3cf1-42eb-b83d-83cb4e526a51">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e83f7d20-765e-4780-b99b-671803fc721b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f1ceaf50-452d-43b2-ac5a-67d94f599b5d" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTC" id="8f7930df-d286-4806-bc99-e9ccfb5980d9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctcRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Cancel received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Cancel received on COMP for ${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="701b5d20-3fc7-491c-ad60-1df503722756" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="c79c4f37-9ea1-4a8b-8e2e-8e40cfbae920">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 1.hour
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
// chcha proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:properties>
      <con:property>
        <con:name>TimestampNOW</con:name>
        <con:value>${=String.format('%tFT%&lt;tT', new Date())}</con:value>
      </con:property>
      <con:property>
        <con:name>PollTime</con:name>
        <con:value>2000</con:value>
      </con:property>
      <con:property>
        <con:name>lineNumber</con:name>
        <con:value>0</con:value>
      </con:property>
      <con:property>
        <con:name>testdatafile</con:name>
        <con:value>soaptosoap.csv</con:value>
      </con:property>
      <con:property>
        <con:name>browser</con:name>
        <con:value>firefox</con:value>
      </con:property>
    </con:properties>
    <con:setupScript>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
import org.apache.commons.lang.RandomStringUtils
import groovy.time.TimeCategory
import nl.coin.Selenium.*;
def directory = groovyUtils.projectPath + "/"
System.setProperty("projectfiledir", directory)
def seleniumHandle = new SeleniumActions();
def funcHandle = new ReadymadeFunctions();
def Line = funcHandle.getTestDataAndIncreaseLinenumber(testSuite, directory);
String[] propData = Line.split(";")
funcHandle.setRecipientAndDonorSoapCredentials(seleniumHandle, testSuite, directory, propData[0], propData[1]);
testSuite.setPropertyValue("soapVersion",propData[2])
testSuite.setPropertyValue("dossierType",propData[3])
testSuite.setPropertyValue("compensationOK",propData[4])
import groovy.sql.Sql;
def  con = funcHandle.createDBConObject(testSuite);
def recepientDetails = funcHandle.setProperty4mDB(testSuite, con, "select spr_code, it_interface_type,business_gui_only from overstappen.service_provider inner join overstappen.interface_type on service_provider.spr_request_it_id = interface_type.id where service_provider.spr_code = '"+ propData[0]+"'", ["business_gui_only", "it_interface_type"] as String[], ["recipientbgo", "recipientif"] as String[]);
def donorDetails = funcHandle.setProperty4mDB(testSuite, con, "select spr_code, it_interface_type,business_gui_only from overstappen.service_provider inner join overstappen.interface_type on service_provider.spr_request_it_id = interface_type.id where service_provider.spr_code = '"+ propData[1]+"'", ["business_gui_only", "it_interface_type"] as String[], ["donorbgo", "donorif"] as String[]);
testSuite.setPropertyValue( "businessGuiOnly" , donorDetails[0])
def donorsoap = funcHandle.getDonorSoapVersionS2SAndSetProperty(testSuite, donorDetails[1], propData[3], "donorSoapVersion");
def donorbusiness = funcHandle.getDonorDossierTypeS2SAndSetProperty(testSuite, donorDetails[1], propData[3], "donorDossierType");
def donorMessage = funcHandle.getMessageTypeAndSetProperty(testSuite, donorDetails[1], propData[3], donorDetails[0], "donorMessage");
funcHandle.setProperty4mDB(testSuite, con, "select id from overstappen.service_provider where spr_code='"+ propData[0]+"'", "id", "recipientId")
funcHandle.setProperty4mDB(testSuite, con, "select id from overstappen.service_provider where spr_code='"+ propData[1]+"'", "id", "donorId");
funcHandle.getOutgoingMsgTypeAndSetProperty(testSuite, propData[3], recepientDetails[0], recepientDetails[1], "donorOutMsg");
funcHandle.getOutgoingMsgTypeAndSetProperty(testSuite, propData[3], donorDetails[0], donorDetails[1], "recipientOutMsg");
con.close()</con:setupScript>
    <con:tearDownScript/>
    <con:reportParameters/>
  </con:testSuite>
  <con:endpointStrategy xsi:type="con:DefaultEndpointStrategy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:endpoint mode="COMPLEMENT" username="Bert" password="Ernie" wssType="PasswordText">http://testcomp.coin.nl/compv3/MessageService</con:endpoint>
    <con:endpoint mode="COMPLEMENT" username="Bert" password="Ernie" wssType="PasswordText" domain="" outgoingWss="" incomingWss="">http://210.7.69.28:8080/compv3/MessageService</con:endpoint>
    <con:endpoint mode="COMPLEMENT" username="Bert" password="Ernie">http://192.168.100.28:8080/compv3/MessageService</con:endpoint>
  </con:endpointStrategy>
  <con:requirements/>
  <con:properties>
    <con:property>
      <con:name>directory</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>SoapUrl</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>DBHostname</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>DBPort</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>DBUser</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>DBPassword</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>DBDatabase</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>GUIUrl</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>UserIP</con:name>
      <con:value/>
    </con:property>
  </con:properties>
  <con:afterLoadScript/>
  <con:wssContainer/>
  <con:databaseConnectionContainer>
    <con:databaseConnection>
      <con:name>JDBC</con:name>
      <con:driver>org.postgresql.Driver</con:driver>
      <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
      <con:password>${#Project#DBPassword}</con:password>
    </con:databaseConnection>
  </con:databaseConnectionContainer>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:xmlTemplates/>
    <con:parameters/>
  </con:reporting>
  <con:sensitiveInformation/>
</con:soapui-project>
