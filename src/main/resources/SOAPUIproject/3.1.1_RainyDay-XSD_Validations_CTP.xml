<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="3.1.1_RainyDay-XSD_Validations_CTP" resourceRoot="${projectDir}" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" id="c69d17d9-8a76-4230-ac09-05b6029fb035" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="Rainy Day-CTR XSD error 201"/>
  <con:entry key="Password" value=""/>
  <con:entry key="TestRunner Path" value="C:\Program Files\SmartBear\SoapUI-5.1.3\bin"/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="50 b missing receiver block"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Select Report Type" value=""/>
</xml-fragment>]]></con:setting>
    <con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.LoadTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="TestRunner Path" value="C:\Program Files\SmartBear\SoapUI-5.1.3/bin"/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="LoadTest" value="&lt;all>"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Print Report Statistics" value="false"/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="ThreadCount" value=""/>
  <con:entry key="Limit" value=""/>
</xml-fragment>]]></con:setting>
  </con:settings>
  <con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="CompWebserviceSoap11" type="wsdl" bindingName="{http://coin.nl/ws/definitions}CompWebserviceSoap11" soapVersion="1_1" anonymous="optional" definition="${#Project#SoapUrl}" id="8a537fab-845e-48f0-a37f-a40e9d723dce" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings>
      <con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.tcpmon.TcpMonAction@values-local">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Local Port" value=""/>
  &lt;con:entry key="Add local endpoint" value="false"/>
  &lt;con:entry key="Endpoint" value=""/>
&lt;/xml-fragment></con:setting>
    </con:settings>
    <con:definitionCache type="TEXT" rootPart="http://192.168.100.28:8080/compv3/compmessage.wsdl">
      <con:part>
        <con:url>http://192.168.100.28:8080/compv3/compmessage.wsdl</con:url>
        <con:content><![CDATA[<wsdl:definitions targetNamespace="http://coin.nl/ws/definitions" xmlns:sch="http://coin.nl/ws/schema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://coin.nl/ws/definitions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xsd:schema elementFormDefault="qualified" targetNamespace="http://coin.nl/ws/schema" xmlns:ws-msg="http://coin.nl/ws/schema" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <!--Simple Types-->
      <xsd:simpleType name="TransactionId">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="60"/>
        </xsd:restriction>
      </xsd:simpleType>
      <!--Grouped Elements-->
      <xsd:group name="Message">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element name="Text" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Mandatory field containing the message text.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:group>
      <!--Complex Types-->
      <xsd:complexType name="Message">
        <xsd:sequence>
          <xsd:group ref="ws-msg:Message"/>
        </xsd:sequence>
      </xsd:complexType>
      <!--Request - Response Interface(s)-->
      <xsd:element name="SendMessagesRequest">
        <xsd:annotation>
          <xsd:appinfo>Request interface for SendMessages.</xsd:appinfo>
          <xsd:documentation>Generic interface for sending one or more (xml
						based) messages.
						When successfully received, the receiver of the
						request will respond
						with a TransactionId,
						uniquely identifying
						reception of the request and all the messages in it.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Sender" type="xsd:string"/>
            <xsd:element name="Messages">
              <xsd:complexType>
                <xsd:sequence maxOccurs="unbounded" minOccurs="1">
                  <xsd:element name="Message" type="ws-msg:Message"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="SendMessagesResponse">
        <xsd:annotation>
          <xsd:appinfo>Response interface for SendMessages.</xsd:appinfo>
          <xsd:documentation/>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="TransactionId" type="ws-msg:TransactionId"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="SendMessagesRequest">
    <wsdl:part element="sch:SendMessagesRequest" name="SendMessagesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SendMessagesResponse">
    <wsdl:part element="sch:SendMessagesResponse" name="SendMessagesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="CompWebservice">
    <wsdl:operation name="SendMessages">
      <wsdl:input message="tns:SendMessagesRequest" name="SendMessagesRequest"></wsdl:input>
      <wsdl:output message="tns:SendMessagesResponse" name="SendMessagesResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CompWebserviceSoap11" type="tns:CompWebservice">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="SendMessages">
      <soap:operation soapAction="http://coin.nl/SendMessages"/>
      <wsdl:input name="SendMessagesRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="SendMessagesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CompWebserviceService">
    <wsdl:port binding="tns:CompWebserviceSoap11" name="CompWebserviceSoap11">
      <soap:address location="http://192.168.100.28:8080/compv3/MessageService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content>
        <con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
      </con:part>
    </con:definitionCache>
    <con:endpoints>
      <con:endpoint>${#Project#SoapUrl}</con:endpoint>
    </con:endpoints>
    <con:operation isOneWay="false" action="http://coin.nl/SendMessages" name="SendMessages" bindingOperationName="SendMessages" type="Request-Response" outputName="SendMessagesResponse" inputName="SendMessagesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="8c3829e4-5325-42d3-82e4-242fad1e423c">
      <con:settings/>
      <con:call name="Contract Termination Request" outgoingWss="" incomingWss="" id="8915428a-63eb-41b1-989c-749c2e2f0cce" wssPasswordType="PasswordText">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${#Project#SoapUrl}</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>TP10</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<over:message xmlns:over="http://www.coin.nl/Overstappen_MESSAGES">
<over:header>
<over:receiver>
<!--Optional:-->
<over:networkoperator>TP14</over:networkoperator>
<!--Optional:-->
<over:serviceprovider>TP14</over:serviceprovider>
</over:receiver>
<over:sender>
<!--Optional:-->
<over:networkoperator>TP10</over:networkoperator>
<!--Optional:-->
<over:serviceprovider>TP10</over:serviceprovider>
</over:sender>
<!--Optional:-->
<over:messageid>TP10-TP14-TESTING-01</over:messageid>
<over:timestamp></over:timestamp>
</over:header>
<over:body>
<over:contractterminationrequest>
<over:v1>
<over:dossierid>TP10-TP14-TESTING-01</over:dossierid>
<!--Optional:-->
<over:recipientserviceprovider>TP10</over:recipientserviceprovider>
<!--Optional:-->
<over:recipientnetworkoperator>TP10</over:recipientnetworkoperator>
<!--Optional:-->
<over:donornetworkoperator>TP14</over:donornetworkoperator>
<!--Optional:-->
<over:donorserviceprovider>TP14</over:donorserviceprovider>
<over:customerinfo>
<!--Optional:-->
<over:initials>Ms</over:initials>
<!--Optional:-->
<over:prefix>Priyanka</over:prefix>
<!--Optional:-->
<over:lastname>Taneja</over:lastname>
<!--Optional:-->
<over:telephonecontact>0886086375</over:telephonecontact>
<!--Optional:-->
<over:emailaddresscontact>f@xebia.com</over:emailaddresscontact>
<!--Optional:-->
<over:companyname>XEBIA PVT LTD</over:companyname>
<!--Optional:-->
<over:customerid>ABCDEFGH1234</over:customerid>
<!--Optional:-->
<over:contractid>SOAP3EMAIL</over:contractid>
<over:contractaddress>
<!--Optional:-->
<over:address>HARINAGAR</over:address>
<over:housenr>123</over:housenr>
<!--Optional:-->
<over:housenr_ext>123</over:housenr_ext>
<over:postcode>1234AS</over:postcode>
<!--Optional:-->
<over:city>DELHI</over:city>
<!--Optional:-->
<over:country>IND</over:country>
</over:contractaddress>
<over:connectionaddress>
<!--Optional:-->
<over:address>HARINAGAR</over:address>
<over:housenr>123</over:housenr>
<!--Optional:-->
<over:housenr_ext>123</over:housenr_ext>
<over:postcode>1234AS</over:postcode>
<!--Optional:-->
<over:city>DELHI</over:city>
<!--Optional:-->
<over:country>IND</over:country>
</over:connectionaddress>
</over:customerinfo>
<over:wishdatetime>2014-01-14</over:wishdatetime>
<!--Optional:-->
<over:note>TEST</over:note>
</over:v1>
</over:contractterminationrequest>
</over:body>
</over:message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:username>COINTP10</con:username>
          <con:password>COINTP10</con:password>
          <con:domain xsi:nil="true"/>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:preemptive>true</con:preemptive>
          <con:authType>Preemptive</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="Contract Termination Request Answer" outgoingWss="" incomingWss="" id="73af3a6a-ca5e-4560-819c-8035caf9acee">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${#Project#SoapUrl}</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>KPN</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
  <header>
    <receiver>
      <networkoperator>ZIGGO</networkoperator>
      <serviceprovider>ZIGGO</serviceprovider>
    </receiver>
    <sender>
      <networkoperator>KPN</networkoperator>
      <serviceprovider>KPN</serviceprovider>
    </sender>
    <messageid>ZIGGO-KPN-GUI2SOAP1-01</messageid>
    <timestamp>2014-01-08T12:56:45</timestamp>
  </header>
  <body>
    <contractterminationrequestanswer>
      <v1>
        <dossierid>ZIGGO-KPN-GUI2SOAP1-01</dossierid>
        <blocking>N</blocking>
        <wishdatetime>2014-01-17</wishdatetime>
        <blockingcode>0</blockingcode>
        <note>TEST-ANSWER</note>
      </v1>
    </contractterminationrequestanswer>
  </body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:username>Bert</con:username>
          <con:password>Ernie</con:password>
          <con:domain xsi:nil="true"/>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:preemptive>true</con:preemptive>
          <con:authType>Preemptive</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="Multiple Contract Termination Requests" outgoingWss="" incomingWss="" id="ad0bd36e-cbfe-4f7c-bf73-cd36950c1291" wssPasswordType="PasswordText">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${#Project#SoapUrl}</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>CRY</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<networkoperator>FARI</networkoperator>
<serviceprovider>FARI</serviceprovider>
</receiver>
<sender>
<networkoperator>CRY</networkoperator>
<serviceprovider>CRY</serviceprovider>
</sender>
<messageid>CRY-FARI-CryFari01-01</messageid>
<timestamp>2014-01-22T13:40:45</timestamp>
</header>
<body>
<contractterminationrequest>
<v1>
<dossierid>CRY-FARI-CryFari01-01</dossierid>
<recipientserviceprovider>CRY</recipientserviceprovider>
<recipientnetworkoperator>CRY</recipientnetworkoperator>
<donornetworkoperator>FARI</donornetworkoperator>
<donorserviceprovider>FARI</donorserviceprovider>
<customerinfo>
<initials>Ms</initials>
<prefix>Priyanka</prefix>
<lastname>Tanjea</lastname>
<telephonecontact>0886086375</telephonecontact>
<emailaddresscontact>f@xebia.com</emailaddresscontact>
<companyname>XEBIA PVT LTD</companyname>
<customerid>ABCDEFGH1234</customerid>
<contractid>CryFari01</contractid>
<contractaddress>
<address>HARINAGAR</address>
<housenr>123</housenr>
<housenr_ext>123</housenr_ext>
<postcode>1234AS</postcode>
<city>DELHI</city>
<country>IND</country>
</contractaddress>
<connectionaddress>
<address>HARINAGAR</address>
<housenr>123</housenr>
<housenr_ext>123</housenr_ext>
<postcode>1234AS</postcode>
<city>DELHI</city>
<country>IND</country>
</connectionaddress>
</customerinfo>
<wishdatetime>2014-02-10</wishdatetime>
<note></note>
</v1>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<networkoperator>UPC</networkoperator>
<serviceprovider>UPC</serviceprovider>
</receiver>
<sender>
<networkoperator>CRY</networkoperator>
<serviceprovider>CRY</serviceprovider>
</sender>
<messageid>CRY-UPC-CryUpc01-01</messageid>
<timestamp>2014-01-22T13:40:45</timestamp>
</header>
<body>
<contractterminationrequest>
<v1>
<dossierid>CRY-UPC-CryUpc01-01</dossierid>
<recipientserviceprovider>CRY</recipientserviceprovider>
<recipientnetworkoperator>CRY</recipientnetworkoperator>
<donornetworkoperator>UPC</donornetworkoperator>
<donorserviceprovider>UPC</donorserviceprovider>
<customerinfo>
<initials>Ms</initials>
<prefix>Priyanka</prefix>
<lastname>Tanjea</lastname>
<telephonecontact>0886086375</telephonecontact>
<emailaddresscontact>f@xebia.com</emailaddresscontact>
<companyname>XEBIA PVT LTD</companyname>
<customerid>ABCDEFGH1234</customerid>
<contractid>CryUpc01</contractid>
<contractaddress>
<address>HARINAGAR</address>
<housenr>123</housenr>
<housenr_ext>123</housenr_ext>
<postcode>1234AS</postcode>
<city>DELHI</city>
<country>IND</country>
</contractaddress>
<connectionaddress>
<address>HARINAGAR</address>
<housenr>123</housenr>
<housenr_ext>123</housenr_ext>
<postcode>1234AS</postcode>
<city>DELHI</city>
<country>IND</country>
</connectionaddress>
</customerinfo>
<wishdatetime>2014-02-11</wishdatetime>
<note></note>
</v1>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<networkoperator>TEL2</networkoperator>
<serviceprovider>TEL2</serviceprovider>
</receiver>
<sender>
<networkoperator>CRY</networkoperator>
<serviceprovider>CRY</serviceprovider>
</sender>
<messageid>CRY-TEL2-CryTel201-01</messageid>
<timestamp>2014-01-22T13:40:45</timestamp>
</header>
<body>
<contractterminationrequest>
<v1>
<dossierid>CRY-TEL2-CryTel201-01</dossierid>
<recipientserviceprovider>CRY</recipientserviceprovider>
<recipientnetworkoperator>CRY</recipientnetworkoperator>
<donornetworkoperator>TEL2</donornetworkoperator>
<donorserviceprovider>TEL2</donorserviceprovider>
<customerinfo>
<initials>Ms</initials>
<prefix>Priyanka</prefix>
<lastname>Tanjea</lastname>
<telephonecontact>0886086375</telephonecontact>
<emailaddresscontact>f@xebia.com</emailaddresscontact>
<companyname>XEBIA PVT LTD</companyname>
<customerid>ABCDEFGH1234</customerid>
<contractid>CryTel201</contractid>
<contractaddress>
<address>HARINAGAR</address>
<housenr>123</housenr>
<housenr_ext>123</housenr_ext>
<postcode>1234AS</postcode>
<city>DELHI</city>
<country>IND</country>
</contractaddress>
<connectionaddress>
<address>HARINAGAR</address>
<housenr>123</housenr>
<housenr_ext>123</housenr_ext>
<postcode>1234AS</postcode>
<city>DELHI</city>
<country>IND</country>
</connectionaddress>
</customerinfo>
<wishdatetime>2014-02-12</wishdatetime>
<note></note>
</v1>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:username>Bert</con:username>
          <con:password>Ernie</con:password>
          <con:domain xsi:nil="true"/>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:preemptive>true</con:preemptive>
          <con:authType>Preemptive</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="Contract Termination Performed" id="6e6b212c-9d53-4340-bc3a-cadf2fccdbe8" outgoingWss="" incomingWss="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${#Project#SoapUrl}</con:endpoint>
        <con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header/>
   <SOAP-ENV:Body>
      <SendMessagesRequest xmlns="http://coin.nl/ws/schema">
         <Sender>CRY</Sender>
         <Messages>
            <Message>
               <Text><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
   <header>
      <receiver>
                  <networkoperator>FARI</networkoperator>
         	              <serviceprovider>FARI</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>CRY</networkoperator>
         		          <serviceprovider>CRY</serviceprovider>
               </sender>
            <messageid>CRY-FARI-EndFlow01-01</messageid>
            <timestamp>2014-01-23T14:11:18</timestamp>
   </header>
   <body>
      <contractterminationperformed>
         <v1>
         <dossierid>CRY-FARI-EndFlow01-01</dossierid>
                        <recipientserviceprovider>CRY</recipientserviceprovider>
                                    <recipientnetworkoperator>CRY</recipientnetworkoperator>
            			            <donornetworkoperator>FARI</donornetworkoperator>
            			            <donorserviceprovider>FARI</donorserviceprovider>
                        <actualdatetime>2014-01-23T14:11:18</actualdatetime>
                        <note>Endflow_Performed</note>
                     </v1>
      </contractterminationperformed>
   </body>
</message>]]]]>><![CDATA[</Text>
            </Message>
         </Messages>
      </SendMessagesRequest>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request>
        <con:credentials>
          <con:username>Bert</con:username>
          <con:password>Ernie</con:password>
          <con:domain xsi:nil="true"/>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="Contract Termination Change" id="b4f976a0-cc99-45df-a7f1-d2aa1fa00928" outgoingWss="" incomingWss="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${#Project#SoapUrl}</con:endpoint>
        <con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header/>
   <SOAP-ENV:Body>
      <SendMessagesRequest xmlns="http://coin.nl/ws/schema">
         <Sender>CRY</Sender>
         <Messages>
            <Message>
               <Text><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
   <header>
      <receiver>
                  <networkoperator>FARI</networkoperator>
         	              <serviceprovider>FARI</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>CRY</networkoperator>
         		          <serviceprovider>CRY</serviceprovider>
               </sender>
            <messageid>CRY-FARI-EndFlow01-01</messageid>
            <timestamp>2014-01-23T13:19:15</timestamp>
   </header>
   <body>
      <change>
         <v1>
         	<dossierid>CRY-FARI-EndFlow01-01</dossierid>
            <wishdatetime>2014-02-18T15:00:34</wishdatetime>
                        <note>endflow</note>
                     </v1>
      </change>
   </body>
</message>]]]]>><![CDATA[</Text>
            </Message>
         </Messages>
      </SendMessagesRequest>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request>
        <con:credentials>
          <con:username>Bert</con:username>
          <con:password>Ernie</con:password>
          <con:domain xsi:nil="true"/>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="Contract Termination Change Answer" id="7ecf7d3b-76e3-4e36-a0a6-bed12f91e92e" outgoingWss="" incomingWss="" timeout="" wssPasswordType="PasswordText">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${#Project#SoapUrl}</con:endpoint>
        <con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header/>
   <SOAP-ENV:Body>
      <SendMessagesRequest xmlns="http://coin.nl/ws/schema">
         <Sender>TP10</Sender>
         <Messages>
            <Message>
               <Text><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
   <header>
      <receiver>
                  <networkoperator>TP14</networkoperator>
         	              <serviceprovider>TP14</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>TP10</networkoperator>
         		          <serviceprovider>TP10</serviceprovider>
               </sender>
            <messageid>TP14-TP10-ALSBVNZRI-06</messageid>
            <timestamp>${=String.format('%tFT%<tT', new Date())}</timestamp>
   </header>
   <body>
      <changeanswer>
         <v2>
         	<dossierid>TP14-TP10-ALSBVNZRI-01</dossierid>
         	<blocking>N</blocking>
         	            <wishdatetime>2016-02-27T13:32:16</wishdatetime>
                      <proposeddatetime>2016-02-27T13:32:16</proposeddatetime>
                      <note>TESTWITHCHTCHAOK AFter blocking</note>
                     </v2>
      </changeanswer>
   </body>
</message>]]]]>><![CDATA[</Text>
            </Message>
         </Messages>
      </SendMessagesRequest>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request>
        <con:credentials>
          <con:username>COINTP10</con:username>
          <con:password>COINTP10</con:password>
          <con:domain xsi:nil="true"/>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="Contract Termination Cancel" id="fed57306-8fb5-4471-85e0-47e2f5a6d1d8" outgoingWss="" incomingWss="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${#Project#SoapUrl}</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>ZIGGO</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>KPN</networkoperator>
<!--Optional:-->
<serviceprovider>KPN</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>ZIGGO</networkoperator>
<!--Optional:-->
<serviceprovider>ZIGGO</serviceprovider>
</sender>
<!--Optional:-->
<messageid>ZIGGO-KPN-EndFlow01-01</messageid>
<timestamp>2014-01-28T14:30:00</timestamp>
</header>
<body>
    <cancel>
      <v1>
        <dossierid>ZIGGO-KPN-EndFlow01-01</dossierid>
        <note>Endflow_Cancel</note>
      </v1>
    </cancel>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:username>Bert</con:username>
          <con:password>Ernie</con:password>
          <con:domain xsi:nil="true"/>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
    </con:operation>
  </con:interface>
  <con:testSuite name="3.1.1_RainyDay-XSD_Validations_CTP_Header" id="d0a6be5c-b6b3-46af-a440-b8835965d766">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A1.1 missing sender block_CTP" searchProperties="true" id="52420978-ec62-4366-82ea-6ac40628117e" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="d87a65dc-55da-4f00-b103-618c23ae4785">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="347ba0ca-0072-498d-b6af-18d4e8dc795e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="bc1c7a5d-602c-4f0c-a161-190c0dbe61eb" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="14720f4f-4170-47d9-8bea-253870971a19" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca558713-e77c-479e-9c09-881400852e6c" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="fa5145a0-0b77-4721-ab49-cbebf437e6e6">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="5aa02087-6751-477b-b447-72f11374aecc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="8ff546e7-ea9e-4f28-a4c8-7add45c01362" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f7f7cf95-bcc6-4a7e-a94f-b4e9ea2f72dc" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="307404ff-2fc3-49ac-bea9-4281c9195013">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="42d1630a-59bc-49f7-aa60-a2a6c7872022" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0beb22d1-7ebb-44d4-8c02-35a9eddd8920" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="0a9f2e3b-fbaa-45b9-b981-9377dd4299e5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="ad4248f8-caf8-4a71-acf2-9bd628904cc4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3250772a-8c7c-4a89-8df3-adb227697735" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="b6a8d4c4-8eb6-4f98-aec8-98e92e7d8e19" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="ae26e6e6-a97b-4d13-a1fa-2cd2f1524d13">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="77dd3ab6-837b-454d-88b8-bbbb1d37ec22">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="b7389c66-eedf-4cea-9647-d65e887f88f2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="f409cdb9-3d40-4edd-ba57-57f2daa22566">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b035d478-92f0-4abb-b147-d6c466074b16" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="312cdb09-5a0b-443d-a182-06171f143841" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="00a38a52-0ff2-41ba-b908-873104f10dca">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="0f719d48-5342-45be-81d2-dc595d3ab72e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="f2e8f656-bf9f-46a4-bc10-75cb0b741685">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="8c1b5f0e-e2a3-4b98-abdb-76c31798e3e1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="27d25016-3ab1-460d-b22b-fdc29391257f" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7a488847-f29d-497f-b5e4-720434dda8df" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1f40311e-bcc0-4a5f-91a9-34e159b1560e" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="4412c602-30f9-4795-a99c-2b19fddc3b02">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="fa97a5c8-af86-42f3-aacf-6eccda4f6395">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="e7c9601e-df1f-4024-acb3-1fa7f0859561" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="5ab1762e-a60b-4e94-bfb3-84a9ed26bd56" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="b83415b5-123d-4284-b2cf-a1d02594776f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9a9dbb7a-1124-47fa-be24-3812d01b6aed" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1255468c-5ddd-4970-a27b-9966218b02e3" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="489ea0cc-3fa6-4a12-ac6a-9f2f9c9ab641">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="acdd4056-c4a5-456c-b0cc-02a31063f3c8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3470e51c-89d7-45bb-8fa3-d0ca741cbbe8" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="64d41ce1-e697-4e06-b94e-cf4d8e855c29" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_MissingSenderBlock" id="608e5018-56eb-46ac-b6bb-8b5b86969948">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_MissingSenderBlock" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <sch:SendMessagesRequest>\r
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>\r
         <sch:Messages>\r
            <sch:Message>\r
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<!-- Sender block -->
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>\r
            </sch:Message>\r
         </sch:Messages>\r
      </sch:SendMessagesRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="0b8887b1-231d-4baf-9a7a-b05e69957d65">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b82bcee7-e6f6-4725-a26d-a9f27c8092d8" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="17a8db39-02fb-4371-b8f1-4bebb9387d1d" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ad7adab1-d0f0-445c-b4ee-60d5ff2d9141" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="c0a74586-ae95-4e14-90ea-a078c368a3d1">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="c9ea1ea9-28b0-430b-b03e-283b520f7f57">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="562c6e61-4a18-45df-aeb7-d3d9c9e9f47c" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0914d31b-746a-4f1e-ae4c-8024be8ea916" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="3c0f05b6-2a8b-4b19-a2ab-2eb45059cdf6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*One of '{"http://www.coin.nl/Overstappen_MESSAGES":sender}' is expected*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3c109dfe-85d8-4cc2-b0a3-35bc381217c1" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a61056cd-a376-473a-a0e4-70911b94e5a4" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="36760fe6-cf7d-42ff-b3f3-5a686f5fd498">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_NoRecord_CTP" id="357283f9-b2b4-4378-9a94-5037e7cebe77">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d08d76c4-ceac-4118-8037-7f67e136ebee" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="05c2815c-dcc4-43ac-bad5-bdcd1ea0638f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A1.2 sender sp too long_CTP" searchProperties="true" id="6e57b6b4-3153-4cc8-9700-019a571da873" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="79de9a83-bb62-4050-a8b7-60bd9906ca6e">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="e745af55-6c28-49f0-8e3a-00c5c5fa2e8e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d1f184e9-810f-4ad9-8fe2-dbf55534333f" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="15ed336c-8346-45e9-b131-dc8d766cd54a" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="30699332-5dc4-4123-adcb-447f90dbbbd0" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="fceccdfe-fb46-4e15-85b9-cdf2869afa91">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="fae699fc-0630-4832-a8c0-871e9b4659a6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="0d457666-1db4-497b-854b-9c640b067c8a" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="bcd46bfa-bc69-42ef-8a53-df50737c0037" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="2fa12127-236f-4c59-92de-b3d39b3bd701">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="72cdb528-deb3-4141-a4dc-6bbffc94d7e3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c38f29e9-0639-427b-b6b3-d2b549f6adc1" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="45f69cc2-8690-4f65-9698-c2e56c54b706">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="310e697c-72b4-4884-a090-8f2f43e6fd81">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="2986544c-9ad6-40ba-97a9-ee49e9748466" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="1f632b16-a1cb-435d-ae1c-435de24a172a" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="df0fdfe6-36ab-4811-8dd8-0a186112fad8">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="ee956fcf-9f05-4b01-823c-3a1ceaf01f24">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="4367e9f0-27b7-478b-9d7f-61fe8c33ba4a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="ec852885-5844-40b3-8a80-4c7ca8fcabd7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="519b32c5-580b-4332-b29b-fdbe98f566f2" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0116d0bf-b8ef-4a69-b6d7-2ec35912cbde" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="d324dbbc-fc24-4a54-9e90-27ea0ceea8df">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="990d635e-f884-4a2b-97ad-c94bf219584d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="a053e3a5-747d-498b-aee3-1782f02efb2d">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="82afaae2-0672-4f1c-a716-1d3fe23998e0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7c5961f9-2df2-47ef-86f2-5914c16a9776" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0b85ac22-45cb-4e9e-b0e5-eefb199d6f70" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="948570ef-d9dd-4a52-941a-ca0e18d1f75b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="df499ac1-b406-4762-9b08-8e4d6b251347">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="742368a1-b8f0-4897-ab20-779c679b2c25">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b1aea2a0-4721-46fc-8bce-da657672e703" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="449c0111-f90a-4f6a-8406-7dfd923f8bb0" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="7b3a1e78-5efa-47ad-b04e-437613908779">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4f0bdc2b-fe29-4cd1-8e9c-95bdb99be37c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6a2d4dc3-1446-4468-9380-396cf00463d5" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="bb08b42e-185f-48da-84db-5a019d13dcac">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="74e26898-4c8b-412c-8f0f-de8cbaf912ce">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a8cf48e9-5d52-4b5e-a1d8-48a6a0cd6f2e" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7bfd4089-2c25-443d-84da-d49700f1b262" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_Sender_ServiceProviderTooLong" id="d9d31d89-c604-4059-a4b2-2a70bc0f75e7">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_Sender_ServiceProviderTooLong" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>XXXXXXXXXX</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="84bcbcd7-598e-4b46-8eba-0b9c119e6f54">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3c853aba-e11b-4baa-b57d-1a6509d01981" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="96169249-0190-441e-a49d-cc4f009d9b80" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d530c93f-de5d-4b63-8c5a-a84f7248c7f2" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="458c6e7e-f1af-4c6d-9c6e-f7d05338886d">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="dbc940b0-5931-4535-b159-a411eeae25a9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a09c268c-f64c-43c3-92a4-fbdb33a1f49e" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8d958502-b999-4848-a1a5-0d1d928803f4" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="751019b4-bf9e-4e9f-bb46-1ce0588c0b9c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*is not facet-valid with respect to maxLength '6' for type 'serviceproviderid'*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e029ace2-10a4-40ef-bb96-701cc9f70758" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d4d43b11-7fe0-4687-b5f5-302605b93ee8" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="32115d95-5b7c-4433-985c-eed3751aa3f5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="d2206b7f-25c2-4377-8cea-3005c24811ca">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="07c27733-315a-4e61-b096-a5caf0a8ac8e" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="fdbbe81a-7b1b-4d9f-9bda-a4477b8c5de7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A1.3 sender sp too short_CTP" searchProperties="true" id="4ef36b8a-7af9-4115-98a2-90fbd0386633" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="daa7095d-0557-46fc-a5c8-7aed79dd60d7">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="97399d28-34e9-42ef-9aae-6a02590d4167">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="236c85d5-fe25-4341-922c-02a829010a3b" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0c4a5af8-b65a-4a32-b902-de3dec838e1c" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="530c259c-fd0f-4cfd-8957-10eb49672a9c" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="15edff1d-38a1-4b71-8bea-481e83e3adb2">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="e2287c4c-6192-43a5-abe0-f2ae7e3eb1a8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="6bde28a8-d5ad-4715-a29a-b1f940a31369" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a27578bc-a74d-4ea1-b0ac-ab6a00272ccd" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="8b1ec28d-4cee-4a8b-967a-341950eabaea">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="90d8ba90-1204-41be-9acf-9ec2ee74ca29" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3f54fb1d-e81e-48f3-b69c-2289896b7889" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="8fd718b9-ac5d-4e7e-b84a-d11ec5fd6b1f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="af4d6feb-79c1-4243-ab93-de2d081aaf8c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4daf6fed-fb54-4250-9eb0-4ba902d3d986" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c8468e8b-8045-4425-a02b-9e838d605efa" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="39ef0f00-07b8-43db-bd25-ad42d50e232c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="33f93add-9c9e-4fa9-a899-82d6b1381453">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="a372d442-4a60-4c03-a98e-7b05db5d5627">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="35f1bab1-82b5-4d30-93cb-efe2d4f712d2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b6b62515-fc77-4386-8880-4c9dfbd19c50" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="df116996-aafd-4da6-a91b-c1bc5c48b607" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="ad08a722-097a-443c-a240-fcdb740ecf45">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="566b0b97-4a31-43e7-8d09-c2348b539c65">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="39cc4d2a-b51d-4718-92cb-dbaede13dcb5">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="e22257b1-466e-46c8-a285-f127451be8d6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="82f75d87-425b-4169-a644-b55306d42910" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="11ff6fc3-5994-4de8-84cd-6dab11c4c9cf" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7c2db70c-97a0-427e-a41b-554a4a2321a9" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="160f5e55-8d71-4171-95ac-87cb38e06f99">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="d2414a25-1112-4cc4-a52d-03e93d9b2b45">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="659e0dfe-4e5c-4d78-b337-bee7edd8bdff" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="6a1f6424-df27-4109-8c04-55dafe9b71a7" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="c2f1ac94-9603-455b-9923-8bf0feffd20f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="946afc5f-4126-461c-bbbc-d56fa7b85a93" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fcca2f13-e793-4c8b-91bb-1660d10eeec4" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="a1c0344d-4d47-448c-bd34-d3b2377c526a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="ad03999b-d8fe-4e53-953d-5441152889f0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9dbb107e-22ae-4fea-91f7-7420a19b37b6" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="96145106-8b86-4e0a-911f-6977ba48ccae" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_Sender_ServiceProviderTooShort" id="f25e88ef-5432-4f2e-bf4d-be9534515954">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_Sender_ServiceProviderTooShort" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>X</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="7634c12e-2681-4fee-95ce-fa5d1e5d5dc2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4ecc595b-d942-41aa-a3f6-1ed659867958" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5b23169a-66a9-432e-b4d7-0f556560e73b" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="bebca322-6f1b-4077-b9f2-1d9204bc9bc4" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="22e24f7d-9b0d-4769-8f4c-2d19c690d443">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="62e5f132-70d0-4078-b4b8-22c5b16748e7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="45bc1087-17a2-4040-a575-6e56cfab0b65" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="5dc9ae37-c733-46e6-9625-c706a71d616b" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="cc7db091-5735-40fd-a05b-d58475725a59">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*is not facet-valid with respect to minLength '3' for type 'serviceproviderid'*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3b8e3c18-39f3-47a4-ae9d-9a5e414dc825" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="633fff45-82ad-4679-9e12-b35240056505" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="3cd3d968-6129-479a-aed2-996dbe0185a2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="07790755-4219-4ce1-88a6-240b5a1e4376">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d281a80f-b5c4-4e82-9f5e-bfaa3274d2b6" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="61eb7b19-e0a0-41df-be28-4e411d9b2038">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A1.4 empty sender sp_CTP" searchProperties="true" id="235e0ab6-73b9-4f64-8aad-02b7fe24d88b" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="4360ae3d-2977-40c7-8398-77bebc22bec2">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="39a58a35-3096-4a3f-8ff7-e0bd5c911d80">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8dac7a53-2a08-4270-b2c9-1e7338b7de88" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="65d84b56-d336-450b-898f-28a6bd25eb2b" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b8b9bdf0-5b83-4468-a870-98a7b54d8ae8" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="d042d07e-68e7-43d6-a0ae-a9411778c86b">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="40abc338-00cb-4a00-b5b6-12936347a6ca">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="48197d6b-e6cb-4d54-8f63-31c91cff4ef0" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="92aee22a-3c31-4d11-8c9e-22cb87639b3a" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="37819d40-12d1-48a2-acfc-0650a2f0aec3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="846e551f-6389-4830-a040-437a765b4d6c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="72875f97-bafa-4717-acba-7887bc7725fb" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="5a7e12cc-498f-482d-9aae-b6b100d176f1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="6cb1cc56-2001-4a57-bf8d-31df3f1a7624">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5a5b33d7-35cd-417a-9b67-5807654b7110" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="dc6101fd-7f4a-47f1-bffc-544f06c843c9" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="1f760ee0-027d-4342-aab7-e6ee69581d33">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="4e60eb3c-5795-40f3-ab83-81fcdfceb6d5">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="6d82ef97-e82d-42e5-b4aa-0be3d4f79120">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="d00824aa-eaa2-44cf-b6e8-1e45d2eda1b2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d2c12604-184e-432d-972f-a78e138b170d" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d58a5d48-4788-43e3-881c-69b5511804bd" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="d92d7074-8775-4fce-88b5-5d0542e762eb">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="f75c354e-2f93-4e92-ab9e-467c236f1461">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="ce73bafd-be5e-44ee-816e-b9fac8790c3a">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="b23ec3c6-3ac0-4d5e-8993-6a350418f034">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9637bf40-0958-4f87-94a9-b270ce6de583" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8aa3556a-11e1-4e78-bca4-8f277d3e668d" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="896a73a8-b972-41ee-b9fa-ddc5d00d1837" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="d47133f6-362d-4baf-91aa-76ebc2cc59ea">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="49bd33b5-407f-4847-a633-44c83f0e0dd7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="f046537a-430e-4eec-be0a-d8f7d7c93ef1" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a3986a3a-edb3-4da0-8f48-7b4bb5ac5e02" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="31a03e16-98cc-4011-86b3-897259f2857c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4a5a5245-8b3e-44b2-a6f2-cf52bfa93ede" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="972d988c-9c68-4e33-a642-ce7c39379465" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="f393ce6e-1bf5-43bd-b35e-63f993aa4c1c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="66beac04-5715-4411-b71d-5eba3c3d4bca">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="cc2e4617-a385-43a6-ad76-33cace7c604d" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1d71702e-b4e7-4ac7-9984-299dd2a155a7" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_Sender_ServiceProviderEmpty" id="bc29981f-f007-4460-9884-fb3996ce32bb">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_Sender_ServiceProviderEmpty" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider></serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="7eccb6a5-7224-4b71-bba0-9021c23e78e3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1273bfb9-e488-4cdb-bf20-be2b6c62795e" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2bfcf5b7-5cc5-4438-ae3e-05c70fd41bc0" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1f51d405-2568-4d4e-8d45-a2ba17f066bc" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="26af8ba9-12b8-4fdc-8dbb-ad4807752778">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="47dba4c5-8691-4295-8acd-6fdb37ceedd9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e30dcdee-bb92-4b82-a54f-e3e0013cac33" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="6b08980b-8d2b-43da-a7c4-6c88fb8748ec" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="0d1c6019-d480-41d8-9312-0b5a24a30fea">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*is not facet-valid with respect to minLength '3' for type 'serviceproviderid'*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0f7d68c9-435c-4cea-bb91-babf73a15cae" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="91419d4b-72ab-47d7-a996-32b9f1253f71" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="43dad728-a507-435c-a756-7a0b087e2ba1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="9e77432c-3c2e-4d55-a877-49bc99e36e00">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="542b1a68-2188-4f64-b7f4-301bb906ea0e" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="8deaa22b-c799-4c4e-be3d-48c88b874c3b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A1.5 empty sender no_CTP" searchProperties="true" id="3c33b4f3-d6eb-45ec-beed-186f2d2c5544" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="bd6a9251-73ab-4993-9684-64f8b9f285ae">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="c186fd57-bb80-4be1-ae74-bd056f954978">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="349a92d6-3cc8-4ab5-ac2f-a696f559e7be" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="78a16b0a-c5c9-4072-8d63-5ca58773845b" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b065d525-8e14-4abb-8b4a-fa6d21ab8951" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="87e5a54e-2344-417b-93d8-ac6508a5a4c1">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="7047944a-9c4b-447f-a240-845259a31ccf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="46d9e69d-6593-4e15-b8b1-5b84ea79de78" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="5782aa64-4da8-496c-ba09-f45592507227" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="2495c114-badf-4efa-a23b-37d2c3a292fb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ce4993e6-f9c3-4783-9983-6893873977ea" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="47096493-6dfd-4d13-b0d8-ff394a09aa6f" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="3d07e8b1-f40f-41f5-91bf-75ea1e4ddc44">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="b559eaec-ec53-47c4-8bb5-411687bac943">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cad37929-0654-46bc-8fd1-c6867ea3f425" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8d79620e-30e9-4065-afe5-ccfc538296e5" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="e5dcf244-d06d-4d96-95d4-325e60d631e6">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="981ea7fa-f4e2-498b-98c9-b9bde70ab670">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="ae27ad5b-afa5-452a-9051-ac18a50a7795">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="0c5b741c-f430-4882-b4e5-5caed2e8dcf5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="efb9305a-8e5f-4835-8617-7fff4ca95aa4" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4cf7e25a-23a7-4569-ae54-5c2dce3e7a6b" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="96be536c-a82c-4874-b3ab-72aeae4b7d16">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="1dd3e35a-fcb9-4f10-98e9-cc663b6b7ccc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="ec7cf5b3-c532-44bb-a24b-75bcce9f5c0f">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="c41dc13b-625f-4864-8ec4-ebb4ddbf5b4a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c8fa5baa-8436-4e24-b597-b27002e86124" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7e38d30c-be36-4ce4-a4ad-69c1456ce443" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="be099a6a-aef6-4505-a71d-11be07243e0a" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="abd20f7b-fb3a-4dc8-8352-c950ad373ffd">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="899bcbf0-669d-4378-8028-91a22ebff546">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="9f10b583-045c-4fee-b6b6-494f498e583d" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="7bea7a51-1f0f-4abe-97dc-e3ea77b49e11" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="839e702c-cc71-4723-8934-b6e8739976b2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="df79d276-a9cd-48fd-aab7-0aeda9778423" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6407e2be-6431-42e5-ade9-84ad8edac9cf" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="0d9c6daa-06a2-4221-a67a-ab7cd2b9f41d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="6cc937aa-83e2-4da8-8ddd-a589698882af">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="990f3f5a-5331-4664-87b9-6612651a3e2f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="25086032-197f-4eeb-b106-ce745ab68a1f" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_Sender_NetworkOperator_Empty" id="de3c6afd-f65e-445d-a40b-4b2951113866">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_Sender_NetworkOperator_Empty" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator></networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="df77941a-b5bb-4287-9e5a-20365deb116a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="98043af8-3ff7-4a3a-b534-c87e862467bf" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="dda6dbf7-1a65-4015-90ec-037293419b28" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5cb1d858-7b2e-46fa-bd0d-0be380e3040d" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="6f90fc73-8389-4343-ba05-c89cfed66b04">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="6002ac44-d65e-491d-bc24-9a5f2216aa94">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="048ed969-abbe-4dc0-b67d-6e5f93649af8" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c5f3f353-319c-4b34-8f6d-8580d986ffff" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="9c4ae346-592a-49a6-af94-370bb01a4487">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*is not facet-valid with respect to minLength '3' for type 'networkoperatorid'*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b5162a23-066d-4f6a-bc1a-1e98cedd2e2c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ad19e2bb-8a0a-43a3-a809-87a39697e629" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="a42dd597-f677-4416-8362-e5e8e87e9631">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="6ff82777-cf37-4281-b477-0369cf85b277">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e0d5fd7e-c3df-4e36-b057-438065bbbecd" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="8b75bba9-92b7-470f-93d8-a3533b954b09">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A1.6 sender no too short_CTP" searchProperties="true" id="ef810c9b-1b00-4840-835e-7a36c8b33dfd" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="5e5a9fab-09d1-4e23-9c58-e269f308c8fa">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="97e0000e-8687-4715-987b-beaf37bffc8f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="311e8df9-567b-4664-a488-36e174ec459e" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="77cfcaa3-da0c-4c2b-81d4-9673dfe34a75" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7f3f80a5-8f57-49f2-9d1e-fcad9fbbea0c" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="a521c679-1e32-4ea2-bfb5-e17e3716123f">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="2defb922-003a-4a48-88c3-7d128f1d9794">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b89d877e-bc5d-4bdd-9bea-1ac44640151f" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="07a74fd7-4f22-464a-b049-adaac66e0d76" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="8fa62609-10af-47d6-9b0c-6dced079805a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a1aec48c-f188-4fa4-9a56-a7f1980a395f" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="088c7799-f9fa-4ce6-b526-c19f7ac2fcb6" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="efb090d1-0627-4c90-b36b-6ee3f5246e32">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="821e02d7-c991-460f-ac7f-ac76042af3ca">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="2fdf2864-20c1-402d-92fc-6b6e37ed0df7" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="60d9b1e9-212c-4a54-91a2-3971977df0fa" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="aa41b710-5325-412a-bd0e-fb5a0dd56602">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="b2888356-ae75-4f92-8341-eb6ee91932d7">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="77cb8add-c422-40c8-8ab1-110dd64e0161">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="e619748e-21cc-4ab8-9b10-85939efe89d6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="2c8ba258-db24-4b90-be57-207dbf9aa147" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0200d2d9-595f-413f-8473-f9ebd38c96bc" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="d7a7cb80-3ec3-43a5-972f-5ed241fd08e7">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="5ddf9131-bfe4-41a6-9b16-6befc1c30d21">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="7944b8b5-520d-46b8-9721-d3d62c804097">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="fcd638c1-3281-48cf-9a97-8a2a95b3cab6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1d590895-cb31-45bf-8519-3c43b53a9d1f" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="79a9dd5f-63d0-4d02-8e8e-da9e13492e9c" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c9fb00b7-d23f-45c5-b8f3-4bee9ab4d99f" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="98ec3ece-7545-4a64-9ce2-a4b4e4845849">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="1e9e23eb-ed5e-4447-9693-a0e3b06a492c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="535509b9-9d0f-45c7-9d96-e58bb1224b5b" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="6350118a-aca1-48e4-a1de-72d2ca65b6d3" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="6b4865fa-5bdc-48c5-b16b-283c90aa4fb1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="68549581-25e6-45ca-b290-532cb30e6cae" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c142c1c6-4e06-4c57-882f-8b78969de6a1" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="9574419d-7f16-4018-b627-e154bc29c666">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="55ea0342-5629-42e6-b316-909a6210f841">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c09e678b-e9f3-4ee0-9a45-04bc30db1909" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="bced0157-406b-45ea-b9a3-e3628ca34c75" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_Sender_NetworkOperator_TooShort" id="137df6fb-35a2-4a00-a066-07fa01d1744a">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_Sender_NetworkOperator_TooShort" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>X</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="fa703102-a3d7-49e3-a10d-0d08625e2bc4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c5a97f84-c2e0-4bfa-bcda-9c1f8350edd5" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="29483d3f-4323-4300-bc5d-fe9a6ad2e635" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="74371cf8-416c-40c4-9627-6a9ec897d712" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="b06d3557-25c3-4182-bebd-e5187def6c0b">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="b0fcb768-e8b3-4847-97af-ccbd622dab94">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="4558ba0c-79e1-4b4c-9d81-6fd3919f0c12" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="62682764-7027-4cc8-9cc1-aabd255e6004" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="3f530bc6-891f-4cc8-961e-cfad4b05c28a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*is not facet-valid with respect to minLength '3' for type 'networkoperatorid'*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b8502fd7-0460-4c21-965c-1e9a403c8b78" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="01a098c6-e289-4399-bd68-7ed35579afbf" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="1605c2a9-e612-4c0e-93bf-2333828a0dbf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="c13e84cf-4747-4fbf-9b4a-5938961bf48d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="297125ea-de55-4bb3-bcf2-4fab58706f46" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="f0a1a9ba-728a-47de-9b9b-bd2ddeb4634e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A1.7 sender no too long_CTP" searchProperties="true" id="934d8b57-c892-4195-98f6-52333b2c2a76" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="b8efa4e9-5e7b-41ef-ac76-c07f753ed1b9">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="1023465e-9233-4a67-ac6f-4173ec72dea9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="dd90a7df-36cb-4d57-bb73-771aae1c6d20" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2d1380ef-df8d-4600-967e-8a17224b766c" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="af39df70-f17a-4186-a30a-cee7058a8bc3" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="7319e671-3734-4008-b965-04cbce357ad2">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="af5167c9-8fdf-4779-80f9-bb986aca49d4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="7031e7b1-dae9-475d-89cb-76271c731be8" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a0511fe4-987f-477f-85fd-5bc1432bf1a9" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="85190e89-95d7-49e1-97f2-224b47675624">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f347ea79-a75d-405f-8ce3-87b973b424de" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c33be5b5-37cd-4005-b4a1-b1b7801905db" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="4e962cfb-5212-4711-9039-9b0d4eca9fea">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="dd45ab40-1c4e-4d57-a643-a67ea3f59a5f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="97553daf-9a9e-4aa6-a85f-a62424d3d343" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="ba57de62-3131-492d-a642-f1d02f1a38c9" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="7bfba0f9-738e-4bc1-a4fe-acc4de520e9d">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="e8d6bea4-812e-4d6f-a483-d36370a3ea08">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="f5dc1763-ad8d-4ee8-9888-c2a7430b16d5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="decd3914-3d55-41dc-be27-82b248b31c06">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="38077857-3fca-49c2-9013-eabc8798a1c5" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="deab1716-f48d-42ed-8422-e36f47d8bac2" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="17ce04ea-0ec9-478a-b1e9-e9e2320125cf">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="6279b591-ceee-4504-aa8b-cdd4d0e05add">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="ec3999be-4cce-42ec-968a-a6ca9001cd24">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="19ba5e02-36ca-481f-af6a-89ed661e9634">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1347c63f-160f-45e2-950d-2956e2b25b17" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="073ca55e-b408-4935-856f-fd628c12825d" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ad3d29a1-fec6-4b8d-9746-80ad94c0a82d" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="22909358-1fb6-4691-abfd-ff53abfd4ac2">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="3d51a60f-e63e-48d3-a9de-ad8603710c3c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="30b5cc5a-00ac-4678-ac50-5f72ab37a8ed" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c1324f90-680d-413e-9740-8762ddd16784" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="8e7d9571-865c-4a43-905b-f64b9d927dfd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="aebff951-a702-4548-a58f-e1da3ee6ce86" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3668f3c0-fe13-474d-beee-11fd87d54432" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="b6312a29-ef7a-468c-a6c3-ca1e330a9846">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="d58c2b9d-988c-4daf-ad66-d2f6fa74b236">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fd988933-32f3-4795-b0ca-3220f42f40d4" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a774b0ad-cc60-466d-8b4c-1f0fd76ea823" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_Sender_NetworkOperator_TooLong" id="c628a8b8-a8c1-447c-9f63-a9d36f340884">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_Sender_NetworkOperator_TooLong" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>XXXXXXXXXX</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="1b260d8d-206f-4887-94f2-92bc7f5ec1d1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d871dc86-2f12-4441-aafb-614f123a8147" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a084627d-a844-4e74-ace9-8d1f0074d56f" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e94575c5-41d4-437d-a090-6b14bf4df0fe" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="eccac939-cfeb-47e4-8bf6-23ca598ae702">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="bb425e59-fc80-4be9-82d7-c286673c2466">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="dfa615fa-58d0-428a-be49-cbaaa66392c3" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="464609d4-1ea1-404c-86ae-0b467592bdba" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="a439cba5-5463-48ce-802f-c7ceed367ac9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*is not facet-valid with respect to maxLength '6' for type 'networkoperatorid'*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="cb88f404-e6a4-442d-88dd-2e984c1eb40b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2adceabd-3d07-4967-8a8a-cf073ab65af1" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="5cd84c23-ef11-47bc-8382-5a0ae45d54b4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="281d2bd7-1739-4134-9749-52b2dec436bf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8efb8849-a3ac-4d7a-b404-f9d1e28f38c3" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="ac40cead-44fa-4cae-af0a-eff12329f17b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A1.8 sender sp incorrect format_CTP" searchProperties="true" id="c5c14923-5e88-4c1a-bde0-d1d357cbfce5" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="bf92acd7-c915-4107-8209-ee0f3458ed01">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="e0871712-8a2e-4181-94bb-4dd646236584">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f94fe32d-4af3-4228-b0a0-f9c53afce483" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ede922cf-f598-459a-851e-df95669a6d75" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b5836bbd-b973-4649-af44-e164b67065a8" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="c44ff2fe-b325-4d45-a0b0-84dad1dade7f">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="b58e18a0-969c-4943-bd9b-3c833aed9f16">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="aa03b07e-9646-4325-8f70-3b576e4d3154" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="163a059d-5327-4883-aa78-4f0c6f0b1cc9" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="16bf2ea0-d098-4ffc-9143-2383f5be46b6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8580a104-e721-484c-bf83-6ed8111dc23e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="bd3111c2-0799-4b30-89bc-5204335b622f" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="bdfd3ce2-1b11-46a8-a43f-99e58e5910b3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="9a4e498e-d979-4a48-8e16-923e0774ab1d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e75be895-c134-48a2-9ce0-a4437f8d0f29" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a1d73551-64cd-43db-8833-55da0dca8624" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="a60e5448-6891-45f0-b941-214ee5eee5f4">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="70967fe8-aaa1-4b12-b2af-9bbc8860009f">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="6c642679-d5ea-474b-bd46-8fbbc4641bff">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="82bc0617-0a6f-4b11-825b-ca3a399d7d92">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="22b447aa-a729-487f-a676-90a502e3d40c" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6af97595-5e03-40b4-9005-3e9d12e9eb85" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="4bf329d8-e682-4937-bf69-327651b7fc3d">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="939b95c6-5243-4f24-a59d-64b4f7eb9a6a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="1e56314c-7d42-49a1-a757-545f8a6e2842">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="896ec872-3b26-4067-95f9-b386f86c426f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4ab04ebb-9e2e-4685-9ed5-1ae1c98a9b99" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7c10a941-583b-469c-bf6f-fb0f67a853a3" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fff03329-e7aa-43cc-854d-42ece922733f" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="37cf9516-823a-44cf-abfb-95056fbcbe9f">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="aa47f0e6-c423-42f1-b1bf-5eca5d9cb503">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="a76993d9-dce0-4851-a228-86886c64f33a" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="02f1932e-3227-4b08-b30f-b7ab2cc3e547" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="24ec4efa-9b6b-480b-94e3-e7d67b3f5e35">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d022e9bf-7a0d-4e89-aad7-a1ffd8bd0427" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="08b783df-55c2-4367-9399-40f7c9617065" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="cc7ed9c8-7b96-49eb-a1d0-882aab6c857a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="5768695a-1fbc-43f8-bd87-324cf6bcf52c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c23b48c8-d695-4cfc-9419-727ab41b6664" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="03c61865-b6cd-4754-9621-54fdc903331c" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_Sender_ServiceProvider_IncorrectFormat" id="e013b6ce-3aca-42a7-9538-b8b1bdc61c61">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_Sender_ServiceProvider_IncorrectFormat" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>#${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="81953803-a67b-4db7-8aa8-cdc19595fd89">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="aa8480d0-a097-4f54-8344-bb05d1b22b05" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3832bb23-1c21-4152-9ed5-43d4a5c90bdc" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7a5148ea-cbea-4049-b5cf-f3fd41aecfc9" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="82322256-a479-4fcd-9ef3-394164d47e48">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="fd8d9000-1bf3-4f19-97ce-b31cd6b188a9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="66b2203d-f71d-4079-9def-7679c4e7b87b" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="ed512024-92b3-417f-a278-72d72e75c530" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="e1c03ef0-8707-4e82-9840-ad465fb7e3f6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*is not facet-valid with respect to pattern '[A-Z0-9]{0,}' for type 'serviceproviderid'*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4e895c0d-b06b-4fdc-9665-7c769c20e98d" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6cef6933-5092-42da-b4d2-5ed6864e4ea0" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="06186e33-cb8e-4da6-b63d-d4e6572f05c4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="d79243ec-6765-4e28-916e-a3a9a7c89a80">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="b34f0bea-00ee-40a9-a2c8-68075d7ea84b" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="607dcae4-b3da-4f23-802a-b54fab48540a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A1.9 missing receiver SP_CTP" searchProperties="true" id="6059fbb3-cd77-4afe-aab9-279468365abf" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="a589cb8c-bf53-49b5-aa43-6fbeae2bf171">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="03fa6fa8-3e02-4043-a6f0-7da8a003a208">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="dc13b065-5e76-4784-9d41-8c7868793eed" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9adbc781-d30c-4b1f-84e6-be061c5359bb" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="bbbe1e43-042e-4393-8ed0-cbe02280c519" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="bff77107-203b-4857-84cd-f63809684240">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="8691c49e-5541-49cd-bbd1-79075b7c6106">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="7585d8e8-c64e-4b77-b022-7b81c007f3fb" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="5771d5ab-97ed-48d1-9fda-7990adee6b01" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="f033ada8-1717-4f85-bdb8-b02f9a67738d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4296017c-e227-4a5c-be1d-a15c923948b4" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0cf02dfb-db8f-4cfb-87b6-b43ec9b2f569" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="5ae3b340-6352-4e25-b8da-429bd33e5e4b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="e427f331-d163-4a21-9df0-c9345343bd1d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d8da451c-327e-40e2-886b-b4baad5baeb7" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="eaa4784c-c8ec-4370-a522-422734d41d52" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="109d20b7-3c94-4c98-9e63-9a0fdcc0ecc7">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="eb520b53-b112-4cb1-a706-537ce49c0f0c">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="398ee8c1-8166-4f24-82aa-2e88f6283f2e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="6ef4a45f-28bd-46d8-b465-c65fa00c639b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8c6d5e6a-b817-4c51-b15d-a8419c22ca99" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9b77ab88-afa0-43da-ba1b-e8f423acb702" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="b37014b0-277a-4110-860d-aef9d664fcde">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="261c9ce2-61c1-4cb0-aa18-81d32fc3b9c5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="38c31d81-3b5b-4fa5-8443-43af340faccc">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="f8c44a9d-9bb8-447b-ac9f-d39d316b88db">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="27c2c26a-ab12-4fa3-90d0-bca025ee5d46" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5befa340-1305-42e0-9d5a-569493fe51db" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="60653151-1fb2-463f-9d10-4bedc4e73377" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="5250b979-7237-481d-ac4c-108fa02dc911">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="1c863cb3-365b-42db-b9fe-4eabfa65bead">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="afa1e390-819c-4e65-a101-9bf74ae1022b" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="9f340da5-5b78-47fc-8b97-d5e24d799545" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="83a4e93a-adad-4a90-8e19-d2e2daf48737">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3fa6ef7a-708a-4721-b0b9-710c4b69f6d1" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fea0fc1b-72d9-431c-b3aa-f8d8aaa3f043" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="fea71740-7af3-442d-8e20-5703bf22d4ae">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="fa0746e7-a0ae-4118-9f07-4296c18a4cb7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="77b26e91-3d04-4180-9580-cf2372ee90a3" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="17dd59ad-0290-4ca9-aa47-6e9414e78fc3" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_Receiver_ServiceProvider_Missing" id="e4b4a968-97b8-4ef3-9d16-66867d6749d3">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_Receiver_ServiceProvider_Missing" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>

</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="8f51be48-da1d-47fa-9678-815012ef83e0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="879a6327-08b2-474b-b783-b4cef7bd9576" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="444d63c4-d74e-4420-9164-c9923df49587" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="38ae911f-409f-416d-9002-3ae97b1c86ae" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="f2e3dbff-5086-4fe6-9b1e-b190aa7149b1">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="4ba66d43-1294-45a3-bbe3-303c94afb71c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="687432bd-5d84-48ea-93e6-3b156af91c00" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="958a0e4d-b7d6-42bb-90d0-54f8cc816ca9" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="a74b23fb-c120-4871-a253-264f488dcbcf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>97</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*751 - Getting the SOAP validation fields failed*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d45fa59c-f856-4575-87d5-690687133628" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0847e46c-2ede-49f8-8567-f689f3c41fd8" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="5d96c444-2ee4-4fa5-b58f-da7dd0d8f418">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="49cf9d70-eee8-4e10-a8a3-90b63cd73678">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a979383c-d7cc-42e9-85f9-3b84a42fde24" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="014b9857-339a-410f-a372-b14c465c09e0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A1.10 missing receiver block_CTP" searchProperties="true" id="6d7721a4-62da-4072-9456-6f8aa51ccd82" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="74749b79-d610-4ce3-bbb2-645abae64588">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="a2cf7678-1896-4130-bc84-1c51bd45a417">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4075e0a1-da32-47dd-908c-67626ba744d9" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57c6cb20-30e3-4a63-bf35-7af57e73c818" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="547f2eda-6a6e-4caa-8e7f-2cf69b219983" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="62116295-ddfc-4a79-b445-84056de74a74">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="1c5f20b7-13f5-452d-9511-f68af423fddd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="03087a22-9334-4e8b-80f0-46906303397b" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="906e7c12-ba59-4de7-8e66-d0ebb33770fe" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="71c6c04b-65bf-4c7b-a9be-62072a6324fa">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1200c84c-7788-42d2-af54-71b8c4e5951b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="377e9446-b452-49c4-a6d5-26e525e062f0" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="7d7d0c68-b3b3-443f-891c-4a70810bdca0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="a8d32ba0-ddd7-4d2f-b8f4-346dbb179842">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="faf1837b-7f29-4a98-ad2a-a0cbc213715b" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="92658247-7555-4896-8417-5fb6dd274644" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="fa25dcd7-f7ea-498d-bbb7-696d47c15817">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="146d3241-051f-4799-ae61-5d2bef451603">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="37386841-2d5f-40cc-b141-c3b1bf09be9e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="7d83c759-201c-4ab4-b390-b89d44614530">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3b2c0f99-1ce2-44a8-8d46-079502f3da39" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2d744a1b-009f-4a2a-89bd-12e29a49d01f" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="763ea601-57d4-411d-83d6-981a9471ec19">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="7ff334d1-fcd0-4af4-84e4-0d235651a867">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="7b32bcf3-c322-446a-954a-c9d83da3f24d">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="76c8138d-50c1-4072-93db-aa23b26912f6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b7630dd8-147d-48a1-9da5-d6e2e6de8e99" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3dd820ed-373b-49c4-bdfd-cac70c9e74ba" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e3e9f41a-a7a9-4a03-bd3b-b7cca38b2551" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="c7559111-40a7-47b3-a97d-28f22228fede">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="747fc237-0dfc-42b6-a956-688cfcd423e5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="8ca20fef-34c1-4d7d-a90d-abde9378bd8e" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0095aa90-6578-4fb3-a4c6-ba46b32e24a4" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="b4796c13-1fa1-4e47-b238-37296d105de2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="890d28ee-ae75-4e88-b01b-f5195985b373" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="293ac06e-1ac3-412b-a5a0-d6aac95da156" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="02df9ef1-6c04-486a-acf5-a9628e02f13d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="3b2853c5-85bf-499a-a170-e5e40c381c03">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ccb11c67-1b2b-40eb-bde4-29a1123df14f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b8537c3d-1c7d-417f-b5a1-f8f1678f7be1" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_ReceiverBlock_Missing" id="c30435ad-fb66-49b1-81bc-1d9127fc1874">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_ReceiverBlock_Missing" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>

<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="ea473c08-3db0-4008-b69f-eec17a9c1fbc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3e54f94e-e3aa-413b-abd9-09d25a513898" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3acf2928-494f-4093-bb5b-2326b7784810" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="842718c5-779b-4ed2-8139-d6df3cf98a7e" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="d60ae17a-f24b-4b20-98a1-d8fc61c4025a">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="8e0da9be-2d8a-434b-b4b7-c8785777747c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c7e7c79f-4217-4171-85ba-372511d1d2c6" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="274bfdac-2c32-4ab9-a1fe-6147cfad9ca6" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="73706b0d-2c14-4c28-8f3b-d1e366c287d0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*One of '{"http://www.coin.nl/Overstappen_MESSAGES":receiver}' is expected*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7dc7f5a2-7c0d-4c2a-afd6-d2fc29d62f27" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="292b15bc-6dc7-457d-b356-f2aecff2de50" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="10518ed5-dbcd-426d-b67a-f4cca97866f8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="fcbd328e-ca54-4fba-89b2-2a5e5d25c5f6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="59aa7425-eb8f-4c26-a45c-44a107cc55ab" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="fd16648e-17a0-4ff8-9d0e-fd1c9d0ccad5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A1.11 receiver SP empty_CTP" searchProperties="true" id="fdbccf46-ade2-4405-ab55-75f547d2f4af" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="78eb0814-4383-41a5-9fe5-3b2d2e6024fd">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="591e1944-3444-4467-8f86-c098cfb13503">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4e6fb240-7ed0-4a7e-bccb-78c02cd86027" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="50625037-2509-4392-98a6-491d3b4682ba" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7bc65e1b-6577-4d6c-a653-edfefbfa11d7" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="05db8659-ba22-4791-8d24-c21de9175a93">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="2762d8f2-9bd4-4ccf-b7c2-21dd923a31bc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="d1a275e8-df5c-4d6f-81d5-86847f945cc3" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="db368924-1c5a-432c-ab9e-29825a512288" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="7b5d513d-cb38-4e0c-b061-9e73a2fa3094">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b6e49ac7-50a3-4fe0-afac-e6b16d978072" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2a355713-63a5-4811-a177-f48d40552de9" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="7e74474c-431c-4027-8e60-771d2cf14157">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="d0b70f37-c615-43cd-a4ea-f2f68fbdb6d9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="fddf4ec1-efee-48d2-b04e-bf225898cf2b" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="fb77002a-81a0-4773-ad7f-df25e0eb6f07" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="27593839-c2dd-454b-98ad-f74d996b5269">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="9589b831-0380-4dcb-a527-9668a42c6985">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="51b2acbe-e6ea-40ee-b255-9244f3e29631">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="052654b2-4de1-49d1-8845-84c316517014">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3561cd54-0a6c-4260-ae33-017ee373ffc3" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="653c8fa5-091a-44a4-8f11-1d2863bdbbeb" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="0f383bda-03c5-4830-82df-ee0addf5845e">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="d3f63cfc-6e3c-4cfe-b6cf-8dfe4fd69599">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="8cc2376d-8bb3-4139-afa7-8f76272e2735">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="d13ba58f-f46b-4341-b9b9-fba1a5daed86">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c0d567c7-bc4f-41b0-a662-4820f2549520" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="240c91a9-a0a0-4022-8f39-1d72b8e8ca50" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="cd34d0f4-3eaa-46ae-9918-53d4d0f6c40b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="a4c5952d-6833-4648-ba43-691869733c1f">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="a41ae1bf-faca-4810-bce3-f2f6ec3b0801">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="4fe50d11-2e33-44d4-b04b-65169e46fab9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="1e9b68ac-259b-48ae-b32c-5cf8a9bbe9f0" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="93136199-043d-437b-8c0f-d75ad62da2c9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="138e8cfa-e702-4037-8f61-e43f33eab52e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="629eb09b-9a09-4a0a-ba80-eef2a4de81eb" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="15a0475f-2566-41ab-85a0-fe6322a43c0c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="f8bbc064-5b37-4c4d-8283-821d1c697d13">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f3de1474-8e61-4e53-a93a-2ddef51137dc" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0fedc94c-f8b4-4543-a1ed-6a97b351c7ae" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_Receiver_ServiceProvider_Empty" id="657a561d-0bd3-4cfc-8e07-e235069edc19">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_Receiver_ServiceProvider_Empty" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider></serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="79f076f5-1138-48f7-8d11-aabf7e3f7970">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c5305829-e528-4897-9c18-ed14e3d619f2" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="649a1a84-c94e-420c-93e4-3691d0c7b90b" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3ff9b13d-a2df-4f0f-b0d8-40baaa8aa5c7" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="3ce2c924-4fd6-4dbc-af79-865b1f420ee3">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="a37af5a7-437e-40a9-bbe1-afdcceb971a5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="3e5096b8-885c-45ac-8e10-7fd1682c1c67" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e5107593-b88e-4916-8d48-29c041f1256c" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="8514a5fa-8d35-40b6-9dc9-32e3364e3e7d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*is not facet-valid with respect to minLength '3' for type 'serviceproviderid'*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b00b5646-65e4-4f06-8031-ff1b2fb080fb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="669b3226-204f-46b4-8b55-4303a5c7a824" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="08f4d82c-09dd-4590-ad94-83d17ca57f26">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="9904109e-2997-4f71-9e98-1e135baadaa1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0c632a84-7d9a-45cb-9a04-2183d1df3be5" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="535a9173-c19e-4fb1-9f79-9dfd92178eb7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A1.12 receiver NO empty_CTP" searchProperties="true" id="22c8792e-9a4b-4a72-8e69-1ea480b6dafd" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="f3db7f6d-7096-49c0-a680-38ac62d719c2">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="c953533a-d4a8-4ba0-8364-f65f29140605">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="bec002dd-1fd4-4fc6-bbe5-5c1940ed4297" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e493b1d1-7abd-45a3-8f87-e9a281eed050" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c78046f8-e37b-4d4b-9a00-a4b52cdfa7fd" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="99e3d756-fed5-411c-9857-762e78e0eec5">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="14a8ea26-5eac-41f7-adba-8a5a9d71c892">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="02d827b3-0645-4096-83ae-9ed81d9f08e7" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="6e4ecafc-81e9-4b6a-b281-62e5bde19acc" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="77abc1f9-2d6b-4728-95d3-cb9b17f8249e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="16131438-3363-43eb-a169-a4cefc9fea3b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4e802b08-16b8-47d2-b271-705db23cf329" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="3f59f81b-9d24-430b-ad2d-5ff1a059a05d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="b1cfa75c-8225-4fda-b619-142339427583">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="6f8532d6-02a6-415a-979b-5434c5bc5f12" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="950684fd-b24b-4c02-b28c-1ae4815ce44b" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="13ded80b-617b-43d8-9c7b-475139a7b5dd">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="1e038303-53a3-4cb8-b35b-2331e040a851">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="2ca56c9f-ef48-401a-8f34-1e2b0c2cfe5a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="16abdb32-1f09-4afa-861a-63971bcd7990">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9bff7210-b054-4815-9250-67b12c1e06c6" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f918e61b-53fc-49c7-aace-cb7857523020" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="a201a983-be64-46b6-a5d9-45f73a3c7815">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="e8c53003-6ba1-4ee5-84f5-0eed005ca759">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="7fb65d3f-47cd-4a2c-a1de-54d86061110b">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="5adf0b2c-dd92-41ac-900d-170af8e9aaae">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5be91d50-2192-434a-a38e-96e19863f055" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5481bdb6-b627-4955-a41a-2adb23d1da67" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d28bffb8-251f-47d1-aab0-311d5e737877" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="b34b1902-6f72-4cee-9f9b-c663f8539ece">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="089c9ef9-e29f-46c6-a949-e1c107b0a828">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="71efcef6-91a3-49f4-8384-b6e671df29fa" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="833e875b-736a-478a-815d-1d9263e802a7" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="1fc0d40e-46eb-4975-8c35-2d5cd9f97094">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="cd8f28e9-4207-4515-b90a-6f24ab4ff3bc" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e357f142-5d09-42ab-bfa0-b2bdf8f19de2" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="07876f84-ef92-4b64-a2ee-a62b8a30d018">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="e474f340-a74a-49ac-a5e8-e52053223d49">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f9a1ca04-b6fe-4c20-90b0-0e31b62382b0" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="010a9c29-5350-4946-85ed-49c68936a965" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_Receiver_NetworkOperator_Empty" id="8b22971a-868f-4238-968f-fdf156968672">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_Receiver_NetworkOperator_Empty" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator></networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="48aac689-ffb0-4f43-b22a-96b9accef031">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="47785c31-aaa6-46bb-9113-4b843c283fd4" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="38a59cc5-6eab-46e9-9065-c74ac50c3563" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="77ba5b7b-67a8-45a9-b6de-d12021873c1a" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="08c009d5-090d-4fc3-a3bb-508f8369e6e6">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="8008f58b-e57e-4483-ae36-a75640f567d2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="079ec7c7-8ca1-4a07-9c3b-7f3ae53fc033" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="aedb9af3-cfa1-4c8a-8035-f3edc2e0fbe7" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="0fb9aadd-ddf5-4a20-9ade-aaa303af35af">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*is not facet-valid with respect to minLength '3' for type 'networkoperatorid'*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c1431c75-6835-4f78-9e71-af2974b5b6a8" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="22989076-1f52-4a0f-906d-56b930f56b3f" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="816f1a2c-1414-41f7-be45-8027e4c5a83e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="88f4a18b-eaaa-40f8-a891-98e25a30986d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="6596b300-b4a8-4c7b-9b4a-e8a96abc5e8a" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="30332494-215f-40a8-a5c8-d2bff6028380">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A1.13 receiver SP incorrect format_CTP" searchProperties="true" id="be3a7fe4-cc14-4233-b10f-d00c10b61e18" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="eb4c37ec-a5f9-4943-8600-1953d62e5d99">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="0eebd964-1d1e-4ec8-ab0f-a401ca88847e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="fffa64cd-b91c-40ec-bca2-45b938725585" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a9b3e3d4-a26a-4685-ae1d-b69ab0a6dec0" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fc10caf7-8798-4a07-bfac-a042152dfab8" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="272e22c2-cd28-49e0-ad2a-ab33cc6be743">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="ed48f205-77c1-4bea-9255-4449ef93bfd9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="551f8426-a1c2-43b6-8c56-327f85c8b6bf" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="4e1d57c5-d5dd-4a5c-b6f7-0eac056d85e6" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="9dd324c2-16dc-4d29-8b57-f2b582033b15">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b997e18f-93b7-488d-95ab-933da9e0d735" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f629dba9-5afe-49a1-a969-79ae051e8f49" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="c90ac75e-a433-4e6f-8b1e-a015ec69dd4a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="af5f8d81-d13a-4cc2-b5f5-d03b6fd4c849">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3d7fde58-5ea1-4387-9192-2e425340d753" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="9a3e461b-479f-4885-a263-7f6e117dc1b8" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="25088539-e8c1-4867-b11f-67370e8d75d7">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="250417dd-8882-461c-8db5-e159726dfba2">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="9d5977dc-d4d5-422c-be38-f9420492e7dc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="b5e37a4c-2f52-4367-926a-b8723347aa62">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="26442601-be07-4485-9a78-592543d98eac" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="de47d907-63db-4e9a-862e-748c50e640ee" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="5528ea35-1d5d-4634-8fcf-b11136fb24e2">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="0d03e314-9d49-48b1-b43c-e8ab3bc537a8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="eb28bd9f-ee48-462e-986b-faaf9db78d17">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="ceab168f-3844-4c99-893b-8f02edd76214">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4ac77e12-ca0b-43c2-9a4d-e8397c36169d" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5c0eb9ed-a63b-4bbe-bdff-f2a23cb56cc5" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7e81656f-23a4-407f-9edd-f7bd64cf4a52" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="4006c0d2-d7fa-4bc0-988d-79f8b2ea18ed">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="238843af-acc6-4bf2-8dd4-0e23572ab2a9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="09bdeff4-57f0-45cd-9ee1-671a3587db81" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a6ac7af8-2e24-464e-a207-1feb9350452a" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="b259aed2-3db5-4223-9423-41b049014180">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="83dcc00d-44fa-4177-b111-464667b6d551" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b896ca5c-e95a-4620-a224-314400ae6fd7" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="bd957ff2-a99b-4678-a102-4c486bbd8946">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="58a3bfb1-f27e-4c54-855c-bfb49fea7b52">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7c8941b9-0c8f-4de1-85db-87e8e505febc" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d207351f-8f8c-46eb-8dc2-4c65277b190c" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_Receiver_ServiceProvider_IncorrectFormat" id="8706b185-9354-439d-977e-e8a16af07765">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_Receiver_ServiceProvider_IncorrectFormat" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>#${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="dc287d10-8377-4bfe-8b8c-c1c2af01a611">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e42241f1-dafc-4c0d-abef-f3805f4331b5" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="375ccc85-a97d-4c82-a0c7-62475bebd709" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1eb3de50-ba0b-47fd-b6af-8761c7fdf9b8" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="3dce9275-8272-4eba-84e8-ee7ea1c16a2a">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="495b8648-491b-42d4-8c23-e96d87005626">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="ed742f78-9242-4673-957a-5cadf2e4154f" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="7542b504-6541-4d4d-840c-ab6e91669473" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="0d2a60d6-bf8b-4e76-a8fa-50312305ea18">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*is not facet-valid with respect to pattern '[A-Z0-9]{0,}' for type 'serviceproviderid'*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a588e6be-e7f7-4266-81e4-550b6f38d560" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="151bb56e-0504-4afd-8ba2-c1b2abd74e87" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="3663c0eb-f0b3-442e-8b21-dca02191fa98">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="7b88d10d-55c2-4af0-aa7b-3e0f0feee715">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d90dc6e6-4ccd-48f0-bacb-6ce6309c3ef2" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="789f1aff-caea-40d5-a271-f1ddf0be059a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A1.14 receiver NO incorrect format_CTP" searchProperties="true" id="251defdf-ac21-4d63-b9ac-409cedd4bdf5" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="03d4422b-330f-411c-bd51-5b8e79197690">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="c2fd07fa-017d-4f6b-b390-4c2f7307e618">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="31d0e902-d975-4048-bd1b-26b23d141a89" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="acc74704-1e44-4c14-8d1f-6b6ec20b1ffd" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="08ab1b9b-92aa-494a-ad41-aaaa7ca6fe1b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="b96d6dba-19d3-48a2-bf78-af8ed6c5966c">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="aed873e9-b026-4c21-afbc-8d839f106f4c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="52ea5c99-b545-4cf7-8ebe-28a37e25b85f" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="72620df0-d88e-43a5-8e48-71565f7379ef" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="43aaa168-59d2-48f3-8c58-2778e3328791">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f531cd5c-b59b-4276-9491-73074ca30812" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4cd7cb8f-2906-4e2f-9938-1bf93d427be9" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="a7a4bdc7-0656-4d07-90a4-a3c33c9c62bc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="1a35c45b-bfd0-41dc-8aa5-6eb3f9b7f769">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="10a948bb-00d7-4616-af0f-a555b99fcf0b" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8ab5e09a-9885-4474-a7d8-8e72c9c9ca26" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="0dcff57e-26e8-4769-ae6e-8ae379e9dc58">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="f0639839-5597-4f74-8fc9-2e98dd60d7ab">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="5af07ca1-03fa-4d81-9553-7c729cba75f3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="7eac760e-bd0b-4b16-85ee-78241c2c4dc1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b1e6e1f0-5df3-433e-9b9c-1d989c904a92" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b37b2752-7a78-45fa-b72e-622b70f9410f" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="d98ed592-b839-457c-84ed-5a95eda660c5">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="d014179c-ce88-4363-83cf-d0a1f6655a8d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="3f05646f-c576-46dd-8511-4198ebfc8d90">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="ca237efc-817b-4fef-9057-748279740a3e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f1550847-1910-4d1e-a777-83a4fb7c5982" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="da138224-5895-4c16-afd8-979e0565ec7a" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3229a3d4-100d-4734-ab4e-e51ceb39a63d" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="4ba2e1d7-2acb-4757-ad1e-45a8cf937e17">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="4d5cbacf-bdfc-414d-aeef-3b3ca5ef79a8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="1d5c2fe7-f35b-4175-ad44-143718fcd835" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f2bfb6b8-af84-453c-90b5-6d3051f982c4" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="765cd986-0154-4424-8037-02ffdf59caec">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a8411c35-9bfb-4a4b-9bee-aea691c6f637" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3a80d132-0804-4c2d-a1aa-83645b692853" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="1fad77c7-bdce-4fd7-9a8f-80b91c99dd3e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="f9638aaa-1ae6-4476-9cb7-9dd9eb1fdcda">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8e8d00c3-516b-4bea-bbce-f5fba57387b5" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="72a0eff6-5a6e-4717-9c1c-0d6557268c98" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_Receiver_NetworkOperator_WrongFormat" id="2f5bc923-c810-49c4-b78e-761945812f09">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_Receiver_NetworkOperator_WrongFormat" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>#${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="f0f765c8-7a93-481f-b502-14d20756e9dd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2994a023-8752-4aa1-94e0-2c76b2d551c4" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e6b75299-ce3a-49ac-83be-d08fc53545fe" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eae5a877-b911-41fa-9497-63ea8d32ef2b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="cbd2d8a4-5e44-4e05-a155-e9ac864c8d0f">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="215bed71-7b50-4961-a4a7-e88ed291d32b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="2ae90656-b4ef-4adb-b618-b5cf9cbfa87b" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8511cbcc-d1dc-4be4-9f15-370ce3e040c3" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="ea0e7f78-fbb6-4cb8-9908-6e5dcf8ab05b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*is not facet-valid with respect to pattern '[A-Z0-9]{0,}' for type 'networkoperatorid'*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="211e76d4-c72c-4e3b-b254-5eb2cf19378f" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="61357df1-323d-4e44-b9be-b8cdbc50f549" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="aca75087-2798-4ae7-80e7-8238652a43be">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="3f8d7a05-d42c-447f-bff6-2419616807bd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="59e367b4-7b33-49b6-a5f6-2d1eb042d194" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="3f6f1dbe-3382-4e39-91bb-3ed17c7391aa">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A1.15 empty messageid_CTP" searchProperties="true" id="590e91e5-0aad-4dd9-b5b6-bdfc99c7254a" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="af88eeed-96c0-4a3e-a455-a08af3e10bb4">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="0402b159-e41a-4b46-87dd-3a4616f1e185">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="108d6fa9-89a0-4efd-aa66-4b422a75d6bb" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2570da95-73aa-44dc-ac24-87eb153862ef" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c0ca4b9d-e28d-40a8-a4b1-4896aa2a262e" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="0e5c1db7-deb9-4a07-96fd-83e621433e4e">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="bf80f455-1c75-467b-ac3f-c69d48e29011">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="510d1b5f-9acf-4bb4-84af-24922699aa31" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="86f2291f-0d72-4e58-bf0e-249e0496796b" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="dbd12e93-d6b0-48dd-96a5-9ec50cc88071">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4947c358-cfcb-48a9-9e9e-ba99f66cd196" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="887ffc60-ac0e-4be3-8d2c-a4442354e175" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="a9deeeac-2e4f-4a13-96d9-e2b295452b06">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="82613cf1-e562-4679-a7ed-af75d575894a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="52ac75a0-84ee-4cd2-9810-b791f56a1b9a" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="9a79f168-e0be-4bb9-8211-0477656ed469" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="07a0fd62-2220-466c-ae66-5c82d6c30947">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="2dbff81a-298a-4dab-a44e-d4b33009735b">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="74760d67-0d64-4070-9217-1a20baae16ee">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="d09e895f-575d-4947-8f4e-b604e6943250">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a2f9867b-1e96-4580-868d-da7a083128a9" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e3d4633b-3d6d-4501-a53e-895bfd29ffd7" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="086f74d7-d155-4bb6-b21d-a9ef68cf2078">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="46e3709a-55ec-4f26-90b8-a26b7a76fd08">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="ecf0af3a-8061-4151-be96-9e58fdd00a66">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="7c6e7547-b2fb-42ca-8ab2-73736294f4d2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c5d0f8e1-1ffc-4571-9d09-572a034553d9" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e60e71f0-1033-43c0-9c32-36db63878a4a" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="18bab06e-9da5-422e-bb3a-3f3ca838bf40" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="3fb55d89-d117-485d-9502-f03f48802de4">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="81b29678-f9da-48b9-b4c0-088193187ef8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="8cd6758f-08a0-4da7-95b0-a94f67b91d14" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f78dd497-1047-4b1b-8af5-c1d56bdbf44e" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="6b90517f-a9d1-4667-bd93-5d80bccf29ca">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8eb41e9c-61e4-434d-ac14-cd7ca3f97d51" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="87df54aa-bcc5-4beb-810d-ac60b123af7e" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="24931f43-4c0b-4791-aff0-16b590b672df">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="e58a93a3-c926-47ca-8bc3-79525baf7ed2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="436cb418-3d33-4757-b248-4c2a83e51466" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1e6db88a-8c1e-46e5-ab92-8aac43fae2b4" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_MessageID_Empty" id="6d81b029-ca4e-4144-9de1-b048a56c87ee">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_MessageID_Empty" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid></messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="622b8b50-1f15-4198-a605-0236db472b69">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="501b5e38-72b7-4f68-99d2-1db33b24ba93" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7cf81806-5460-4454-83e7-be980a0a7633" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="da62f1dd-5e05-4b17-9b7c-101d21435b61" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="682beb4a-c210-4343-b2ac-d322216d58f7">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="f35da923-0c8d-4c7a-9fd0-cf1f56efcacc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c10ef526-bf6f-4528-ad02-c86f6226f024" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a482f6a3-244a-4f6c-963e-1757d6d0a9e3" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="7720f396-3a67-4c6d-b4b2-0a9004104646">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*is not facet-valid with respect to minLength '1' for type 'messageid'*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="915ce1cd-7270-49fd-9b11-b62f41b003fe" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="042d3c02-0515-4ac5-9630-ac642bfc6049" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="348a7ab1-297d-4db7-a326-77844f15c581">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="92d476bb-96ef-42bd-b613-d15f7280a1a9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c56f84e8-a483-4d70-9fa0-825c2ee5512f" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="c0ca97fd-bf08-4930-a074-aa2978c776e0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A1.16 messageid too long_CTP" searchProperties="true" id="f423ff97-6825-4a49-8d2f-575a51717e60" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="3d6df191-8a9f-4f64-95de-cf7d7ba7aba6">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="35f78853-2a6b-4d4d-ab71-8353963ca98c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="48399003-df2b-456e-b3a6-14ddaac4906d" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1460dd1a-649e-42be-90e4-4439b86cc235" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ad8b0227-8c58-478d-88ee-eb3301d5a411" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="f0c41be3-e31e-4f87-a31c-58ad189a58bd">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="822d5879-b6d9-4b0c-8e5c-7b9d3c2fdec7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="4680beeb-354e-4c59-b057-da77d8c60ad1" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="7bcd5e5e-da90-411d-aa40-5201b7863937" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="04297cdb-4e70-4fc9-8eb3-ed54f97c0313">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7d3230c9-d3c6-491a-92bc-f0cf4810951d" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5baa237c-a03b-4078-af13-3a92a8c96486" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="dfcf1fbe-7d97-4bc5-8c91-86a2c9f4d082">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="82584627-f3cd-4b6b-8a7e-7c4bb50f8a5b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="27a5baa6-a0d3-4746-be82-b2691b2dfa3c" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="ba6c20fc-2f64-4eaf-add3-6fbf5705f6f3" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="d81e863a-ffce-4827-81f0-4930b2d9a2ef">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="9a1c0174-dd07-47e8-89c9-1acfac4c337a">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="a48794a7-8340-4512-81c9-81aa64f40d4c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="8a90789e-2f7d-4243-b287-d808031ee132">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a3308b6d-8409-4d7a-8399-e3deee89dddf" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ab8d4cd1-1c0e-4e99-b465-22ee35d84607" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="2c079c89-b722-4761-bfb7-83fb33cc3cb4">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="887bbf15-5edf-4439-b69a-79946af46062">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="4e85c722-ab88-41d3-8db3-023559e6ae0a">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="23c37702-cf00-4b67-94e5-b2371a677036">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1af78a11-506b-49d2-9257-fc65471744cd" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f6a021a2-a6cc-45fb-ae1f-354461bd508e" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="345cf154-e618-4b48-bb4f-0ae46dfbbdd9" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="e1052cdb-edfd-41ed-9617-f1ecb697aa19">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="8f85243d-cf45-4796-8ff4-b4108f94ad48">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="f97dbe9d-b817-40b7-831e-c559b6ccbccc" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d11d32e8-189a-404e-abee-a9787a36e814" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="c0dd48cb-219b-402f-abdd-eacff77a68b1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8eb87373-728b-4e99-8381-31ffe56d76e5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="92b32c72-0f2b-4cf2-8976-1f19a0e0f987" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="a2c3b121-e6b4-43dc-85fb-39dda1849680">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="2718aa00-5886-4c43-9bc6-f1e9ca908848">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="668846d5-09b9-4722-bf88-fe8b75aba9c0" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="930a1a85-84c1-4180-8b41-efcc907e91d8" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_MessageID_TooLong" id="9a990126-c42d-41c1-a3bc-d951b644ba12">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_MessageID_TooLong" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractid}-01abcdefghijklmnopqrstuvwxyz</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="d8945483-be50-45d9-9d26-754dcadbe4e0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="41a7f6c7-d0f1-4646-be16-55d438b8a60e" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="239894e6-bc38-48a5-bf7a-1ba15a266520" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9356b91b-f8ea-4f1c-b4c6-d2f83807bbd0" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="bd1cf657-74f5-49ce-948d-a01307d6f8dc">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="96c2fc46-9d1f-4f12-9c6f-d9696610f76f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="2d5b1a94-b094-4f55-9486-48e927135af7" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e330a6f1-058b-44a0-af6b-2dff0bb5a958" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="a7debae3-f7cc-4a3f-8b75-b79797278267">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*is not facet-valid with respect to maxLength '26' for type 'messageid'*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e56c2e34-2e44-4e0d-8f92-b970f025a5c2" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="381eacc5-f212-4c96-b31d-5fe0ae841833" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="5e06deda-835d-4099-8490-45c9fb056d6c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="2529c7c8-40dc-4cf0-a23c-32fa5cc92112">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="5f1df3a5-f4ae-4004-bf32-cdf421c120f6" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="93bab1bc-0231-481b-9c64-e05306ced5e8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A1.17 missing timestamp_CTP" searchProperties="true" id="0ba32eeb-3adc-481b-913f-eb64b63115a9" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="30b6c4aa-0c37-426d-b356-8206d235b8d8">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="e096acbe-b6c5-4dc8-b982-eaf17aa97c7b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c7a91de6-fe23-4474-a336-61b1f6481957" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c1a085d7-aa90-485e-9121-85b0b661119c" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0dca76b9-b4c5-4b09-a192-b81b7a145bff" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="a3fefb26-df93-4f85-bd77-e4dbf31012a5">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="9b5ea33c-73bd-47cc-8fbe-fc25133d01c0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5dd6fcc1-a9fb-492c-8afe-0bb260a72f08" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0d0698c6-3c69-43cf-8c13-019cfd6b1833" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="ddc2882f-a5e5-4d8e-ab41-6cf9a40e3cfd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4cfcb7bd-8667-4362-a972-add4977cff0a" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="094f7d36-fc01-4a35-b465-7121cf9ce8f5" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="38d7deac-f96c-41b0-9eec-dcda435102ae">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="cf6a7d67-72e1-4863-931b-1431a4cf0a6f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ca89c527-bc4c-44d7-a51b-fd28c3553bee" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="3669660f-f877-4562-ab20-1c62e9425e57" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="ea6862db-da4b-4f1b-b620-88d43a12365a">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="c05e34ce-35b8-4a37-b461-8b71cc0ea448">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="33f88d71-1da8-4475-a83f-67b1e38a750e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="19920a9e-8440-4d55-87ab-1d964dfbeab2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="84365489-9f3a-4f4b-a3f3-8959a4233914" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ec3e91ee-8f42-4e96-8d5c-2e48016f967b" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="962b2e63-6706-40cf-93fb-388d44e92fde">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="75547c74-b387-49cd-9dd7-807a6da34118">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="663d1a15-af78-44bc-93b9-e0136efea6a3">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="4a8d80a7-25e9-4b56-893d-4cc6632496af">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e3d29ad4-1cf2-45ce-809a-2cf31ec9eaa2" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="dcb99af9-373a-4142-8ebb-cb42d993c408" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ff839475-6861-4206-94be-d47a82e80612" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="6431caeb-6ad2-4373-8d51-88e58ffcf312">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="54d20fb8-425c-4ac8-a28b-55f0b4494d78">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="e29a3846-3249-46e1-a8a6-99b28ff1a08c" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="512a76e5-3cf0-4c5e-987c-0270d4c077dc" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="06eb26ca-312c-4206-8243-f5b18ec63592">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8937899d-7fc0-4202-afe3-db55c1e8b68d" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0dfb6d70-7961-487d-af33-2451e47213ec" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="f3a9fb80-dab6-41df-8b1c-5b0377fd0ca7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="6b9215f6-c4e5-4962-8926-1c600a92f33a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="08f8c205-f123-4505-9d4d-51de02bdf072" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a3bd9a02-bf60-4105-8bb0-0ba882eeab0a" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_TimeStamp_Missing" id="f310ac93-fad7-4f53-a646-43ef65f54d22">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_TimeStamp_Missing" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>

</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="171eca65-c87a-4192-a98e-24017841ec5a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="605a747d-d95d-468f-9788-e1ead9bdde03" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ba93e7a9-e648-4b53-820f-92da8caffc3e" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3c389d15-3aa4-4431-83bc-1fab1a89cc57" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="f891657e-c4eb-4bd8-9de1-b1d8add53ee2">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="73a3ba04-8713-4537-889c-546869aa9147">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="747207dd-8de7-47e1-be22-44a5722f0d8c" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="301679e8-100e-4988-8e59-6bcd3a0fc1f2" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="16b9eb74-e63b-4f4d-81d3-4deab7fde85d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*One of '{"http://www.coin.nl/Overstappen_MESSAGES":timestamp}' is expected*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="11c124c0-25ff-447c-b231-4966aaa13d18" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="aa941acc-cd1d-4a1c-85f9-b5f20313d93a" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="760577ba-1ca3-42dc-8f92-f1bc9626102c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="1826e953-d30e-41b5-924f-c47de775e4b5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="482f7357-e72f-4564-83da-f9db22c719b8" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="16fbb4e3-6e95-485f-83dd-a873dcb13de9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A1.18 empty timestamp_CTP" searchProperties="true" id="cd4d44f0-6084-4218-8b7b-8dcd8cb27710" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="7e0c7169-755f-45c5-9ec1-836cbda842d8">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="f90bf606-a81b-49d4-885c-4d96acaa9d29">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8552cafc-62a4-4ba1-90e3-0b9a47bfc7f0" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="efa7e21e-2c86-4a4c-80be-547bd54a60c0" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="124a7052-4ab2-4e1d-a24a-0c5d46b65bed" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="07079214-1b99-4a95-ab29-cd0ebadcde2d">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="2e7e1a45-89f3-496a-b8e0-6b80d59ad186">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5738493b-07c4-47c0-ade5-136f49f4cb2e" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="25c83670-891f-4b52-8ae6-9ce00c4da948" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="6d952fd4-61b4-47ed-919a-42fc79e60319">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="90855800-397f-48f6-817d-81065ff5a858" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="65331a20-a280-413b-a654-801ee1c2801a" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="d2d8a5ab-70bf-4719-b768-96e590b73721">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="f80fb2c5-19ce-40fd-881e-06c54ae1c5c3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="dcb7689c-0229-47a0-bd98-8fa471d7c849" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="50ee2695-c163-444f-9a35-7bce3eb0a800" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="24736c9b-4a79-4ab0-857c-8f747ba1aab9">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="abd325a6-5a15-46c8-a31b-b248e232cfff">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="daaf8145-dcf5-491c-9355-2a5d04e3c803">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="8e18ace4-f849-4cee-a5dd-d6b3236f8599">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1b2efa61-f26c-40e0-888c-d1dc82ccbf74" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="595c2527-2d2b-4790-a510-c04a8a3e2eed" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="a2636f83-3298-4da8-8e90-d84a2827c9e6">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="522f0054-236d-48c9-b4a5-4f2fbdb54301">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="5b8fd79b-4cf8-4ff2-91d5-3b9e2a56a804">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="8db9e697-71a5-4852-9125-c54247dabf23">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7863f406-c14c-435c-8879-ae8cf39f8ab1" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="157b3bc9-1b5e-43bd-ac3f-d75c7551cb59" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="09effe56-e48e-4a56-a193-5826228903de" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="4099bef5-2edd-4dd5-bffa-312805f44aff">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="3cc1b859-cecb-4ab2-88e4-2e19abb1ced9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="359d09ff-dfc6-4e1b-bc59-cc65500f1bff" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e00f0039-f9a2-40f9-8a07-2ad3d1ef16d0" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="1af20678-b9f5-46a9-a05a-92fd3c576f94">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eceb1114-ed28-4aae-bf43-3d686ad662a7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9819d69e-e513-44f9-986f-565781db99d2" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="7d457f07-f328-48dc-8c95-67deba2dc04f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="d27dcfb0-961d-4e02-95b8-206f3b57792e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9d1cecdc-c4d1-4694-a86c-a43b30ac47b6" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="66a8cac2-0175-40a5-a9c4-d5dbb038ac1e" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_TimeStamp_Empty" id="44e6d7a0-b8a6-4f43-8d68-3da5f55b0667">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_TimeStamp_Empty" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp></timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="6952d966-c704-4bc4-bb52-6608d700ccb4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="be9dfc9f-ef59-4db7-ae0f-008a2e8cf83b" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b5def7da-24fa-46bf-be02-e377d779f1fd" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="72c259ae-910c-48cd-a28b-4de422222117" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="dc747c33-13fb-428f-9809-f41243826510">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="e78c9838-ef75-4b12-863c-47b8d521c830">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="b6113f93-9f27-45ed-9fec-d1ec07f0f8d6" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="659d7cdf-74cb-4c12-94b0-8f5068737c2c" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="5af2d97b-12ca-43be-b8ed-df191a1b77ae">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*is not facet-valid with respect to pattern '\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d' for type 'standarddatetime'*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="786ea7c3-7aea-47fe-99e1-2358ca60b7f3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9b97f31d-60ee-46c2-9259-85f471ce567d" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="3cb3bb5c-7a29-4b96-8951-91af93417849">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="bc6db2d6-8089-43d1-b07c-8fce71d9d203">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="079426c6-bb43-42f7-8984-25d33b81e9cc" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="8fe03a0a-d623-4437-8214-38e64ad2a705">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A1.19 timestamp incorrect format_CTP" searchProperties="true" id="13908f45-a534-40ef-8b19-62b2e577527d" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="d523938a-ff85-4089-a485-fe06954e388b">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="c652df5f-e80f-4499-842f-933b002cf9dd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0a8f450a-02b7-4f3a-91ce-ec65708ae48e" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="08d65abf-ed3c-4ebf-8d7d-03b5a914f18c" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="89d70b8a-e4c5-4173-8827-a1baa3c547ec" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="74636274-3dc6-47a2-a6e1-2cd5d60c496b">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="34d72f88-f30d-4a01-b618-d558f60cd9f6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="41d5b1fd-5082-468c-bf53-ec8a003a3ba0" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e1041c61-cfe3-4da8-ad9e-1fdd1e5914f4" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="ae817c54-6602-4ffe-ad6c-0ad4d2fb0773">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="89b83953-a15b-4a41-828d-d2988d56ffe4" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2e43acde-7c69-43c7-bfea-2d578d14dacf" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="0b0385cf-111d-4d47-925f-7a8e13af9529">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="a35f14e0-f9de-45e1-9a2d-2a32784023bc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d56cc2df-8cdc-48ba-bb8c-076f16d65b64" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="076a4262-7cf7-455c-be33-8e28e0b4bbf7" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="eb5dba41-39da-473f-a136-d645f1a6c755">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="2185a162-4427-4b5c-ad7f-36863a12e850">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="4f915b11-68fc-4adb-83b7-c06d48e58521">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="5ae7101a-1807-4215-ba50-4a0ff5ab41d0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5b84fa36-d5aa-46e3-b0aa-49eaa2de305c" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d6d1d6aa-a361-42c7-b1b9-bfe74f05a839" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="58ca3973-0182-4849-be75-bc665ad324cc">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="5e184f9e-7e18-4024-ab62-f9a1a33e60aa">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="1bb3c6dd-c622-4dbb-b507-df17132f27e1">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="a837173b-8fe6-44db-bb00-5a5afef904ad">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9a48b429-0be8-4535-bed3-9e57ef8246d2" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c1a14317-675d-4b25-9f5f-724edef3f600" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ab1ac3aa-0f9a-4684-956a-e81d8fbc0b08" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="f895bde4-6c8e-4e3e-aa89-84ea0e0a6e6f">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="e8bbb3d7-10b5-48f2-9b37-abd1ae315550">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="11929672-01fa-4b34-b2ab-77271e0c8a51" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="b3dd1e4a-be0a-4a2c-9df5-c566777fe1a9" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="729dde71-430b-42fa-a5fe-8fe5ddceb4ad">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2e967883-602a-4aed-9378-12abf940c300" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb656592-8ed2-49a8-92a4-0413d8dbe0a0" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="5bd299d2-60e4-4aa2-813d-838915297e9d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="a7f88c6a-7d41-43e3-823b-ae566a86d0b4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7bc2560f-f5bb-414c-959c-03e0c0790d91" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4f95def4-1402-488d-943d-8f069d2767a3" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_TimeStamp_WrongFormat" id="16ec360e-0847-4d2c-9010-a1bcb1eaaddd">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_TimeStamp_WrongFormat" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-01</messageid>
<timestamp>${#TestCase#Now}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="539ca737-5d7c-46ac-9022-ea51fbf5249c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8f5cdb5e-4431-47fd-8146-5eb6f0ff586d" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ecc5d435-466b-42ea-9b2d-9ac1f02aface" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fe375705-be84-4b3d-8e0a-312f4f1c11fa" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="ee51dd2b-2a43-4cad-a71b-6a66adeb15cc">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="a86e45b4-3ad1-4c10-a949-5363d9dce7f2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c270c20f-f9b7-4eca-a1ad-18bdb891d92f" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c415f81e-7645-42c9-8b89-46a3cca93e7f" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="0c0b5708-8cfb-47da-ba4c-e61232855fda">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*is not facet-valid with respect to pattern '\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d' for type 'standarddatetime'*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2758937b-4154-4266-a544-ea3f0c3302da" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8d312585-290d-4935-9eb0-e497f1ae53eb" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="0bb894ec-cd0e-4291-98dc-06b869322b1b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="88a34efa-e639-4b62-b0b5-516b3bd62092">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="209370e0-5a80-4229-950d-a7ed7b6b805f" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="bcdb654f-2cd4-4527-b35f-d033e7da9682">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFX%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:properties>
      <con:property>
        <con:name>MaxDays</con:name>
        <con:value>90</con:value>
      </con:property>
      <con:property>
        <con:name>MinDays</con:name>
        <con:value>0</con:value>
      </con:property>
      <con:property>
        <con:name>PollTime</con:name>
        <con:value>5000</con:value>
      </con:property>
      <con:property>
        <con:name>TimestampNOW</con:name>
        <con:value>${=String.format('%tFT%&lt;tT', new Date())}</con:value>
      </con:property>
      <con:property>
        <con:name>LineNumber</con:name>
        <con:value>0</con:value>
      </con:property>
      <con:property>
        <con:name>testdatafile</con:name>
        <con:value>rainyday.csv</con:value>
      </con:property>
      <con:property>
        <con:name>browser</con:name>
        <con:value>firefox</con:value>
      </con:property>
    </con:properties>
    <con:setupScript>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
import org.apache.commons.lang.RandomStringUtils
import groovy.time.TimeCategory
import nl.coin.Selenium.*;
def directory = groovyUtils.projectPath + "/"
System.setProperty("projectfiledir", directory)
def seleniumHandle = new SeleniumActions();
def funcHandle = new ReadymadeFunctions();
def Line = funcHandle.getTestDataAndIncreaseLinenumber(testSuite, directory);
//Split the first line into a string array and assign the array elements to various test case properties
String[] propData = Line.split(";")
funcHandle.setRecipientAndDonorSoapCredentials(seleniumHandle, testSuite, directory, propData[0], propData[1]);
testSuite.setPropertyValue("soapVersion",propData[2])
testSuite.setPropertyValue("dossierType",propData[3])
testSuite.setPropertyValue("compensationOK",propData[4])
import groovy.sql.Sql;
def  con = funcHandle.createDBConObject(testSuite);
def recepientDetails = funcHandle.setProperty4mDB(testSuite, con, "select spr_code, it_interface_type,business_gui_only from overstappen.service_provider inner join overstappen.interface_type on service_provider.spr_request_it_id = interface_type.id where service_provider.spr_code = '"+ propData[0]+"'", ["business_gui_only", "it_interface_type"] as String[], ["recipientbgo", "recipientif"] as String[]);
def donorDetails = funcHandle.setProperty4mDB(testSuite, con, "select spr_code, it_interface_type,business_gui_only from overstappen.service_provider inner join overstappen.interface_type on service_provider.spr_request_it_id = interface_type.id where service_provider.spr_code = '"+ propData[1]+"'", ["business_gui_only", "it_interface_type"] as String[], ["donorbgo", "donorif"] as String[]);
testSuite.setPropertyValue( "businessGuiOnly" , donorDetails[0])
def donorsoap = funcHandle.getDonorSoapVersionS2SAndSetProperty(testSuite, donorDetails[1], propData[3], "donorSoapVersion");
def donorbusiness = funcHandle.getDonorDossierTypeS2SAndSetProperty(testSuite, donorDetails[1], propData[3], "donorDossierType");
def donorMessage = funcHandle.getMessageTypeAndSetProperty(testSuite, donorDetails[1], propData[3], donorDetails[0], "donorMessage");
funcHandle.setProperty4mDB(testSuite, con, "select id from overstappen.service_provider where spr_code='"+ propData[0]+"'", "id", "recipientId")
funcHandle.setProperty4mDB(testSuite, con, "select id from overstappen.service_provider where spr_code='"+ propData[1]+"'", "id", "donorId");
funcHandle.getOutgoingMsgTypeAndSetProperty(testSuite, propData[3], recepientDetails[0], recepientDetails[1], "donorOutMsg");
funcHandle.getOutgoingMsgTypeAndSetProperty(testSuite, propData[3], donorDetails[0], donorDetails[1], "recipientOutMsg");
con.close()</con:setupScript>
    <con:reportParameters/>
  </con:testSuite>
  <con:testSuite name="3.1.1_RainyDay-XSD_Validations_CTP_Body" id="7ef19b5e-60b8-45d2-8b82-d1d5707b59b3">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A4.1 missing dossierid_CTP" searchProperties="true" id="1f2efc23-8b03-4f73-8aac-c41214ebd7b7" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="f29f4b34-8c94-48af-9cd8-8d0d6f78e401">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="e57b5823-c19e-4c75-beff-474700a4ab62">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1725ffae-d04f-41a2-8d8a-ced582893598" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8f3dc569-f9c5-4620-93cd-d56a4c6e8084" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1af94936-1ceb-40eb-9271-fc5229d07e5f" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="886a5f4c-010f-4dda-b6fa-57a51e4ea5b9">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="4ecb8e63-c852-4f47-ab0f-bf746a4251df">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="e330d636-588b-4d8a-9a6e-ac976e3e6b45" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0ff1533a-ad21-4878-80e5-f76c044407c3" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="3d5502cc-512e-4709-9376-c4c0ad7781fe">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6d4e7d02-630d-44ed-ae36-7fba74c2d44a" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="367b983b-1130-4980-8d06-addcbfd2a788" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="0aadb184-c026-4229-99ac-11a3bd975753">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="ee70ccbb-a693-4eca-9333-b083fff021f9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8928ae85-cd8f-4d13-a292-311c4761b4f4" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="b0dbde27-2c4a-437a-962a-6eb3154b4422" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="348c94ee-6bd3-4657-945b-c6ba29de6900">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="be1bbd04-91a2-4438-b524-3b13d9f3f873">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="b39c178e-e62d-4f5e-b477-eb4ef6bcb903">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="2e035234-da7a-4a7e-804b-be485640a5a7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3c43f767-cf87-4979-ae1c-6966def6fd15" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eec7b7f9-3b7a-4392-9685-d72ca2114660" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="5447b9e9-f394-48f9-a080-4b2cbcdd4641">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="51a00396-0e72-427d-bc01-fce82749fd63">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="704873e2-0605-4f21-aceb-be9fd8f686cb">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="09d9206b-a11b-4f0d-9aa2-8940f8fa4d26">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3c0db4e5-0b0c-47f1-bf3e-b3ad10f698b1" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3ea8f4e9-b64d-4ffe-a85c-ef0884f85b4a" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ff958618-f5e3-40a4-a509-3173812a7fe8" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="36d7cc82-b8c0-42f2-86eb-e190116c7d79">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="282d1db7-93c6-4899-861e-2d7e619328ba">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="3c70dcd6-f062-4146-8907-bb6712a2d024" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="5afa7da3-cdaa-4da5-a2fa-acfa2ac360d6" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="325df86f-9b10-4b87-862e-7847df5ed2c8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4e42049f-ba02-44d1-b95c-05b5b7f17564" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a995490e-b84a-4110-b0d1-8fe1128f4401" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="dc7ff261-e8fc-4921-a10f-48491a23c793">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="2af56fd0-d8db-403c-b367-d3740c3d39c7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6cea22cc-2675-41ae-8f5e-7a48dece8425" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3eb7f6bc-0899-438c-a5f9-d04ba4dca339" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_MissingDossierID" id="fa8df3b7-0dc2-4774-be8f-46785f50fe27">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_MissingDossierID" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<!-- Missing Dossier ID -->
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="51a1933a-d27a-45dc-9059-d4160df3f37d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7868522b-8fb0-4666-b03f-194045efbb0d" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d05f0eed-4933-4eca-bf54-1a638f5fe045" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="da80657a-c94b-48fb-9adc-2761b1f98136" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="7e94d763-3efd-48e2-8bd3-a8efdb8e3cec">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="dcbe3086-bd20-4c1f-8cf5-e659aa9767a5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="eebb4bc7-c1b0-4527-81d8-82b04ab36cfe" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="5129daba-882f-417c-92c2-c1ddd287a9b0" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="2d9d1d8b-6b9e-4d6e-874b-09c64cca38e7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*One of '{"http://www.coin.nl/Overstappen_MESSAGES":dossierid}' is expected*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3278241b-020e-4aa7-8ac3-c1a3d18c476f" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3854496e-c0bb-4362-aab8-83b1e26ccfd3" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="c960b3bd-4fce-48c8-b932-253c6b88a09a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="ecdbdd29-b448-4ecf-8820-9534a18d998c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="2cb96550-c09d-46c3-b199-9dbef694a657" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="38a59d2c-a2b1-432d-8510-ef0cd8fbf2ee">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A4.2 incorrect dossierid format (mismatch regexp)_CTP" searchProperties="true" id="628c80e6-6383-4106-8545-a7fc2657c024" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="323f648c-0b02-48cb-8b96-08690125aa00">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="d569abc1-a21d-40b0-817c-7b80303fcc3e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c7a1bce2-bb0d-43fe-ab76-4282254c5fb7" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="81d743ef-8340-46c8-863d-50f35a2ef50c" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d3a153af-5094-4164-9369-2b896aa02495" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="1d1ecc04-6350-4fc2-8eb6-ded18956925c">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="bbc8efda-3497-49bb-b6eb-199bc4a37ace">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="4e19004e-7ea7-436b-8268-2bca08ec2a25" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="dee63abd-6467-411e-9875-319b18dcc0cf" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="d9a54a57-21a3-4861-a114-2b6137a4ee4e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6570619b-84c6-4fa0-9f11-969df12f03e6" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b8078059-8f9e-45a3-9d41-a8feccae86c2" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="32656fc4-e111-4484-b04d-81e2564e6728">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="a7c293d7-b5cb-4fc3-a4bd-750012f7b65c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7012ad9d-ace2-4416-89e4-f4e26fd7d866" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="632b3c54-911c-4413-aae2-a84fb3238c98" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="a2fe1e5c-3542-46b1-95fd-929adc67d23e">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="2eef91a6-675b-4fd0-83d2-3d5f1bc19d30">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="5559bb7a-d186-45fc-a461-34b4b178e5e5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="07e060a2-a16a-46c6-a247-775f0a865477">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="bce79807-f280-4e75-8578-83e5a0b06ea2" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a9015e2c-cbf8-4e3a-855d-ef5922cf09b2" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="26a4b621-0312-4667-a0a5-2772c3ea33b6">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="27c5748d-b263-4128-8489-a03049211118">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="340bb107-e479-4a78-8572-3168a49d4227">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="1923823b-a2ae-4292-bfec-a77ec829bcff">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="33ceecc6-bd27-41ea-bfa4-11fb9a2dbf2f" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="49be39f9-01bc-413c-b17e-1224c601d78a" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3311f026-a0e3-4d8d-9429-33e72861c19b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="3172e157-6f61-4e08-bcf0-11275526bfb7">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="9bbbb1a6-4294-413e-be8e-0131d05dd89b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="3e8aa95a-4933-4a6f-bcc2-771781fc5a77" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1945bc9-f403-4b48-899b-c07f7040fb3d" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="f95f8a03-afd1-4fb1-82d1-26100d504524">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="62227217-aff2-425b-8b5b-931a31786e54" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="26c898ff-6246-4ba9-8b61-b80722a45178" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="d6689a57-1412-447a-b71e-dd7bf990a8a0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="5bb45f85-49d4-44ed-8472-104e4a411165">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="15d301c8-de49-41b4-a795-71af69f127cb" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0f4603d4-6ee5-485b-a83d-272086225a99" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_MissingDossierID" id="8c680cfc-9584-4a20-99b7-77e8fa29890c">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_MissingDossierID" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<!-- Doossier ID in wrong format-->
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}_${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="fe18b133-9f36-4eca-909a-542ee41f8b03">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="500b8f35-17be-4da9-9d17-8a68d3a80ae4" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="09d443bc-7f24-45f8-9c42-7a6c12de2ac9" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="78782262-9f5b-4ce2-8cd4-adf4dc874286" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="d06661bf-ad24-4a03-8169-35beccb9c05c">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="cf4f05d5-546a-4740-b799-c6d7c059f3fc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="97d2e354-7fb1-409b-aeed-a1f64fbd7560" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d357ac7f-2f31-427b-a21f-b18c86a757a9" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="2b340a73-eff3-4b2a-a090-a6156da64f46">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*is not facet-valid with respect to pattern '[A-Z0-9]{1,6}-[A-Z0-9]{1,6}-[A-Za-z0-9]{1,22}-[0-9]{1,3}' for type 'dossierid'*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="280a3c31-f1dc-4316-893f-23a1fe152b06" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d9dfe1b2-33d8-4b91-9827-5216106a2436" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="907850fb-a1ca-4a9b-ad65-2b0ad6902946">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="9f0cb1e4-32d2-4e97-9ab0-414dc2cc651c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d8a73339-531e-4986-aad5-725284e43c2f" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="68ae82aa-0ea2-4625-ab69-309d0323a31b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A4.3 dossierid too long (>40)_CTP" searchProperties="true" id="d8596099-ef5e-4ac8-b8fc-35372b36dfc7" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="712cb835-d9c9-4965-8ad8-6ab262373868">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="534449ce-3b45-40a3-8eda-5531882ecc80">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="579e1bae-e177-4cd7-aa63-c9668c254f99" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="58f7f492-a926-4fb6-826b-ae2dfd7283b4" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="52f7ef2a-86c0-49f4-94cb-7c76fa534470" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="b5a063ad-0878-41d0-bd43-92865c212b35">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="13e57fff-7063-410f-b491-609db53a68ee">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="86a4eda8-6cbe-4461-b2cf-73b55268d497" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="5baf2e70-23d4-4d21-a335-a8cc54f30fda" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="89d2665d-7407-4c91-9419-d4d7900820cd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57e71af4-324b-4eb9-8d53-6eab761f926e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b6ea81db-6cab-4507-9457-24a6daf33a3c" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="5dd4feb5-04e9-4ca1-8e91-2715851cdf1c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="06b4de54-5270-4bc7-861a-d9baad3b3c3e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d3d6bf9f-e033-4ff8-9f22-9e3d1f1012c4" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="28fe75fa-cd25-4c01-9c8d-21a83b66eebc" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="f81ce6e2-e5c8-4f3d-836b-dc1c9afaf866">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="072df497-5cbf-46f5-9177-339102e7fe6d">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="5c287a1f-fbab-4831-b8ba-8a76e9675d73">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="747bb7fa-2098-4732-9e89-70dd53004af6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="faf3627e-6380-4d3c-ba4d-48315fceab26" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d303c9c4-3a2d-4f12-92f5-50928172d3c7" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="35e67d66-aa2d-4500-89e1-e18d9fbc29db">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="c38b10be-ed34-45a7-bbe9-f6b9c2ddb352">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="96b8569d-f0f7-498c-ab0b-911e51b1a837">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="15efd5bb-e3be-408e-9ba4-e246c2e431bb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="18943ca6-b998-4e6e-aa8e-f08b99422ee5" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="690a4ee5-3f7a-4b70-a7e1-f24679fc41c4" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f4e0ee91-b5af-4ac7-8fc2-cd6960b78b80" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="32da0773-fb39-4f4a-8075-c82029fc9b30">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="4f8080d7-abfe-4493-a405-3f4cbfe8c631">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="45444de4-f36d-48bd-9743-ea2b39e09bc2" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d6ac7627-f588-4fd7-9bbe-932823c7690f" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="52df0ab4-d73f-4917-90e8-b1245fc9cb3d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="62f4cc28-caa9-44fd-adf4-df32bea3c973" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="cea55adb-05c0-4e85-a5d3-b6ff7c339d27" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="41880ba5-b07c-4073-a140-6a94240734cd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="404ef81d-2bee-47bf-addd-67bf8060920b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9291f117-2527-40fb-90d7-3d6154cacbf3" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="59f368ce-1c57-4bf8-a946-20b3dc9aa419" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_DossierID_TooLong" id="1ea136df-a295-4db8-b62f-3691dfa4745e">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_DossierID_TooLong" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01123456789012345678901234567890</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="44fbb758-36bf-4126-a5af-00675f7ddcc7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4ae5da48-d6d6-4107-837d-13c178342f61" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="73a41678-9120-490c-b8ac-a4bb6bd34955" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="257b2edb-4238-4263-81e3-2a6bb2a74adb" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="9f0daed9-b6aa-4623-83d3-c9fb6e428328">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="15fb7f65-4a79-45f5-990d-1133133a8ac6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="50641711-5654-4529-9add-5210bc3b4eeb" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="32b2ed5a-9cd3-4fc3-a74e-29718851dd29" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="90825ea7-21b7-4b84-84be-cc2b989f014d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*is not facet-valid with respect to pattern '[A-Z0-9]{1,6}-[A-Z0-9]{1,6}-[A-Za-z0-9]{1,22}-[0-9]{1,3}' for type 'dossierid'*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="952d6dc7-0c78-4be0-aaa3-3ce2029a80df" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7e9ba11c-ebff-46b1-98b0-2893de68af38" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="8f37ca4d-723c-42c3-a25f-9bb0577cb88e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="29892c8e-7c00-46b9-a0db-57938648fbac">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="31e2f4a7-2371-4690-ab65-4ac234db16f6" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="5e7d8e86-ea4e-4ba4-80fb-e3775e241533">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A4.4 Dossierid too short (>8)_CTP" searchProperties="true" id="5600d258-be45-431e-a27f-412dab736d6a" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="613d0e2d-f750-4a88-9a81-0e0ac04c79cf">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="f8cff84c-2982-4ab9-99d1-c48e98d9123c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5268bb89-af90-413d-bd92-f1f9013f8341" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3742be67-e0f6-4485-9522-12b775d9fe29" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ef95bfee-9ec7-4098-a1c3-6b3e849485d1" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="c759a799-72d1-4670-a94d-04cb5bd39331">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="abdc9373-156c-4319-957d-2ec3140d3a01">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="279217b4-5d36-45f1-b01a-b556a9262df1" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="57519644-520b-4a6b-bc62-9df8007621d5" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="7f387111-04e8-4620-ae31-c194cb3396eb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e24bc4ee-22a3-41f0-8739-ccbe17a11321" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="36e80803-64f3-442d-9e5e-4930d65ab7b4" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="f414381a-97c8-41b6-a276-51734e7bcc4d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="884b92ee-097b-4118-b105-34c093e634de">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="15d5ddcd-3088-4fde-897d-890206678e48" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="5070fa0d-aaaa-4d88-bbc7-5964dd54a630" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="8a9a6229-c571-412f-95b5-b35b8e7b822d">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="508c1bf2-53f2-40d8-a956-80278fc50eb5">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="7ba342f3-3634-4cbd-b016-1a6bcaaa1699">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="ee978f7d-4ce2-4bf2-b5cf-df65e41364cb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d7f40774-c3d2-48ef-967b-beada97410d5" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="716d22fc-9389-400f-a3b9-76dce1a63a07" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="948caebd-cd1c-46a6-a4f1-d40f2c7051bd">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="7fa79b6a-3ad4-427f-8ac9-24abf75aad45">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="ac9bf050-a334-4915-b541-965ed791b7e1">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="8b436b9b-5601-4ad0-9240-c6b295be8e3f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c62a8f1c-43b0-4519-a5ca-e98dc72db2f5" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8ffdbacc-5fff-40d9-9a5c-a245818b421c" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="02884040-ed32-48a1-a62c-b4e10742158f" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="3e4ce5ae-b2d5-452b-ad3e-1cd181976c5e">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="c0b4ea31-82c6-4c35-880e-27e2481128a2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="09f7df26-b773-490a-840a-6fcbe191dd81" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8bb019b9-4e8a-4052-bcf8-c7b2ee864e91" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="336a8862-46f2-4ec9-9fbf-aad4c5dfbb4c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a0910f2d-3ad6-4518-9b2e-5ba2c604a608" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5b299ef0-e2b1-49c9-bee1-5f97ab702231" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctra1Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="82bbe71e-37c9-40ce-822a-3c0fce42fc97">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="103c3d44-dd72-425d-9d11-1ec917d5e9bc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="772572ca-638e-4588-84cb-9bda6c02ba81" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="22468504-ca62-46aa-8be5-ae3989f53a4c" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_DossierID_TooShort" id="c317be8e-202b-4c0f-b8fd-fb0f73017b8d">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_DossierID_TooShort" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="9d175da8-41f4-4be4-abb4-c649a40beb8e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1bd11d48-05fb-4d82-992f-fec24d9d4cd8" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1f1a057e-d7fa-4adf-8da9-b9926170a0b8" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5bcba10b-bf6a-4789-8489-6c3cb0d23359" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="55303411-aa02-4f03-8a7d-8019cc0614e8">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="a0b39bdb-6958-45bc-93de-08917c4cdbb4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="938cc639-5f9b-4e04-8907-48342dfa39bb" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="6522fa73-57e2-4759-8905-110b628f402d" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="c415b6ee-d803-45ee-8a09-bb3a8f603bb9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*One of '{"http://www.coin.nl/Overstappen_MESSAGES":sender}' is expected*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8aa5f328-173e-45b1-934c-982134d45baf" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d627ddc6-d3bd-4c17-a2b4-494ae9c2b241" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="ad1b0ccd-f2db-4734-8dac-71f67f463c1a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="85289dac-2e15-4280-90d6-e448e14fd489">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8483c894-bffc-4db9-bfea-1e5e888fe41c" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="4d91cbc4-924e-4a09-a60b-e4289a3e555a" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="601476b3-97e0-4aa4-8d14-90f308643584">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8aa1ee96-19f6-4b15-9307-3c367ed9ff5d" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A4.5 actualdatetime incorrect format (pattern mismatch)_CTP" searchProperties="true" id="ed342976-3182-4556-946c-10308daa77a9" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="24b5cd8a-4af1-4129-9261-5a216389dbab">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="afec3c30-90fd-4245-817a-c10c9619def9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d2999c87-3c4a-40bf-9482-17915c8c3f43" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d414881a-666a-4840-92be-ab28217549a0" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="cdf347ac-e49e-413a-ada3-f8c04e827a7d" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="34f23580-e05a-40e9-a306-ec3462eda943">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="68c6d72f-a9a9-4b58-8ecf-1a91a7f3bbb3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="9bcd9c8b-d00c-4c71-9d31-0157299343cf" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="3c257997-8dd2-48ad-b3f3-2c15d6e3e411" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="08786242-f0e3-4e98-87f9-80ec3cbdff32">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="261ab9a6-09d1-4063-9627-b68e392d86e2" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b3fddaa0-af8c-4ac4-bfe9-1a6c888ee39a" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="0c244e2c-d2bf-4cf0-a51c-c639872a186c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="be9e2c74-c402-4101-9afe-a604733bfcbe">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3765e284-1150-43c9-bdde-afa81b419a42" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="13c174b4-dc60-4d77-9479-4e60ad0b18c7" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="8c56f5aa-e1a0-469b-9776-b843a614370f">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="f0ebb3da-a25d-44d1-84d6-c356c8995aaa">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="71a60da5-2516-4f55-816b-e968bdab1641">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="6c0b57ba-d577-483d-a375-d9a74804a49a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3dac3ecb-d491-4ba5-b8e2-457b3b675d89" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="83554688-db14-4b4a-8947-aeadc5486670" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="26608c2a-db82-44b0-bdcc-ee68840fb9d4">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="85547714-99c9-47d1-9001-a7ecfc67225e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="5f24625c-7f58-4045-9853-911e33744bca">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="25e8c1c6-8015-45f2-b9e0-4e07f46c7338">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a90b3b9c-5d5d-45da-99a8-69439f453a5d" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7294c164-f792-4dbd-aebd-a1209e85add1" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0eb7ee99-98f8-4f6a-aef6-cfccc82dad43" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="7bd85244-4841-4a62-914d-3318bb1539ff">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="7fb575f7-073a-4f6f-8cd5-d8403de7122b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="c6336dd0-2da8-4056-8a1d-9c429574fb61" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="045686c2-5623-4d60-bead-7a8352c0277d" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="a5071c44-7576-476d-a599-577a5cec0f1c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2f0ce68a-f4db-4ac2-8ff7-2b5d1322a309" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="14a41b99-c947-4864-9bc9-fd25a86f14c7" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="0311f1c6-faa0-49db-bcde-2e9955639eed">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="63f3bbbc-247c-47b1-9715-64408ef6bc52">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="cfab3d34-1f87-44c4-ae52-17d041c5ae3c" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="45bab127-a93a-49ce-99f1-4692d1d42537" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_ActualDate_WrongFormat" id="9dfa41fd-5638-45a7-930b-0e5f524820ad">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_ActualDate_WrongFormat" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="368cd5f5-39cf-47a8-89cb-ab37aecedb8c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fbd10adf-58ee-4eaa-a086-e51c0fe221ac" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="638576f1-38f3-46d2-9f71-4b384993de7a" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7d514056-15bb-438b-87b5-448d0a93e9e7" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="f19eb2a2-e4c5-40c7-99d6-21ff1053887f">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="633adf9a-cf2f-4597-aa14-cc3913c0c5d3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8e80ba8d-e441-40ae-a950-ea4de8eaf2f1" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="45f2f4cc-3541-4f95-985b-340f2f1a108b" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="56ce0d05-9e99-4176-bcb2-97ec7701cf2f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*is not facet-valid with respect to pattern '\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d' for type 'standarddatetime'*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4d78ae4e-a044-49ec-8158-33f87da89cd5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f51acae1-202c-4b76-a7e5-51e331359ad9" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="66501124-07a7-4915-9cd6-6070aa0add91">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="8238d0b3-2626-4864-974f-2c56adc603a5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="118d3f07-4540-4502-a477-095913405682" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="67eaef8f-8dae-4f6f-9ab3-1bb000d7b51d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFX%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A4.6 Empty actualdatetime_CTP" searchProperties="true" id="48b7e6b9-1bf2-4f5b-97cb-786d4fd095ec" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="731c438d-6653-46a6-96e3-d39b9700b166">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="65813c95-ab7e-4a4a-b1b7-026580d81dfe">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="fc5cbd16-42ef-4760-8be7-cd83ee4ad52a" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="97e88c81-c8f5-4fbf-9286-b8a4662dd687" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="49089076-9e21-4dbb-8642-74b4347b9c29" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="4c78509c-1a06-4cea-bad3-dd64b29e459a">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="1f9d22d9-d672-433f-8096-6d52a5527dff">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="e067fdaf-04bd-4891-b2f6-81bb81eff010" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="33fd69b2-df74-4384-b49d-e4ca8130f68b" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="21db5e46-c504-4916-8559-938bb5301bc0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b77c4a64-4633-4667-a5c6-e693b3dbfc02" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="18d02454-4a13-442a-81a9-6416786b1a7b" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="235743d6-45fa-4fe6-8cd1-bf881761f2c9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="387a2358-c5d1-41cc-99ae-4cbdfea67a6d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8d423ddf-cd07-4573-ba82-3653450697af" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="dae914bf-81aa-41e4-b526-70b2daf60863" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="11d681b8-1ac7-4124-bc69-6a3f59102976">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="aa124a6d-06af-4ac4-bb92-62f50542ca11">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="3483e15f-fa52-46ca-a57b-0c2bec7b02f8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="45f8b041-8cbf-45bb-9e7c-d7b1c77f9e62">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="377c8138-5c0f-40e7-8398-5493f808a92e" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a826e917-83e6-4b41-8225-b33af3b19b8a" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="9524fd59-5329-4cf8-8e73-373a73eccd81">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="dcbf8c5e-924d-433c-87e4-4c28992a1521">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="b6322d38-38f6-499b-8b8d-8a971f447180">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="225422b5-7dfb-42c6-bce6-be4fe3a9ef21">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="651ab42a-14b7-4af3-86de-748fd4f4a3b3" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ab2670b0-4989-4c64-b156-289098ccf677" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7c4d9448-6dbc-492b-85fa-a4a8ec45ab18" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="b39f7057-7a01-4123-97af-ae8a20aadfa5">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="44d21f4d-ba96-47db-b8dd-0078ab34fd78">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="92b0e047-fa60-44f3-ae68-dc852cf4785f" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="b55d1a09-0b21-4da4-a57b-d732462c0cd2" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="b0027227-2c9a-4a5f-9b60-cd6fff3a635c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9073cb1b-6410-492f-80fb-35a7e3bcaba2" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="969d2055-5cd5-45ae-aeab-8fd5fc27fb94" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="bf52f975-1071-4bea-bc9a-1ad6b119bd7a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="af2ec18d-abe9-4ffb-b5a2-f267f4b3d83f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="536d8177-0bd8-4cfc-9872-dcee21dd1712" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="86ff0897-4d1a-4911-bc0f-e658c0312a6e" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_ActualDate_Empty" id="4d6de6d8-1cb2-4154-a27c-821caade5976">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_ActualDate_Empty" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime></actualdatetime>
<note>performed sent ${#TestSuite#soapVersion}, expect ${#TestSuite#donorSoapVersion}</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="2df165fe-0a59-4441-a20a-d6749aa036ac">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b1ca5113-d297-48be-89ad-e101f95363b0" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c60b7899-c6d9-4a3b-9597-7498e7dec87a" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8b5331cf-27a9-46d6-93cb-19d7a84f8f9a" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="31c631f4-e5ad-4791-9392-7ee9e77c9a46">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="85e79852-03bd-48e8-bf89-d9290d00973b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="629c081a-e639-4c46-84f3-d355a6452e94" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="3f64345d-07e5-4afb-ac89-e7bb18c9bcef" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="65f815c1-b1bd-453f-9c2a-d7f42c9ec254">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*is not facet-valid with respect to pattern '\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d' for type 'standarddatetime'*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0e4ab310-03c7-4b56-8349-e68477425add" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a9aab8c7-7037-462e-bcec-2fe128bdbee7" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="9198206e-59a6-429c-af72-b9e6200d513a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="cc77027f-dcd1-4b2a-96c9-3f74a83c5932">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="494cb132-bd85-41d1-a414-815b1b36b1e4" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="3defe45b-bb17-478a-bb63-93c742efd7c0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A4.7 Empty note_CTP" searchProperties="true" id="8e593417-d550-4e9d-a714-7b72659ec07c" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="5efe3c17-f74f-403f-b3fa-5263c15322a1">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="dc4d04a8-a1ea-466e-95d4-be98827bae03">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="df0f8bdc-9067-417c-8db6-d95bdafecc9f" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4105c4b0-3d09-4cf0-8231-93b2d8f175b8" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8605b3dd-22bd-46f8-ad0c-78222c6c855e" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="b4578b82-5378-4242-9b83-9c6a1a0212ee">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="a4f435b9-a3f7-4791-8a0b-8af29f63f837">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="436cfcec-fc94-44df-bee2-ee662b7b87c7" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="82e07384-a399-4363-9b9d-9a053d64d373" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="e2f5e574-3be1-4f50-aab7-d91f7404223f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="bd2320a6-8f17-4336-bc75-262b119fa41f" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="bc84f0c5-8e71-464c-9f54-175b33ecb346" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="92c292ba-e91c-49c5-ab0b-70e49bd8520a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="08f7f0f3-ab06-43a7-97ef-27af2446252b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a3455316-3a48-4fc5-b22a-fd22125449c0" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="9edf0507-e645-4101-aa5e-7ac4fd5e3b67" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="13fcb35c-2ffd-4b59-b18b-57d7b1b8059b">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="2c4b5bcd-5382-4ded-a96b-54963252793c">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="21f2ff22-814f-49cc-b254-55a7a5e375fd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="56e1176e-51a2-4e3a-9be7-2a8893e9a44d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c2ba7073-ab02-4821-8db1-41b8f826781d" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="36ae1590-d278-415f-ba8c-ba44a97bf1c2" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="c686603b-3474-4084-861f-06401f3eda50">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="a9e737a2-2b15-4f1f-9e85-d9999f8655c8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="d85e3919-ff63-477e-90af-0c5a61220b44">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="1a4aa29d-371f-4800-9dc0-99f510ec465a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="279d4c1d-42db-4c3d-9ecb-00e98066c350" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="514834d6-2feb-468c-979c-e5413fe46822" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fecf7402-84b6-4d69-9751-279694872d3d" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="b984049e-8952-4212-abf5-3fc2a792a542">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="8bbea24a-93d1-4438-b077-cbd6461e0689">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="e46d99d4-6cc3-44e5-b6ab-f7e07bb91b98" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c0a836e6-7214-4f94-9ba9-84f7cc303a9a" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="9c53a818-ea45-42f6-811b-158e1171bc32">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="48cd4b3b-aae0-4cb3-be26-25fc55a6b658" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7091d9d-f3d9-4ae3-b000-097e8ef9c1a8" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="ecd24b65-d903-4902-9c31-fa0c828604b3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="29bb5f32-8eb1-4fd5-8fd8-d1e04aa08dc3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="70e1c283-1c3e-4d80-9ae8-ee0d47faa3e1" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fd0e7891-736a-41fd-bbf2-e6112e556d26" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_Note_Empty" id="2e66dcf0-eb6a-4cf4-84f9-e5346a4c412e">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_Note_Empty" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note></note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="f69e1811-828b-49c2-8ae8-8c75fa9e1b06">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="03546708-c933-4fd8-a0c0-b6e5d6fc1d2b" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ed20deb0-6325-4c5a-9b0c-35e28c706ca6" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1469882c-6918-455a-b6ed-e8d615f3773a" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="edd7ed72-6e7f-4b7a-87e0-7418525450c3">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="e1cb6be8-8450-4ee9-98c7-f496a7ab4d40">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="b00c9334-62e1-4aa9-ab95-019a4651a880" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="dfb4f181-95bf-40ef-8294-c43d090a445e" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="c593910f-d726-429c-8f99-28eefec1cb38">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*is not facet-valid with respect to minLength '1' for type 'note'*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b78f7b6b-b500-4dca-a875-4d26ece0c1cb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="652373f3-429a-4847-97b9-5614c07d3ec9" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="1caa3bc0-220a-4544-ba17-8f20eb4c3eb0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="01ac2611-e5be-4290-9a08-05a89a497853">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="27d964a3-16c4-4d8b-bb79-e077b3a8af6e" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="19d2a768-bbae-4991-8017-f5a8c9cfe252">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="A4.8 Note too long_CTP" searchProperties="true" id="51cb7098-5198-49fd-94cb-ee38a15b4f6c" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="request" name="CTR-Sunny Day" id="362b5ec0-901a-4c55-b1b8-3b09e27df9b7">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTR-Sunny Day" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">\r
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequest>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<!--Optional:-->
<recipientserviceprovider>${#TestSuite#recipient}</recipientserviceprovider>
<!--Optional:-->
<recipientnetworkoperator>${#TestSuite#recipient}</recipientnetworkoperator>
<!--Optional:-->
<donornetworkoperator>${#TestSuite#donor}</donornetworkoperator>
<!--Optional:-->
<donorserviceprovider>${#TestSuite#donor}</donorserviceprovider>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
${#TestSuite#dossierType}
${#TestSuite#compensationOK}
<name>COIN</name>
<addressblock>
 	<postcode>1389SS</postcode>
	<housenr>99999</housenr>
</addressblock>
<numberseries>
     <start>0173112233</start>
     <end>0173112233</end>
</numberseries>
<validationblock>
    <name>contractid</name>
    <value>1-${#TestCase#contractID}</value>
 </validationblock>
<note>${#TestSuite#soapVersion} expect ${#TestSuite#donorSoapVersion}-linenumber ${#TestSuite#lineNumber}</note>
</${#TestSuite#soapVersion}>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("transactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTR" id="da1b011f-b391-46e8-a07b-f8b27abd047b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#transactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>&amp;lt;contractterminationrequest&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="77af631e-a991-48c5-b7c6-43b4c54de0ad" name="Script: store SoapTransaction.id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="548ef028-ebda-401b-8917-ce9845d3389c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b0fbcce4-9d7b-49db-96c0-459954fc57e1" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="de3a9956-a9db-4424-805b-8521299275bc" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="51ceeb8e-e2a5-43ee-99f1-ecf1894dbe27" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller" id="93791729-0ad2-42da-ae2f-6e451334adad">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="4eb384a1-a633-4c3f-a6ca-e24ff0ac3cbc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e371b944-538a-4ca7-8a34-5e16c9245fe4" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="e16ee500-9d2f-4366-8b3b-f6339e1ffbae" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c4bec0cd-00a2-486d-b90b-d9e6bbf3672c" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTR" id="109fb122-cbdd-4aab-a738-7fb0c3614c63">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#transactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9721832-09a7-4334-b664-ceb32e13c1a8" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7fcfc279-edc7-4d68-90bc-f919e2c79a71" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="49867bcf-7f2f-4423-86a9-de86e6a9fc6b" name="Xpath: JDBC_MessageLogging_CTR">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD table_CTR" id="979220b4-1bac-4755-8cc0-d17371db0010">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier where 
ctd_switchid = '${#TestSuite#Recipient}-${#TestSuite#Donor}-${#TestCase#ContractId}-01'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: Store ctd_id">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="1841841d-972a-4bf0-bc88-c1ad0b5ede11" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="768cf44d-6143-41d9-9848-cde571f87b2a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="XPath Match" id="22e366c7-6a4e-4580-9e30-c5cb86194c3d" name="Xpath: SoapVersion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/IT_INTERFACE_TYPE[1]</path>
              <content>*${#TestSuite#soapVersion}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0270de28-900d-4d60-920c-4ca5f131013f" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="2b861d9e-5329-44d3-bcd5-4b0722a64bec" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="829c50af-ff0b-4354-99c4-9e514a6cc590" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType" id="8c069863-1c23-4dbd-8ecd-ac408a78e47d">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Send Poller" id="022d82c6-2fbd-4950-ac78-347da8d7e224">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Send Status in ST table_CTR" id="efc4dcc4-5d51-4fc0-a170-262d91c974ca">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and id>${#TestCase#Id}
and st_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ST_TRANSACTION_ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify SEND Status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//ST_SEND_RECEIVED</path>
              <content>SEND</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="399e0deb-1a5b-410a-a8d3-3bdd1a096037" name="Xpath: ST_MESSAGE">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0a904907-6bda-4f4c-94ff-14d7bf341a6b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="8fafa5c8-2e84-48d5-90a1-302edb48ec3b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eb3bff08-4703-424d-b8ab-94a78fdd5221" name="Xpath: SXM_XML_MESSAGE contains wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;wishdatetime>${#TestCase#wishDate}&lt;/wishdatetime>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0556b0e2-dbbc-4407-aae9-71a1337500f5" name="Xpath: SXM_XML_MESSAGE contains sender and receiver">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content><![CDATA[*<header>
      <receiver>
                  <networkoperator>${#TestSuite#donor}</networkoperator>
         	              <serviceprovider>${#TestSuite#donor}</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>${#TestSuite#recipient}</networkoperator>
         		          <serviceprovider>${#TestSuite#recipient}</serviceprovider>
               </sender>*]]></content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eca6d213-b347-4cf5-9ee0-97d9c5a179f1" name="Xpath: SXM_XML_MESSAGE contains contractterminationrequest tag">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequest>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cdeae0b1-5642-4ec0-840c-0a705c7b1cd5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8c643564-9d61-4cba-a6e1-1849e0177ebb" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ccc5e28c-81f0-460c-a34b-184d0e1134e2" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1" id="8eb6bcb6-6720-4243-937b-ebfab14c9020">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="74783e59-7bb0-4926-9d28-eae8acefc9ed">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple Contains" name="Contains: assert empty ResultSet" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>&lt;ResultSet fetchSize="0"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5f45f7f2-ad63-4cda-a8ee-d611792ba2dc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="83fefd5b-42c8-4712-9913-a2a3ebc8e8b7">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer ok ${#TestSuite#soapVersion} sent ${#TestSuite#donorSoapVersion} expected</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_CTRA1" id="c4de5a18-34ed-47ec-9bf2-b7a65189b853">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="9711766d-2ab8-4277-8ebf-4c697919c356" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13a13fe3-57f1-4005-b168-2f8c06ded06d" name="Xpath: st_message &lt;/ctra>">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_MESSAGE[1]</path>
              <content>*&lt;/contractterminationrequestanswer>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="417ec4fe-d484-41c2-8eb3-1e22385ac5fe" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8c9ee3cf-4d69-4280-83af-4ebb264960cd" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3dae811c-ea5e-4644-bf48-0d08e225490d" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="c010a45a-a622-43fa-9216-4633bb796f4f">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTR" id="015a2d56-3cd1-476b-8705-be9db139b8b8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: RSXM_STATUS as Done" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5530009f-3796-4624-a7c3-8a35a4fad6ca" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="02723942-d449-4e54-b520-3efc6ad38acd" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d2c9c5c9-b26f-45af-bb21-470ac38b6720" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA1" id="ec9d6984-16b3-4fe1-a9ac-5acdd63904e7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ddcda551-8211-4cd0-a3c7-8c35dce9b913" name="Xpath: 1">
            <con:configuration>
              <path>count(Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1a278523-f088-4d66-bc0d-0d71d7d1274c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="14d21970-ce7d-4907-be61-5cca6606c339" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA1" id="71e32ba0-af96-4647-902b-52f8bf526a82">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="17537223-dd19-4d75-a8e3-70f56aa8152b" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="1a6c87d9-c7ad-4562-a65d-99ff3a511353">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
and sxm_xml_message like '%/${#TestSuite#soapVersion}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="89423fb8-e10b-4dc0-8acc-c6b50e05ba16" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c913e520-41a5-4c3b-8834-37c71d2bba0c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d766dc93-50d4-4c66-83db-d784127b92f2" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7394edfb-0b12-4398-a755-58b0f2c77751" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTP_Note_TooLong" id="3aeab54e-2399-4d12-ab3b-8034728c4b54">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTP_Note_TooLong" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="PasswordText" id="3aa22f8f-37c1-4ea2-ba88-b80068a3761f">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#recipient}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#ContractId}-003</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationperformed>
<${#TestSuite#soapVersion}>
<dossierid>${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01</dossierid>
<actualdatetime>${#TestCase#Now}</actualdatetime>
<note>rainyday XSD validation but the note field is more than 100 characters long the quick brown fox jumps over the lazy dog the quick brown fox jumps over the lazy dog</note>
</${#TestSuite#soapVersion}>
</contractterminationperformed>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="XPath Match" name="Match content of [ns2:TransactionId] using RegEx" id="1c471417-807a-4012-a734-b2dd5be94c8f">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" name="Check count of [ns2:TransactionId]" id="345c96a3-89a0-476e-9875-b0c18e04ef5b">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
count( //ns2:SendMessagesResponse/ns2:TransactionId)</path>
                <content>1</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" name="Assert node [ns2:TransactionId]" id="63f77b9d-d209-4d74-ad56-a26982ab75c5">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctpTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#recipientUserName}</con:username>
              <con:password>${#TestSuite#recipientPassWord}</con:password>
              <con:domain xsi:nil="true"/>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTP" id="c4079bcb-8112-4b6a-af81-c1db0e2237c8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="7ecc4fae-37f3-450f-9308-bff9fa2bc708" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctpTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationperformed</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctpId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c271fa49-7365-429c-8a8c-760100626b08" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="efb0dec6-5b7f-42a1-8a28-bd7d0838baf4" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#recipientUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="79e191b0-49a4-4d86-85ba-2ef7d0cec65a" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#recipient}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="48b89a79-8564-4bcd-8afc-dcc2740a26da">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTP" id="eb566821-220b-4077-b904-ab2b52506db8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctpId}'</con:query>
          <con:assertion type="JDBC Status" id="9a907c7e-cfdb-4105-ae14-b59c6ee84532" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Failed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="85be832e-74f2-44f2-b835-e987f8b43c79" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="60a7a2f7-9372-409d-ba39-9ec261ea6a15" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTP" id="f52993c8-47bc-49e5-9aee-2fae5035767d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctpTransactionId}'</con:query>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>34</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ca4b2723-b301-4630-bec4-3e804743a182" name="Xpath: assert MSG_LOG">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_LOG/text()</path>
              <content>*is not facet-valid with respect to maxLength '100' for type 'note'*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d023f8b5-079a-4cb0-9480-af92fc3adf3a" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2fb9305a-8472-447f-a536-4b012c487fb8" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctpId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="a0db4333-5ca6-4c99-beae-363d2ec51d42">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9d345dd8-2978-4ca0-8ed9-485b70d82d1d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="cd681b0c-70f0-4a42-9242-50ffc92a9573">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="dd114736-d3c0-4e67-a02f-15594f6a1e43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="003821e2-6f59-4a07-8d69-ed94e62fb3f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="2ac667e5-2df5-4ed0-a41e-70a95143a346" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="d8ce10fa-2f86-47df-8332-22142f2493f8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestSuite#recipient}-${#TestSuite#donor}-${#TestCase#ContractId}-01%'
--and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="1d6512c2-8432-4749-8c9f-1c9ec4c56dfd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9133cb4b-6821-4b38-ba5b-9f7129bd3043" name="Xpath: 1">
            <con:configuration>
              <path>count(/Result/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
String contractId = funcHandle.getRandomString()
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:properties>
      <con:property>
        <con:name>MaxDays</con:name>
        <con:value>90</con:value>
      </con:property>
      <con:property>
        <con:name>MinDays</con:name>
        <con:value>0</con:value>
      </con:property>
      <con:property>
        <con:name>PollTime</con:name>
        <con:value>10000</con:value>
      </con:property>
      <con:property>
        <con:name>TimestampNOW</con:name>
        <con:value>${=String.format('%tFT%&lt;tT', new Date())}</con:value>
      </con:property>
      <con:property>
        <con:name>LineNumber</con:name>
        <con:value>0</con:value>
      </con:property>
      <con:property>
        <con:name>testdatafile</con:name>
        <con:value>rainyday.csv</con:value>
      </con:property>
      <con:property>
        <con:name>browser</con:name>
        <con:value>firefox</con:value>
      </con:property>
    </con:properties>
    <con:setupScript>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
import org.apache.commons.lang.RandomStringUtils
import groovy.time.TimeCategory
import nl.coin.Selenium.*;
def directory = groovyUtils.projectPath + "/"
System.setProperty("projectfiledir", directory)
def seleniumHandle = new SeleniumActions();
def funcHandle = new ReadymadeFunctions();
def Line = funcHandle.getTestDataAndIncreaseLinenumber(testSuite, directory);
//Split the first line into a string array and assign the array elements to various test case properties
String[] propData = Line.split(";")
funcHandle.setRecipientAndDonorSoapCredentials(seleniumHandle, testSuite, directory, propData[0], propData[1]);
testSuite.setPropertyValue("soapVersion",propData[2])
testSuite.setPropertyValue("dossierType",propData[3])
testSuite.setPropertyValue("compensationOK",propData[4])
import groovy.sql.Sql;
def  con = funcHandle.createDBConObject(testSuite);
def recepientDetails = funcHandle.setProperty4mDB(testSuite, con, "select spr_code, it_interface_type,business_gui_only from overstappen.service_provider inner join overstappen.interface_type on service_provider.spr_request_it_id = interface_type.id where service_provider.spr_code = '"+ propData[0]+"'", ["business_gui_only", "it_interface_type"] as String[], ["recipientbgo", "recipientif"] as String[]);
def donorDetails = funcHandle.setProperty4mDB(testSuite, con, "select spr_code, it_interface_type,business_gui_only from overstappen.service_provider inner join overstappen.interface_type on service_provider.spr_request_it_id = interface_type.id where service_provider.spr_code = '"+ propData[1]+"'", ["business_gui_only", "it_interface_type"] as String[], ["donorbgo", "donorif"] as String[]);
testSuite.setPropertyValue( "businessGuiOnly" , donorDetails[0])
def donorsoap = funcHandle.getDonorSoapVersionS2SAndSetProperty(testSuite, donorDetails[1], propData[3], "donorSoapVersion");
def donorbusiness = funcHandle.getDonorDossierTypeS2SAndSetProperty(testSuite, donorDetails[1], propData[3], "donorDossierType");
def donorMessage = funcHandle.getMessageTypeAndSetProperty(testSuite, donorDetails[1], propData[3], donorDetails[0], "donorMessage");
funcHandle.setProperty4mDB(testSuite, con, "select id from overstappen.service_provider where spr_code='"+ propData[0]+"'", "id", "recipientId")
funcHandle.setProperty4mDB(testSuite, con, "select id from overstappen.service_provider where spr_code='"+ propData[1]+"'", "id", "donorId");
funcHandle.getOutgoingMsgTypeAndSetProperty(testSuite, propData[3], recepientDetails[0], recepientDetails[1], "donorOutMsg");
funcHandle.getOutgoingMsgTypeAndSetProperty(testSuite, propData[3], donorDetails[0], donorDetails[1], "recipientOutMsg");
con.close()</con:setupScript>
    <con:reportParameters/>
  </con:testSuite>
  <con:endpointStrategy xsi:type="con:DefaultEndpointStrategy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:endpoint mode="COMPLEMENT" username="Bert" password="Ernie" wssType="PasswordText">http://testcomp.coin.nl/compv3/MessageService</con:endpoint>
    <con:endpoint mode="COMPLEMENT" username="Bert" password="Ernie" wssType="PasswordText" domain="" outgoingWss="" incomingWss="">http://210.7.69.28:8080/compv3/MessageService</con:endpoint>
    <con:endpoint mode="COMPLEMENT" username="Bert" password="Ernie">http://192.168.100.28:8080/compv3/MessageService</con:endpoint>
  </con:endpointStrategy>
  <con:requirements/>
  <con:properties>
    <con:property>
      <con:name>directory</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>SoapUrl</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>DBHostname</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>DBPort</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>DBUser</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>DBPassword</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>DBDatabase</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>GUIUrl</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>UserIP</con:name>
      <con:value/>
    </con:property>
  </con:properties>
  <con:afterLoadScript/>
  <con:wssContainer/>
  <con:databaseConnectionContainer>
    <con:databaseConnection>
      <con:name>JDBC</con:name>
      <con:driver>org.postgresql.Driver</con:driver>
      <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
      <con:password>${#Project#DBPassword}</con:password>
    </con:databaseConnection>
  </con:databaseConnectionContainer>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:xmlTemplates/>
    <con:parameters/>
  </con:reporting>
  <con:sensitiveInformation/>
</con:soapui-project>
