<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="fb078ea9-bbaf-4edc-a6bf-537016d54898" activeEnvironment="Default" name="3.3.2_SunnyDay-State_Transitions_RecipientGUI" resourceRoot="" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="CompWebserviceSoap11" type="wsdl" bindingName="{http://coin.nl/ws/definitions}CompWebserviceSoap11" soapVersion="1_1" anonymous="optional" definition="${#Project#SoapUrl}" id="869298e4-825a-4dc3-af92-412e490398fe" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings>
      <con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.tcpmon.TcpMonAction@values-local">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Local Port" value=""/>
  &lt;con:entry key="Add local endpoint" value="false"/>
  &lt;con:entry key="Endpoint" value=""/>
&lt;/xml-fragment></con:setting>
    </con:settings>
    <con:definitionCache type="TEXT" rootPart="http://192.168.100.28:8080/compv3/compmessage.wsdl">
      <con:part>
        <con:url>http://192.168.100.28:8080/compv3/compmessage.wsdl</con:url>
        <con:content><![CDATA[<wsdl:definitions targetNamespace="http://coin.nl/ws/definitions" xmlns:sch="http://coin.nl/ws/schema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://coin.nl/ws/definitions" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xsd:schema elementFormDefault="qualified" targetNamespace="http://coin.nl/ws/schema" xmlns:ws-msg="http://coin.nl/ws/schema" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <!--Simple Types-->
      <xsd:simpleType name="TransactionId">
        <xsd:restriction base="xsd:string">
          <xsd:maxLength value="60"/>
        </xsd:restriction>
      </xsd:simpleType>
      <!--Grouped Elements-->
      <xsd:group name="Message">
        <xsd:annotation>
          <xsd:documentation/>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element name="Text" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Mandatory field containing the message text.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:group>
      <!--Complex Types-->
      <xsd:complexType name="Message">
        <xsd:sequence>
          <xsd:group ref="ws-msg:Message"/>
        </xsd:sequence>
      </xsd:complexType>
      <!--Request - Response Interface(s)-->
      <xsd:element name="SendMessagesRequest">
        <xsd:annotation>
          <xsd:appinfo>Request interface for SendMessages.</xsd:appinfo>
          <xsd:documentation>Generic interface for sending one or more (xml
						based) messages.
						When successfully received, the receiver of the
						request will respond
						with a TransactionId,
						uniquely identifying
						reception of the request and all the messages in it.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Sender" type="xsd:string"/>
            <xsd:element name="Messages">
              <xsd:complexType>
                <xsd:sequence maxOccurs="unbounded" minOccurs="1">
                  <xsd:element name="Message" type="ws-msg:Message"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="SendMessagesResponse">
        <xsd:annotation>
          <xsd:appinfo>Response interface for SendMessages.</xsd:appinfo>
          <xsd:documentation/>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="TransactionId" type="ws-msg:TransactionId"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="SendMessagesRequest">
    <wsdl:part element="sch:SendMessagesRequest" name="SendMessagesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SendMessagesResponse">
    <wsdl:part element="sch:SendMessagesResponse" name="SendMessagesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="CompWebservice">
    <wsdl:operation name="SendMessages">
      <wsdl:input message="tns:SendMessagesRequest" name="SendMessagesRequest"></wsdl:input>
      <wsdl:output message="tns:SendMessagesResponse" name="SendMessagesResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CompWebserviceSoap11" type="tns:CompWebservice">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="SendMessages">
      <soap:operation soapAction="http://coin.nl/SendMessages"/>
      <wsdl:input name="SendMessagesRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="SendMessagesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CompWebserviceService">
    <wsdl:port binding="tns:CompWebserviceSoap11" name="CompWebserviceSoap11">
      <soap:address location="http://192.168.100.28:8080/compv3/MessageService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content>
        <con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
      </con:part>
    </con:definitionCache>
    <con:endpoints>
      <con:endpoint>${#Project#SoapUrl}</con:endpoint>
    </con:endpoints>
    <con:operation isOneWay="false" action="http://coin.nl/SendMessages" name="SendMessages" bindingOperationName="SendMessages" type="Request-Response" outputName="SendMessagesResponse" inputName="SendMessagesRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="10753a9a-d43f-4e4b-9b58-0ac1aedc40ee">
      <con:settings/>
      <con:call name="Contract Termination Request" outgoingWss="" incomingWss="" id="5df7ae28-782b-40c8-a939-f0aee403eb0d" wssPasswordType="PasswordText">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${#Project#SoapUrl}</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>TP10</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<over:message xmlns:over="http://www.coin.nl/Overstappen_MESSAGES">
<over:header>
<over:receiver>
<!--Optional:-->
<over:networkoperator>TP14</over:networkoperator>
<!--Optional:-->
<over:serviceprovider>TP14</over:serviceprovider>
</over:receiver>
<over:sender>
<!--Optional:-->
<over:networkoperator>TP10</over:networkoperator>
<!--Optional:-->
<over:serviceprovider>TP10</over:serviceprovider>
</over:sender>
<!--Optional:-->
<over:messageid>TP10-TP14-TESTING-01</over:messageid>
<over:timestamp></over:timestamp>
</over:header>
<over:body>
<over:contractterminationrequest>
<over:v1>
<over:dossierid>TP10-TP14-TESTING-01</over:dossierid>
<!--Optional:-->
<over:recipientserviceprovider>TP10</over:recipientserviceprovider>
<!--Optional:-->
<over:recipientnetworkoperator>TP10</over:recipientnetworkoperator>
<!--Optional:-->
<over:donornetworkoperator>TP14</over:donornetworkoperator>
<!--Optional:-->
<over:donorserviceprovider>TP14</over:donorserviceprovider>
<over:customerinfo>
<!--Optional:-->
<over:initials>Ms</over:initials>
<!--Optional:-->
<over:prefix>Priyanka</over:prefix>
<!--Optional:-->
<over:lastname>Taneja</over:lastname>
<!--Optional:-->
<over:telephonecontact>0886086375</over:telephonecontact>
<!--Optional:-->
<over:emailaddresscontact>f@xebia.com</over:emailaddresscontact>
<!--Optional:-->
<over:companyname>XEBIA PVT LTD</over:companyname>
<!--Optional:-->
<over:customerid>ABCDEFGH1234</over:customerid>
<!--Optional:-->
<over:contractid>SOAP3EMAIL</over:contractid>
<over:contractaddress>
<!--Optional:-->
<over:address>HARINAGAR</over:address>
<over:housenr>123</over:housenr>
<!--Optional:-->
<over:housenr_ext>123</over:housenr_ext>
<over:postcode>1234AS</over:postcode>
<!--Optional:-->
<over:city>DELHI</over:city>
<!--Optional:-->
<over:country>IND</over:country>
</over:contractaddress>
<over:connectionaddress>
<!--Optional:-->
<over:address>HARINAGAR</over:address>
<over:housenr>123</over:housenr>
<!--Optional:-->
<over:housenr_ext>123</over:housenr_ext>
<over:postcode>1234AS</over:postcode>
<!--Optional:-->
<over:city>DELHI</over:city>
<!--Optional:-->
<over:country>IND</over:country>
</over:connectionaddress>
</over:customerinfo>
<over:wishdatetime>2014-01-14</over:wishdatetime>
<!--Optional:-->
<over:note>TEST</over:note>
</over:v1>
</over:contractterminationrequest>
</over:body>
</over:message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:username>COINTP10</con:username>
          <con:password>COINTP10</con:password>
          <con:domain xsi:nil="true"/>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:preemptive>true</con:preemptive>
          <con:authType>Preemptive</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="Contract Termination Request Answer" outgoingWss="" incomingWss="" id="761fd2a6-d71e-4e73-8c23-35ef01dbfec9">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${#Project#SoapUrl}</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>KPN</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
  <header>
    <receiver>
      <networkoperator>ZIGGO</networkoperator>
      <serviceprovider>ZIGGO</serviceprovider>
    </receiver>
    <sender>
      <networkoperator>KPN</networkoperator>
      <serviceprovider>KPN</serviceprovider>
    </sender>
    <messageid>ZIGGO-KPN-GUI2SOAP1-01</messageid>
    <timestamp>2014-01-08T12:56:45</timestamp>
  </header>
  <body>
    <contractterminationrequestanswer>
      <v1>
        <dossierid>ZIGGO-KPN-GUI2SOAP1-01</dossierid>
        <blocking>N</blocking>
        <wishdatetime>2014-01-17</wishdatetime>
        <blockingcode>0</blockingcode>
        <note>TEST-ANSWER</note>
      </v1>
    </contractterminationrequestanswer>
  </body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:username>Bert</con:username>
          <con:password>Ernie</con:password>
          <con:domain xsi:nil="true"/>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:preemptive>true</con:preemptive>
          <con:authType>Preemptive</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="Multiple Contract Termination Requests" outgoingWss="" incomingWss="" id="0db8d7b4-178d-456b-9a2f-029f8ccf74a3" wssPasswordType="PasswordText">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${#Project#SoapUrl}</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>CRY</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<networkoperator>FARI</networkoperator>
<serviceprovider>FARI</serviceprovider>
</receiver>
<sender>
<networkoperator>CRY</networkoperator>
<serviceprovider>CRY</serviceprovider>
</sender>
<messageid>CRY-FARI-CryFari01-01</messageid>
<timestamp>2014-01-22T13:40:45</timestamp>
</header>
<body>
<contractterminationrequest>
<v1>
<dossierid>CRY-FARI-CryFari01-01</dossierid>
<recipientserviceprovider>CRY</recipientserviceprovider>
<recipientnetworkoperator>CRY</recipientnetworkoperator>
<donornetworkoperator>FARI</donornetworkoperator>
<donorserviceprovider>FARI</donorserviceprovider>
<customerinfo>
<initials>Ms</initials>
<prefix>Priyanka</prefix>
<lastname>Tanjea</lastname>
<telephonecontact>0886086375</telephonecontact>
<emailaddresscontact>f@xebia.com</emailaddresscontact>
<companyname>XEBIA PVT LTD</companyname>
<customerid>ABCDEFGH1234</customerid>
<contractid>CryFari01</contractid>
<contractaddress>
<address>HARINAGAR</address>
<housenr>123</housenr>
<housenr_ext>123</housenr_ext>
<postcode>1234AS</postcode>
<city>DELHI</city>
<country>IND</country>
</contractaddress>
<connectionaddress>
<address>HARINAGAR</address>
<housenr>123</housenr>
<housenr_ext>123</housenr_ext>
<postcode>1234AS</postcode>
<city>DELHI</city>
<country>IND</country>
</connectionaddress>
</customerinfo>
<wishdatetime>2014-02-10</wishdatetime>
<note></note>
</v1>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<networkoperator>UPC</networkoperator>
<serviceprovider>UPC</serviceprovider>
</receiver>
<sender>
<networkoperator>CRY</networkoperator>
<serviceprovider>CRY</serviceprovider>
</sender>
<messageid>CRY-UPC-CryUpc01-01</messageid>
<timestamp>2014-01-22T13:40:45</timestamp>
</header>
<body>
<contractterminationrequest>
<v1>
<dossierid>CRY-UPC-CryUpc01-01</dossierid>
<recipientserviceprovider>CRY</recipientserviceprovider>
<recipientnetworkoperator>CRY</recipientnetworkoperator>
<donornetworkoperator>UPC</donornetworkoperator>
<donorserviceprovider>UPC</donorserviceprovider>
<customerinfo>
<initials>Ms</initials>
<prefix>Priyanka</prefix>
<lastname>Tanjea</lastname>
<telephonecontact>0886086375</telephonecontact>
<emailaddresscontact>f@xebia.com</emailaddresscontact>
<companyname>XEBIA PVT LTD</companyname>
<customerid>ABCDEFGH1234</customerid>
<contractid>CryUpc01</contractid>
<contractaddress>
<address>HARINAGAR</address>
<housenr>123</housenr>
<housenr_ext>123</housenr_ext>
<postcode>1234AS</postcode>
<city>DELHI</city>
<country>IND</country>
</contractaddress>
<connectionaddress>
<address>HARINAGAR</address>
<housenr>123</housenr>
<housenr_ext>123</housenr_ext>
<postcode>1234AS</postcode>
<city>DELHI</city>
<country>IND</country>
</connectionaddress>
</customerinfo>
<wishdatetime>2014-02-11</wishdatetime>
<note></note>
</v1>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<networkoperator>TEL2</networkoperator>
<serviceprovider>TEL2</serviceprovider>
</receiver>
<sender>
<networkoperator>CRY</networkoperator>
<serviceprovider>CRY</serviceprovider>
</sender>
<messageid>CRY-TEL2-CryTel201-01</messageid>
<timestamp>2014-01-22T13:40:45</timestamp>
</header>
<body>
<contractterminationrequest>
<v1>
<dossierid>CRY-TEL2-CryTel201-01</dossierid>
<recipientserviceprovider>CRY</recipientserviceprovider>
<recipientnetworkoperator>CRY</recipientnetworkoperator>
<donornetworkoperator>TEL2</donornetworkoperator>
<donorserviceprovider>TEL2</donorserviceprovider>
<customerinfo>
<initials>Ms</initials>
<prefix>Priyanka</prefix>
<lastname>Tanjea</lastname>
<telephonecontact>0886086375</telephonecontact>
<emailaddresscontact>f@xebia.com</emailaddresscontact>
<companyname>XEBIA PVT LTD</companyname>
<customerid>ABCDEFGH1234</customerid>
<contractid>CryTel201</contractid>
<contractaddress>
<address>HARINAGAR</address>
<housenr>123</housenr>
<housenr_ext>123</housenr_ext>
<postcode>1234AS</postcode>
<city>DELHI</city>
<country>IND</country>
</contractaddress>
<connectionaddress>
<address>HARINAGAR</address>
<housenr>123</housenr>
<housenr_ext>123</housenr_ext>
<postcode>1234AS</postcode>
<city>DELHI</city>
<country>IND</country>
</connectionaddress>
</customerinfo>
<wishdatetime>2014-02-12</wishdatetime>
<note></note>
</v1>
</contractterminationrequest>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:username>Bert</con:username>
          <con:password>Ernie</con:password>
          <con:domain xsi:nil="true"/>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:preemptive>true</con:preemptive>
          <con:authType>Preemptive</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="Contract Termination Performed" id="3c8bfccd-a63a-4f92-a245-b757c93f7f39" outgoingWss="" incomingWss="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${#Project#SoapUrl}</con:endpoint>
        <con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header/>
   <SOAP-ENV:Body>
      <SendMessagesRequest xmlns="http://coin.nl/ws/schema">
         <Sender>CRY</Sender>
         <Messages>
            <Message>
               <Text><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
   <header>
      <receiver>
                  <networkoperator>FARI</networkoperator>
         	              <serviceprovider>FARI</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>CRY</networkoperator>
         		          <serviceprovider>CRY</serviceprovider>
               </sender>
            <messageid>CRY-FARI-EndFlow01-01</messageid>
            <timestamp>2014-01-23T14:11:18</timestamp>
   </header>
   <body>
      <contractterminationperformed>
         <v1>
         <dossierid>CRY-FARI-EndFlow01-01</dossierid>
                        <recipientserviceprovider>CRY</recipientserviceprovider>
                                    <recipientnetworkoperator>CRY</recipientnetworkoperator>
            			            <donornetworkoperator>FARI</donornetworkoperator>
            			            <donorserviceprovider>FARI</donorserviceprovider>
                        <actualdatetime>2014-01-23T14:11:18</actualdatetime>
                        <note>Endflow_Performed</note>
                     </v1>
      </contractterminationperformed>
   </body>
</message>]]]]>><![CDATA[</Text>
            </Message>
         </Messages>
      </SendMessagesRequest>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request>
        <con:credentials>
          <con:username>Bert</con:username>
          <con:password>Ernie</con:password>
          <con:domain xsi:nil="true"/>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="Contract Termination Change" id="f87f6a75-224b-4afb-bf54-2c6c19cf47a2" outgoingWss="" incomingWss="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${#Project#SoapUrl}</con:endpoint>
        <con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header/>
   <SOAP-ENV:Body>
      <SendMessagesRequest xmlns="http://coin.nl/ws/schema">
         <Sender>CRY</Sender>
         <Messages>
            <Message>
               <Text><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
   <header>
      <receiver>
                  <networkoperator>FARI</networkoperator>
         	              <serviceprovider>FARI</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>CRY</networkoperator>
         		          <serviceprovider>CRY</serviceprovider>
               </sender>
            <messageid>CRY-FARI-EndFlow01-01</messageid>
            <timestamp>2014-01-23T13:19:15</timestamp>
   </header>
   <body>
      <change>
         <v1>
         	<dossierid>CRY-FARI-EndFlow01-01</dossierid>
            <wishdatetime>2014-02-18T15:00:34</wishdatetime>
                        <note>endflow</note>
                     </v1>
      </change>
   </body>
</message>]]]]>><![CDATA[</Text>
            </Message>
         </Messages>
      </SendMessagesRequest>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request>
        <con:credentials>
          <con:username>Bert</con:username>
          <con:password>Ernie</con:password>
          <con:domain xsi:nil="true"/>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="Contract Termination Change Answer" id="73b23c27-8252-4299-a9a1-2151d6fec596" outgoingWss="" incomingWss="" timeout="" wssPasswordType="PasswordText">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${#Project#SoapUrl}</con:endpoint>
        <con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header/>
   <SOAP-ENV:Body>
      <SendMessagesRequest xmlns="http://coin.nl/ws/schema">
         <Sender>TP10</Sender>
         <Messages>
            <Message>
               <Text><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
   <header>
      <receiver>
                  <networkoperator>TP14</networkoperator>
         	              <serviceprovider>TP14</serviceprovider>
               </receiver>
      <sender>
                  <networkoperator>TP10</networkoperator>
         		          <serviceprovider>TP10</serviceprovider>
               </sender>
            <messageid>TP14-TP10-ALSBVNZRI-06</messageid>
            <timestamp>${=String.format('%tFT%<tT', new Date())}</timestamp>
   </header>
   <body>
      <changeanswer>
         <v2>
         	<dossierid>TP14-TP10-ALSBVNZRI-01</dossierid>
         	<blocking>N</blocking>
         	            <wishdatetime>2016-02-27T13:32:16</wishdatetime>
                      <proposeddatetime>2016-02-27T13:32:16</proposeddatetime>
                      <note>TESTWITHCHTCHAOK AFter blocking</note>
                     </v2>
      </changeanswer>
   </body>
</message>]]]]>><![CDATA[</Text>
            </Message>
         </Messages>
      </SendMessagesRequest>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request>
        <con:credentials>
          <con:username>COINTP10</con:username>
          <con:password>COINTP10</con:password>
          <con:domain xsi:nil="true"/>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="Contract Termination Cancel" id="987ff7c6-c0a4-48d4-b8fb-12adcd3ae3ee" outgoingWss="" incomingWss="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${#Project#SoapUrl}</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>ZIGGO</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>KPN</networkoperator>
<!--Optional:-->
<serviceprovider>KPN</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>ZIGGO</networkoperator>
<!--Optional:-->
<serviceprovider>ZIGGO</serviceprovider>
</sender>
<!--Optional:-->
<messageid>ZIGGO-KPN-EndFlow01-01</messageid>
<timestamp>2014-01-28T14:30:00</timestamp>
</header>
<body>
    <cancel>
      <v1>
        <dossierid>ZIGGO-KPN-EndFlow01-01</dossierid>
        <note>Endflow_Cancel</note>
      </v1>
    </cancel>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:username>Bert</con:username>
          <con:password>Ernie</con:password>
          <con:domain xsi:nil="true"/>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://coin.nl/SendMessages"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
    </con:operation>
  </con:interface>
  <con:testSuite name="3.3.2_SunnyDay-State_Transitions_RecipientGUI_ViewDetails" id="6ea6332b-ff60-4bd8-aa4c-d12c45b96d4a">
    <con:description>CDV-703: Disabled C3.6 &amp; C3.12 test cases</con:description>
    <con:settings>
      <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
      <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">true</con:setting>
    </con:settings>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.1 CTR-CTRA blocking 99" searchProperties="true" id="3b4ae0c4-8361-4c1b-9fa2-59f37f9961ff" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="833c1228-9959-4ad1-9b41-23a84d486bf1">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="368ccf94-c18c-4804-84ee-73e275ceeb32">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="JDBC Status" id="e4415146-698e-4844-be0a-cf0f5018f1ae" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="c35cf888-36bf-4002-a1af-1032e2a62f85">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="f116fa6a-8895-4986-b1aa-446d9e201909" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="aca0adf0-394d-419d-b52e-ee7534d0fe5d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="be995ba5-2fcf-486e-ac34-3f990a418d88" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="18bb420b-5bdd-418c-bf7c-36629b766118" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For send Poller" id="9129676c-243f-434f-a5b2-02517b743469">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="13463d21-85f6-4f45-9d90-c887477f93c6">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_ST Table_NoSend")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="b0c6639f-fb16-466c-86bc-966e913253f2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac0e5b22-e677-48b9-afc6-8f2331fc9f07" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="bc6cefa8-7aa6-4de5-afef-8bcdc506f545" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e38526ad-5bf0-4755-8b82-90ec10384a13" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="58a7b420-3f71-458f-b0d3-8b5dd2795646">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_NoSend" id="45197aff-d9b7-48e1-a3ca-d671029039d1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and st_message like '%${#TestCase#switchId}%'</con:query>
          <con:assertion type="JDBC Status" id="cc45d6ef-2316-4378-b582-f321b46f2cc1" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="9dc2a7bb-7c16-4bd1-980b-734fceb80acc" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="b6ac4a07-37d2-40a0-8eeb-3258fde37643">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f2d1c401-3a05-4fb3-a01b-96be86ae860e" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-blocking" id="07d4cae8-4857-466e-b04f-70d591ed44bc">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>Y</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>99</blockingcode>
<note>Request Answer blocking ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="7e217344-7c72-42cd-be7e-bcf79bee133f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0dee71a3-a935-4b06-b972-c813e5f4ada7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="87a46e1b-6abd-40e9-93d7-879cd5d80622" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fe92eb90-8575-4ba4-8bb8-62355e7b99e1" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="62a39dc6-77ee-41a5-89bb-452f2cf60f3b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="c96d63d5-8003-4b12-a081-9a2037c6af4a">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="2d5e6c40-e176-448a-83e2-9eac6ef5787f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4d48a085-3f43-46c6-8810-e8e94ec93ff3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b58743e7-0a55-4986-8e86-afa8533ab867" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e4d825be-7227-4f24-8194-1cc92ba0e034" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="5528ce69-ae5a-46d8-98d3-9e5fc387c1bb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="de7dd802-8f79-48c8-911b-6b11ee6d662f" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="45bb5f24-1d8c-4011-a96a-0b3374d1059b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Blocked</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be12c6b7-e826-4a58-b4c4-a5ec955b7f46" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="bbe28b0f-59b5-4a1a-9005-fb89cfeb4ff9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="da663a2e-7feb-471a-9c29-84be65f04692" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="212ef293-cfa9-4a8b-b970-711abd7fd3ab" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="91fa86ed-2334-4f8d-8896-26ab4afdd35b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="70c8afac-caf0-471a-a14f-db2274d73d15" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="5249eb0c-b549-423e-8c35-7e461c6e6cf9">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 1" id="8b3a1199-d60f-4ed5-968d-bf14f5d1a23c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1f3a2336-d8af-4fcc-a5e5-e834c9de3bb1" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="15efa522-b0f6-499f-9adf-dd1f09fb7588" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="9f5cdd90-515f-4207-bc35-5d98509a72e1">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="94424b22-6807-4b5a-928c-0545f7777d2a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7c2ead04-db2e-4ede-b16b-85c280699784" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7a60508b-5cbc-4994-8350-5538bcf33f7b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e3c9580b-5332-4fe1-8f7a-98def76fd3d3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="40e459c0-8b50-44d3-bc26-e4021752649b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctraDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ea7fbfb2-1301-4118-8a56-f51b60422322" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="check CTRA email" id="77b7d64b-c661-471b-b0c7-41583df50937" disabled="true">
        <con:description>Please check for ${#TestSuite#recipient} that the CTRA email is received
for ${#TestCase#switchId}</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="8376b606-3c12-4188-92f4-0f587803b824">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def guiwishdatestr = wishdate.format("yyyy-MM-dd")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdatestr)
String contractId = funcHandle.getRandomString(9, "1-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.2 CTR-CTRA ok-CTP buffering" searchProperties="true" id="0a68539a-9338-48d4-bc50-1541f206d2c1" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="0cda9535-c388-4c31-a35d-3627d1d121f5">
        <con:settings/>
        <con:config>
          <delay>1000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="8d179c7b-d58d-4e1c-aaee-9ba95d1a95d8">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="2e5644f5-4710-468d-8621-7ebd582e40f5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="bc7d5e6d-e2ce-4678-961a-4bed06c24de5" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="8dddc13b-526a-4a71-9f43-c6073cd7fea4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="e16c88de-a3d8-4bbf-9708-469b40ddcde5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="78c23913-cd9a-48b3-a80a-6fd3b080cf49" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="3e29bca0-feaf-4f53-91ee-ac72e902a72c" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="5d1da052-092c-42b4-8cd4-25d83af0b583">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_ST Table_NoSend")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="2369317f-12c4-42cd-8a04-62745619c510">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="58dd4262-1e01-4085-8f11-e8800c5d88be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0e28d734-e392-4f26-9c0f-eb6f0b7d6abf" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9d984b35-fec5-4420-985a-d949389686fb" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="730a4fce-8337-4417-8d04-79fe054f4ec6">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_NoSend" id="aabe188e-a3f4-4858-9758-4f8aff58772f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and st_message like '%${#TestCase#switchId}%'</con:query>
          <con:assertion type="JDBC Status" id="cc45d6ef-2316-4378-b582-f321b46f2cc1" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="9dc2a7bb-7c16-4bd1-980b-734fceb80acc" name="NotContains: Not Contains" disabled="true">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="a76ac835-b2c1-43d5-8655-8948332955a6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e11253b4-b69d-4821-9788-89cd232e7657" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="90a356c1-8ccd-4894-b588-8bbb26ebf0ba">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="5f7f0bfc-c9bb-4845-98b9-81d520bdfa49">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f768c42d-88e9-41c9-a0b2-8d05cd171719" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9155beb2-508d-4306-8bfd-4e9e85cdafb7" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ad16e040-b3cc-42da-b28e-88ef0a648479" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b12f671e-b338-4683-b415-be81a185763f" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="5ef329ac-02cb-4ba0-9e28-2ec988336931">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="be145c1b-743a-47db-9bc6-34b5a2176369">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9569e434-49ab-4e45-a050-80ba0e196e2b" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="cdb4ab0d-32f0-4676-9d1f-90b5597e6307" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="35c18986-c1c1-4cf8-8d76-4edf045ae240" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="010f3ab0-86d9-48ed-8d48-fc83bdf30391">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0698abb2-b5fd-487f-b97c-78ded47ab78d" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="bfd6b0ce-a786-4407-b9a4-7e6eb923aba3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e40439fd-a28d-447c-b44d-3fb2c6ef4dea" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="c5613d48-da55-43d1-b873-a117f5f1cdfd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="aee83c84-1f40-4d13-a66d-1b6209582295" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d53ba6f3-831f-4961-a4f2-a1f4e5790824" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="953f6a89-6130-4f14-93ec-a279850acf1a" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="4791e6e1-b5d1-49a0-a8b7-73e7d9614006" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="0a3ec281-dcfd-427d-98a6-6436d3289ce6">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 1" id="5f19d4f9-1675-423c-93bc-aa3c674ec1fd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match" disabled="true">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="81ff77ff-f8eb-43aa-b40d-42cb951150d9" name="Xpath: soapversion" disabled="true">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e149e04-50b1-46af-b467-8b543fca4616" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="42a5ceb3-1ef4-460d-ab7c-f811c53a0efb">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="2b1abbd5-4b7e-4070-ae1e-fba61548731b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="b6d5ae98-57ce-4e00-9ffd-14dd43eb4e5f" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="043760f7-0e54-48ca-ac4e-540aefdf7d3b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9e6eb0ac-6236-43c5-95f1-c9a11a24dd0d" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="17df551e-17d8-4170-8dbc-88a380b902bb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1e4a2b3b-dbcd-4cfe-bba5-b5e68ec59fcb" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP" id="0403ea7c-1740-48b3-878c-c1b41aecb3d2">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA email is received
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
//log.info seleniumHandle.clickObject("HomePage","PerformedMenu");
//
//Get the locator of viewDetails with current dossierID
//def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
//log.info seleniumHandle.clickObject(byViewDetails);
log.info seleniumHandle.clickObject("HomePage","SearchTab");
log.info seleniumHandle.enterData("HomePage","DossierID",switchId);
log.info seleniumHandle.clickObject("HomePage","SearchButton");
log.info seleniumHandle.clickObject("HomePage","ViewDetailsSearch");
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="ba25e9e9-ec96-4ac7-9324-a18ae3140c77">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5d1906d9-833e-4c0e-a60e-6f721ded678c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="c8b9837a-3ef5-4e2d-9251-23cf9462f311">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="9522087d-47b9-4f57-a36e-06f3b8b0df6e" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a4cac204-adda-4058-946d-633e17172e6a" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c8dd9f30-9380-440d-9f3c-3ff119063523" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="c2681716-36cb-4da6-9289-1de029fc7098">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="836d44cf-beaa-49c2-8a5e-5cf16be2ea85" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ad98d404-ebdd-4338-b29a-fe44c6ecf63d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="696ffc21-ade8-4452-b52b-b09a6c4243f6" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="ec44eb1d-8cbc-401d-a700-88fd63e340d2">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
import java.util.Random
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
         wishdate = wishdate + 1.days	  
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def guiwishdatestr = wishdate.format("yyyy-MM-dd")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdatestr)
String contractId = funcHandle.getRandomString(9, "2-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.3 CTR-CTRA ok-CTP direct" searchProperties="true" id="c650e944-2930-4a7b-923a-4fb36dca2293" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="196e147c-4ea5-4f47-b1fd-67d2d914993e">
        <con:settings/>
        <con:config>
          <delay>2000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="d46f37d1-dacf-47ad-ab83-3a9e7fdc2980">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="54bc1d31-da35-49e7-a1c8-d6999283e1bb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");
def switchid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CTD_SWITCHID[1]", "switchId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="de2ff4b5-671b-4763-abe0-169757adc3b5" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="ca62575e-915c-4661-a9a4-fa9aaa7694cf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="9c6a4c76-f8c0-4b58-9c06-85a2dca62d43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c683f55f-b582-4591-9a41-29b27231e351" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a74300e4-3bc9-4edd-a762-f81755a5ef0b" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="f56c59c8-0256-475f-ad05-af4c8c9af4e2">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="3478be83-a9f9-48a2-929d-9bbc73365297">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8a079eb7-72d1-4afd-886b-216280b5891a" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1195ffda-6c6c-40a0-ac4f-7d107c84543f" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f21fd3fd-a473-4b44-9ba1-2a1d33e6f077" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="27ebdc6a-bcdd-4a00-ad70-71d8071c143a">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="3f3b1011-4c7e-4bbc-baf8-834628eaf7e4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple NotContains" id="9b2d6ab3-c2c2-4565-8ebe-9554d73403ed" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fb7616b8-b0db-42f0-8c5b-4baafabcf7d5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1907c7be-eadd-4ecd-bffa-6d978f7acd6f" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="963e1eb3-2c10-44fd-9350-fe33be81566c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6e50af57-c060-4909-97b5-93761f1f0c8b" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="eaeec149-91d8-4a36-9a77-527eb34832f5">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="30343131-4eac-421e-9813-f845a787893e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="59bda985-e924-46df-acde-29b94b388b20" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ed9cdea9-4fed-4668-8553-fa16846f9b1c" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="06e38d06-0656-4338-a760-5bae3ffe2fbd" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b7b0ecd3-bcbb-43c7-9a02-bf99b8e15dd0" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="83856689-5e2d-4181-bbd8-473a47da762a">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="65fc4b9d-9dab-4e5f-91cc-3aa8621a73e5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="bc927106-c4d2-4e7a-b6a7-52146e60fcfb" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="bf4198a2-321c-4c22-bed3-8e9f5a769f3b" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="9d7f7db7-b445-4ff6-94b1-66dcd2ea6171" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="9cd24008-e008-4f5a-bf74-d73d59ebaa64">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b8cd2452-0710-4c5c-aba1-567355c04271" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="58eb9228-479d-47fd-ad9b-499c0b4d49fb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="a11dfa18-126b-410b-8ba5-efd785068433" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="3676334b-2537-45fe-89ea-4798e8fef3a4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="47442577-ea95-43a2-b281-0d4209903d99" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8d88f9f0-0b01-4f0c-aa48-557455b73832" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="474640fe-ff46-40dc-b80a-cb66b827480f" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="1d021ad0-20bd-456d-875e-5532a565148d" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="3917eb33-df63-4d7f-b13d-dba5a4abfefc">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="836ca408-dd52-46c9-a274-3bc97b77cd82">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="28e95b97-51c5-43ff-a3d2-30b8aef2e4fb" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="cd9f46e2-703a-495d-8481-92d97784206c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTP direct")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="b3df86d2-223a-4f0d-8f9d-a45080447b86">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="JDBC Status" id="03e8a379-fbf8-48a6-9917-a789cac2f09e" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c4f3746c-cf96-4a4c-aa2c-ff36a5201ad8" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="0d4dcc1b-4119-4c28-bc96-606398a34cf4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="316105dd-4eff-4c86-868f-ef73b3d19396" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP direct" id="38a0fd20-8322-4d75-aab7-d6e717194c1c">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA email is received
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
//log.info seleniumHandle.clickObject("HomePage","PerformedMenu");
//
//Get the locator of viewDetails with current dossierID
//def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
//log.info seleniumHandle.clickObject(byViewDetails);
log.info seleniumHandle.clickObject("HomePage","SearchTab");
log.info seleniumHandle.enterData("HomePage","DossierID",switchId);
log.info seleniumHandle.clickObject("HomePage","SearchButton");
log.info seleniumHandle.clickObject("HomePage","ViewDetailsSearch");
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="b06f6e3d-2431-4619-9860-c0c4adcaeb4b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Completed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>f</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="04d95770-aed3-4ad3-af31-aa94fc177219" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="1d02b361-0f23-49be-8db0-8af62d3beed2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="aaeb9b7d-f5dd-46d3-9ef1-fb92dd8eb051" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="55a901fe-5aac-45d2-a0bc-3920bc6ab15c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="555ef681-3063-4cd5-8870-e594dfce243a" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTP" id="5a2da9d2-0e6f-462a-a510-f9195d2c6ab8">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
	    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="fda6256f-cd45-4897-8c90-fd65dddfe43e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7277aa2f-e8ea-44db-b706-7f978734f32d" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="51fd96a3-4513-4cad-bcf6-d6992a32c31e" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3e7cbf73-7d82-4df5-b08b-3731c5fee234" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ba3f858d-dd6d-4c25-8181-f5a41e9e0882" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTP" id="26c4ab71-6d45-4833-a702-4b1d49902f60">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="CheckMail" id="a56b0d44-d025-4bdc-afa0-8fff4a3c6d19" disabled="true">
        <con:description>Check for ${#TestSuite#donor}  ${#TestCase#switchId} 
if email for CTP has arrived.</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="160be4c8-abcd-45dd-ad6b-fa79ddabc9d8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="395ced67-d7a4-4a45-b07e-276fbec0bf75" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTP" id="fe85c16e-44f4-42ec-996d-6411a25499a9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctpDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Performed received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Performed received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9114be76-cb0a-47ac-bba3-e07c83198d98" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="d6977e9f-c998-4c0f-a5e3-f2c7c14475d6">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 60.seconds
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def guiwishdatestr = wishdate.format("yyyy-MM-dd")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdatestr)
String contractId = funcHandle.getRandomString(9, "3-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.4 CTR-CTRA ok-CTC" searchProperties="true" id="2a3969c6-3cb1-4797-9697-230b504235cb" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="f8866e92-740d-4da7-9b70-a307e70eee2a">
        <con:settings/>
        <con:config>
          <delay>3000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="2ff72751-073e-49d7-93d1-e3d2291ab72b">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="124f1414-3e41-4151-a315-2bfa7e09cccc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="19026b41-ccca-4883-97c3-823163e38824" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="aeb0ac25-b7be-43a4-be62-7e04dbd6aa6d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="5cb6bed4-aa52-4dfc-bd1e-09609461ec9b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c3293747-5d7c-422f-953d-de8b468576a7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="15bc08ca-dc6a-4b2f-80b7-fe711a45019c" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="a72445c1-b054-4165-82be-81c4045779d6">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="4eee822b-3f60-4d64-8f04-de2887ac9261">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3ccbb5f8-44c9-4b03-b8f6-53810791432b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ec149c4f-2d75-4b3b-a5fb-66d71dedab94" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6e0b600f-caf3-458e-b3ff-d4e6b3cb5a87" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="5c5c0d3f-d942-420e-9474-c0753299da7d">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="2c479a62-5de9-4f7a-b3b8-d61b16a02824">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="79ddb734-e96d-44bc-897c-fb57b90350ca" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b59bf65a-290f-4cd1-acea-88560508a0ed" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="2609302a-3ace-4f6c-97de-353ac24ac218">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d3a074d8-4660-48c3-bf05-1011e79da84e" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="ea1d80aa-64b6-471e-acf5-b4d440dea019">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="d79fd025-569a-4d45-8cf1-c3ba9c463199">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="86d3842b-e5b8-4f08-b99b-b02e24cf2fc4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9ca130cd-0141-4911-925b-c46958e26441" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="718d1492-f757-4043-8ab0-2ffbf41bede6" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7f701631-99c8-4eab-84e0-75d46a798fcc" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="a5ed4f80-36b2-431d-ba2d-9c53fe6e3f0c">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="959fbf1f-0db7-4d5d-8404-a296cbdc311d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e2858a53-2e03-4a40-b0d8-7053e232d1b1" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="3e60cf15-7e20-4bde-b967-e26879ff51af" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="223b5342-0ab0-4aca-b707-e1f8382aa978" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="112ad092-afbc-44fa-8b27-983813007c2a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="917d7c50-c8b6-4d99-b6bc-1e5cc45d366c" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="99cfcf42-3544-48e8-b220-c39487ade287">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="56d4b1e0-5f6c-4284-8d93-a944881fab9d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="fb0eb7bc-a4c0-4f0c-89d8-ee39eabce494">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="150530f7-1461-41ac-a6ba-d3784260b12e" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a3708109-8254-4704-a509-a126754e4bca" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b584a630-d5f8-4451-8805-619102b611cc" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a0676bff-49ea-4c02-8c2c-d8e5f32df626" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="7e479b53-6db8-4882-a24f-aae082ca9189">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="0e0b5ed8-56bd-4c58-b708-5c683f191bc8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8ee3c61a-edc3-4f5d-a6e5-52a1f94a3d46" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="09b22ae1-8f88-48ec-acbd-a7d490b3aff0" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="14cd1772-ff50-40c3-9fb6-9a51d4b3d515">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="c49a2642-76a7-41bf-a59c-bfe34ca53835">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="14bf4c96-3f27-4539-b785-19d738670e67" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="481154a3-7680-47d7-8834-1d82386eb844" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="8fdbf12b-3de1-421d-8f04-feb345beedaf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b2f1ea2d-76fd-4061-a71c-c730d2c9a091" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTC" id="4257b9d7-49be-482b-a45b-8ef3ef54e2fd">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	funcHandle.sendCTC(seleniumHandle, javaHandle, browser, guiUrl, recipient, switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTC" id="840f9d45-f100-46f1-b3a1-133238411a0c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=11 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="1846bd70-ede9-4406-b758-7f23241ac3aa" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="64b327ee-ac0b-437c-abad-c3448bf4888d" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="53c2bf25-238f-41f9-81fa-74832a7335e2" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTC" id="c23f40a7-e8b2-4ed2-940f-2928879cf86f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Cancelled</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e5674e64-b285-4e2d-b343-7a640c978165" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTC" id="80558832-47aa-405d-a0b6-79a77709f701">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
	testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTC" id="acd1723b-02c5-4ebd-a8a5-9c01475b08d2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3e6d13cd-db91-453a-b133-3482c556c87c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="11ea6756-4d66-4e9b-8fdd-1174a9ba181b" name="Xpath: soap verson">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14f60c8-81d7-41d5-b77f-79114ea85e64" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b3bb5a3c-6664-4d19-bf4c-3acea9c8ba09" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTC" id="194f5d90-194d-42d0-b244-002915081d3f">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="CheckMail" id="05157157-f93e-4285-8ab2-5afc28bbec6b" disabled="true">
        <con:description>Check for ${#TestSuite#donor}  ${#TestCase#switchId} 
if emails for CTR and CTC have arrived.</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTC" id="d5a79364-aa73-41de-b8ff-09f68a9b0f47">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="4880fe0a-4e68-405d-a3eb-797bbd832eb2" name="NotContains: no rows">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="02a2c5a8-0d80-4f36-88de-c5ad753114a5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTC" id="87b7ba0e-0ead-4ca6-af5a-2a256e66e972">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctcDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Cancel received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Cancel received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9ee7074c-08e0-41ac-b1e0-58a099302c44" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="4f0477ea-b091-4b71-8aa5-5042b8e15078">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
import java.util.Random
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.days
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def guiwishdatestr = wishdate.format("yyyy-MM-dd")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdatestr)
String contractId = funcHandle.getRandomString(9, "4-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.5 CTR-CTRA ok-CTCH-CTP direct" searchProperties="true" id="08ddf15e-7dfc-4649-8751-98497c968fbf" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="e2ed265b-56c8-4dd4-acc8-d8be06cf5ee6">
        <con:settings/>
        <con:config>
          <delay>4000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="3ac62078-86a7-4007-a970-f17c0e2f12a3">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="24b0459d-7882-46c7-97d9-fd07bd6daf2d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");
def switchid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CTD_SWITCHID[1]", "switchId");
log.info("Testcase 3-15 dossierid "+ switchid)</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bd3a759-d9e5-4881-bf60-afe26ef43240" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="369a5c68-9914-4e1c-b573-b6b995c80581">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="898f6ddd-45b6-47d5-ba8c-ea06c797ad4c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="651bba48-e5b5-4758-9ef2-78a9cda6bae0" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="1287a0aa-31f5-43f5-a1e7-12f573fcf893" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="b45815d3-af05-4400-b407-e62024262312">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="903053da-6342-4e30-880a-0f4ef5b1073b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="55292669-7170-47d8-b025-dea1e40f7cf8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1630b40c-aa45-469c-a2c7-f76420c38f65" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="dd9c4da1-a0ab-47fb-972c-9d3ec348a654" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="ba440ec1-8c03-4fe2-9cf3-ef96ead0b769">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="be383ec3-11cb-4801-af9d-04a9fca86f0e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="d33e6e2b-8790-4e68-983a-14454ffacd04" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cadeb218-6880-4036-b9ff-119d6845cf0b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="12c11cf7-84db-45ad-a729-d813c43c5651">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c3a2de2f-d041-42d2-a911-016504aa53e2" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="216dc3ec-7d5a-49e4-af7f-a33a0758c30e">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="901939f6-9eb8-4075-b87e-8e3fd6cc9ed2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3e5cf6ba-1450-4a0b-ac13-ba6254df54a2" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5ce8f27c-2cdd-4557-b472-221431b64f94" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3cdd08d2-6052-4fe0-96dc-4d739821eba3" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2e18e5ea-acf9-4d6a-bbd1-71f1c077944c" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="7b4edc3e-0b13-4ee4-b4cc-64025af8d739">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="d10d7b78-8bc6-40cf-a704-6969a3710008">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8f1a622a-bac0-4897-a2c8-77c0cb43ed83" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="7728515e-9fed-4058-b7cc-ec934c705dae" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e9ff3407-f187-4086-8200-9c5fdf94ad6b" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="20681841-fac3-406f-a670-8f0d8a4362bd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="220eec1c-2f13-4bb6-9d84-3dcb4782a61c" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="9e622e82-e873-43e9-8747-d5246b575367">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="888a79b2-df05-4da0-9e76-cc16a09e6603" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="83617140-da4c-48e1-92a3-3d3d0b49cf39">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="48be8767-63dd-4b97-bd2e-6b148712f734" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9c3f665-02fd-417f-a931-4bae5ef4f761" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0f48f14c-2488-4d21-afe1-0b468b132faa" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a468b549-58c2-438f-94e5-c2c2edd9b4a4" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="4a25ce8b-acbf-4b8a-b0c7-2f555db4ec05">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="431af73f-362e-4a51-993b-5de1629bf597">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Request answer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ed038b67-62f6-4aa2-8b95-f2381a9cc282" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3d127954-12ef-4302-8988-68c72fac206b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="a665fea2-ebab-4b2d-b982-e8c32664e456">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="2dedb0f6-5216-49e8-bf2e-5f8f967a4d31">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="b0f6f224-4149-48c4-8e93-5fe0362dd8c4" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d4fccf19-3ee8-4122-a391-3c06892f6893" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3c574ea0-7a28-4f5d-bdd7-a72962ca91f9" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="7f333a10-5ebc-40d0-a562-83db89260595">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="51e24674-4a30-4aaf-a0ff-0e9d1024024b" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="77369b4f-032b-4965-b857-ca679616615a">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="6e9cb7ff-e2d1-4c05-a02d-8618cc0f108e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3fdace08-47bc-4a9c-bea3-eedf47960e5e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="fee31fc4-a723-4c1f-9e6c-6f48ecff9ed9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="ad681b60-0b08-414f-bf9e-288a1e48c297" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="33f28c46-f8b3-475b-b4e4-dceebd2e7e51" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="57f0af50-5ec8-4c46-91b0-ea306690ae08" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="f009c938-bd34-4600-890d-f1748e13cafb">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="d93aa56e-d798-4e4f-befc-656bf18a48e2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c700e7f-2fe8-4f40-875c-ce91c2e56070" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="e70dd803-032e-4f0c-9836-54ff6f03ff7d">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="3f77ca99-3037-4405-8814-a6efc721eae3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="92c5b2ef-5b3a-45cd-a52f-18a256b11942" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4eda4b2e-a5ed-45a8-9529-701acae315e7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="a9fa9c8b-c8a4-45ea-8c75-5375bfd023af">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctchDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="20f15037-6464-4914-9b5c-6cbf94b73f9d" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP" id="372d8cdf-5713-4bcf-95af-224092ba92ce">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA email is received
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//Get the locator of viewDetails with current dossierID
def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
log.info seleniumHandle.clickObject(byViewDetails);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="5a445e34-c22d-4cbf-8a59-38c4147131e6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Completed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>f</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cf0db72b-5d72-4c33-8f3c-9814dac4f61c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="159ea433-86cf-49fe-ab8e-88c8a448fd39">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="e900d3d1-d077-4a27-a503-b214634440dd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e4e59874-57c1-4bc8-b724-a06bd9653bba" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9fa83c34-de8a-4860-baf6-7ac169415398" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="731d9489-7f5c-4967-8f63-ddfae9bdb134" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTP" id="9740ede1-c1f1-453d-a356-f099845cba13">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="bbc7df0e-5a40-4753-9330-f57ffa390b01">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7277aa2f-e8ea-44db-b706-7f978734f32d" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bb0084c-3b0b-49e2-a89a-df1a103997ed" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="da51d5ec-f8cf-4d2b-85c1-78acb9c6cf14" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTP" id="3c28c6e5-33bc-4e8f-88f7-51b605050bd5">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="1868300c-392f-46c3-9f0d-4a51d4473497">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="95891cd3-f574-42e6-a17b-4a71fc7bf43b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTP" id="dac7d6a9-ac0f-43c2-ab99-5f65a2a2ac57">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctpDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Performed received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Performed received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a2637c9b-df25-47a2-bf61-5d827e97fb1e" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="CheckMail" id="d2c73ce5-9145-4d69-bb44-8d320d8e6cdc" disabled="true">
        <con:description>Check for ${#TestSuite#donor}  ${#TestCase#switchId} 
if emaisl for CTR, CTCH (2x) and CTP have arrived.</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="3af95d55-390f-4827-b5d6-3712dba11cce">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 200.seconds
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "15-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.6 CTR-CTRA ok-CTCH- CTP buffering" searchProperties="true" id="d604094e-6e07-4923-84eb-c50536511f9c" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="71df879b-6892-4f1a-b8f9-1c1fc3f951c7">
        <con:settings/>
        <con:config>
          <delay>5000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="7d4329b7-ec84-44c9-a9c3-0e26a3f91c94">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="5444cbae-3e87-46e5-b56c-68783e596313">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b7b10cf0-300d-425c-8ded-dd2cb727eae1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="af4a93b2-6210-42f1-91ed-83b1d24099d3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="60348e37-1b59-4849-ab8f-f57a02cfe3b4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4effe127-02e2-461e-a207-5d0e3a9efb38" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="b369e7cc-30e1-4070-919c-a549cf2f0092" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="dce7842c-d133-4ddd-918a-c778573cff65">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="b95043ca-3a44-426c-9115-71617fb5f346">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c5c8756-e9aa-4892-8267-8ad1bf31000b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ec56e512-26de-4288-89c0-dd70c6cafd4f" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a12447e1-4d81-4b63-b2a8-092e7fb9afc7" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="ba3f73e4-ff9e-4d9f-8884-c4856f24f927">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 1" id="d6992eea-0252-49bf-9a7c-844c371aaa18">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="454ac95c-2a55-4dd6-922f-dd4c2477ff41" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="68e3ff1f-7c58-45c9-9f44-9a7c36f61642" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="f0b4fda3-b71f-4ad3-ab43-81d71b60b8c4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b803b636-a081-4553-9983-a3ba276a7fb6" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="4bf5fd1f-2477-4283-8171-8d6173bf6fb8">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="8906315e-b8a5-4c22-b595-402ba16e9ac1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6adb7f19-1129-474d-aff6-2983ec84b8d8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="981c2467-1bbf-4897-99b6-4397706e7a41" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="68035c82-d307-4cc5-91d0-5be3c75bf2b8" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e1e6148b-582b-4931-b476-b18361b2cec0" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="68fa57d5-78c5-41b7-a413-5f85b587fab8">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="e11fa434-bdbb-43e4-982c-82c06115c450">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="25caea45-cd2b-4695-af19-cc1e96a5a326" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5066797c-85d5-452e-8616-bf59d9408ff9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="22665889-4670-452d-be9c-d18e8dcd5414" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="d57eac3e-6978-4478-95cc-a3f4a8fd1e70">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7f0cc596-3a89-4ba2-9a43-98ea2cc22eb0" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="1320e082-7f0f-42e7-8f7f-bdc3986a2068">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fecee2f4-6018-4cb9-9ba5-bc26713382b2" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="2f7b9ae4-198a-42d7-9240-78d75fde4d72">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="79147a31-d4bf-40fb-a58e-5310e4367ab8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="574bc501-120a-4908-b010-f6f094dc7005" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="79cdff75-3ffb-4bcb-b664-f4d879a12cd1" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="88ecdf00-6bea-47d0-96d9-3f46bb848b98" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="da9ec699-dc88-4802-afb3-087351b308ef">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="dfdd9881-b84a-4727-8315-01d8e71757b0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="23f1d523-a83e-4d11-a6f5-b17c0a2f39bd" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="798e9f12-c593-49b2-b7bd-05393eaef0fc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="cbaf65b2-c2c1-4e96-aba2-eb7cfff34b9c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="b2c9b7c4-a3a2-4d83-9fcc-e3c1a60514b3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7e970475-02b9-4c7f-a1f3-665169a6076f" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14be091-b057-4eb0-a004-040d372ea524" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f7fb5af1-2779-4a59-8941-cffbd64b24fb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="dee9a5bb-3a65-439c-b3ac-cb3a4a4809ef">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="071ad9aa-521f-4d8c-ac37-6c82b595d630" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="3a1f5bc0-ab3d-42c0-95e1-3180ce509dd3">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="a67b6e25-744e-4c12-a565-48fdb36d0934">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e6a6376-47e8-4488-a3e3-4295890430ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="a821842f-dc87-4f8f-b6c6-16fff5cfb98a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="b1916a4a-a3c0-4040-b443-6708be1bb1be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f41c4707-6bc0-47af-8b89-5966be4bed5e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="17662f0c-57ed-49c3-b386-b2c9b7a92b7b" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="53906aac-07ad-4198-b749-354d16ce9d5d">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTCH1")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 3" id="02149ae2-839a-49b8-be27-be8e1f576d51">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="727baafa-d3ca-4849-9627-f1217698c6c1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="5d6cb878-dc36-4d00-af50-f19a3427270c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 4" id="be408638-55cb-489d-bca1-3dc73dd5beba">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c945630f-2975-46e8-a81e-8c5b768e8af3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="76226e45-1105-4df1-aecd-8531fcf01410" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="862903f7-fd70-4f5f-82f9-6aeeae6b4c8a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctchDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4b4fe66a-a99b-4d89-92b1-fb8011026cf8" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP" id="d3afada8-bae7-498d-8df7-bed25d2e609a">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA and CTCHA(2x)  emails are received
//verify for ${#TestSuite#donor} that hte CTR and CTCH (2x) emails are received.  
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//Get the locator of viewDetails with current dossierID
def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
log.info seleniumHandle.clickObject(byViewDetails);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="fefbeb1f-8a03-46ad-8040-3b8297434094">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="496451e3-821f-45dd-99e0-c700a09fe438" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="eb384a15-f42b-40c2-9d1d-d0113997fd2e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="1469bcd0-8b34-4249-aded-953adddb4f3c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="2cabc994-574c-4298-ad59-f9cdd980101f" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1ba79aa1-e9dc-4092-883e-577b121b4203" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="139a6094-2a80-4d16-9945-88953ba3143c" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="46aaef75-8e51-4e7f-9764-aaeb3bccc087">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cd7e1363-f59a-4d4b-aba5-2539c517c9b7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
import java.util.Random
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.days
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyyy-MM-dd")
// chcha proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "14-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.7 CTR-CTRA ok-CTCH-CTC" searchProperties="true" id="9c7bfc8f-7256-4029-b0f9-65df91305e07" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="27222360-4ff7-4669-803c-9023e3821760">
        <con:settings/>
        <con:config>
          <delay>6000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="18cbb8f5-2e8a-4157-bee5-ae5bd5ef584b">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="b8d7c2b5-efda-48ce-a03b-a8170190cf12">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="19026b41-ccca-4883-97c3-823163e38824" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="50fad626-15c0-4373-9fe1-70eb8409ad94">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="5cb6bed4-aa52-4dfc-bd1e-09609461ec9b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4387e52a-a09b-4c0a-b52f-aa7ae1ee33e6" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="1d7891ac-1c0b-47bd-b1ae-c182b3968b25" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="dbd10c47-7efe-4d08-bcc8-7baf452f2458">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="0bd79c8b-777b-4f78-93db-cb02c6cf42d6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3ccbb5f8-44c9-4b03-b8f6-53810791432b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ec149c4f-2d75-4b3b-a5fb-66d71dedab94" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6e0b600f-caf3-458e-b3ff-d4e6b3cb5a87" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="7dbe9727-fe4f-47af-9994-7e4cc9aababe">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="c604913a-d8ba-4cae-b3bb-ff30cee9080d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="79ddb734-e96d-44bc-897c-fb57b90350ca" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b59bf65a-290f-4cd1-acea-88560508a0ed" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="cde6cb4e-30cc-44e0-b4fa-b2b307358d05">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="653f5dc1-dd36-41de-b5e3-88e39748826f" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="3cbaded1-514d-4c26-878c-b154bb994e8a">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="ba36eb32-bbe7-4226-aebb-fa52ed055ae5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="86d3842b-e5b8-4f08-b99b-b02e24cf2fc4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9ca130cd-0141-4911-925b-c46958e26441" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="718d1492-f757-4043-8ab0-2ffbf41bede6" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7f701631-99c8-4eab-84e0-75d46a798fcc" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="3f492f75-2010-4eca-a96d-fd31a971ad7d">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="8808ab57-d259-435b-8a95-074b13319b73">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e2858a53-2e03-4a40-b0d8-7053e232d1b1" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="3e60cf15-7e20-4bde-b967-e26879ff51af" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="58e92d52-d059-41ad-8915-def87a7b168a" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="47481ae9-c772-4687-93f3-cd3fa64fd79e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="917d7c50-c8b6-4d99-b6bc-1e5cc45d366c" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="5bcb22d8-cfd4-478f-9eb9-f8344d984b7e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="56d4b1e0-5f6c-4284-8d93-a944881fab9d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="b7cb7971-9985-4c11-8a59-a15cd38c0d95">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="150530f7-1461-41ac-a6ba-d3784260b12e" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a3708109-8254-4704-a509-a126754e4bca" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6f24ce48-7618-469f-9570-7bbb6ce5fc76" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="bc79cf07-6e04-4ff6-989e-26058cdb37cd" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="c8f05a7b-11c5-4cf4-970e-7aca5b9e9067">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="5ae4a8c5-b431-4f36-ae81-4964f058d35e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8ee3c61a-edc3-4f5d-a6e5-52a1f94a3d46" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="09b22ae1-8f88-48ec-acbd-a7d490b3aff0" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="d34b80e5-7bcc-4adb-aec0-f1fd3e8b7d58">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="f081cfc7-55ec-4dc9-8340-9d0eca855c14">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="14bf4c96-3f27-4539-b785-19d738670e67" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="481154a3-7680-47d7-8834-1d82386eb844" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="731e2396-518a-4818-b61f-e1e17ef5cae2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="acc6acd1-b02b-49c8-bf06-765d4d02ab3b" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="c88257e3-062a-40e1-aacd-ed6e8996731f">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="eec395cf-0ecb-4394-87b4-a02e0c48623f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3fdace08-47bc-4a9c-bea3-eedf47960e5e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="04989db1-9165-4737-86c3-01356c5dd140">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="ad681b60-0b08-414f-bf9e-288a1e48c297" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="42a3604a-15ee-49d7-9754-41276cf6a3aa" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a5558dbd-d868-4b47-a03a-99af3f5f5659" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="ecbf1ea2-5cd5-42c3-aa4e-7d53cf7d9bd3">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="8ada82f4-412a-46eb-a2de-be274fe11b49">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c700e7f-2fe8-4f40-875c-ce91c2e56070" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="82bc38c4-58b2-4e40-8e26-22e8f8e758ec">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="5221a529-e474-4b0d-ada0-a5ba63aa2a2e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="92c5b2ef-5b3a-45cd-a52f-18a256b11942" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4eda4b2e-a5ed-45a8-9529-701acae315e7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="a9c63a9e-00f8-4c55-a890-96c3fa8961b8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctchDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="255b3979-dbdd-4059-bbaa-d1e474d00fcb" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTC" id="85bfc783-6258-4d58-b100-5aecc254531d">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	funcHandle.sendCTC(seleniumHandle, javaHandle, browser, guiUrl, recipient, switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTC" id="58d8ace3-cf2b-47bb-affa-597b2213b007">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=11 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="1846bd70-ede9-4406-b758-7f23241ac3aa" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="89097206-dc4d-4a94-bf0e-2dbc1e4e94c3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="551c6a1b-73b5-40f4-be9f-870997ff3390" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTC" id="dfde6cb5-9d41-49bb-9a45-55635283c5c8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Cancelled</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e5674e64-b285-4e2d-b343-7a640c978165" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTC" id="14a02273-da5c-470b-b28a-53856957a66f">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
	testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTC" id="04d6a64b-f188-4b14-a01d-b67a811c56c3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3e6d13cd-db91-453a-b133-3482c556c87c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="11ea6756-4d66-4e9b-8fdd-1174a9ba181b" name="Xpath: soap verson">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14f60c8-81d7-41d5-b77f-79114ea85e64" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b3bb5a3c-6664-4d19-bf4c-3acea9c8ba09" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTC" id="5499edee-a140-4b0f-ab2b-799b66c38bf0">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTC" id="1841a02a-d744-4902-8821-a78fe886635b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="4880fe0a-4e68-405d-a3eb-797bbd832eb2" name="NotContains: no rows">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="02a2c5a8-0d80-4f36-88de-c5ad753114a5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTC" id="cee1f4f7-edee-471d-af21-285ea8810101">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctcDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Cancel received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Cancel received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2a1f97b2-2cdf-48be-b006-09124d6520d4" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="CheckMail" id="ba6529b0-8864-44b7-b678-aa65f3670373" disabled="true">
        <con:description>Check for ${#TestSuite#donor}  ${#TestCase#switchId} 
if emails for CTR and CTC have arrived.</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="52f27536-22df-4fb3-8467-bf0d5a5865f5">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 200.seconds
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "15-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.8 CTR-CTRA ok-CTCH-CTCHA OK-CTP Direct" searchProperties="true" id="e52b9d54-82fb-470e-9775-161933ab3391" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="564d41a5-35b6-4719-9b06-a640ca291342">
        <con:settings/>
        <con:config>
          <delay>7000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="ba146115-1e78-45c1-85e2-fd14b55a0485">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="e99e4911-5e3a-4ffe-a237-f2f64509c7f1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="bc7d5e6d-e2ce-4678-961a-4bed06c24de5" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="e4369b26-7f7f-48d5-84de-66abeff8e952">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="e16c88de-a3d8-4bbf-9708-469b40ddcde5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="da4ec4d0-bd85-44ea-90eb-eb7e851fe902" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="b4c79f40-987e-40ed-b54f-a6d60cdd2de0" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="01938971-ac81-41d9-a169-9cbbfa388204">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_ST Table_NoSend_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="3aff5009-a121-40e0-a86a-579c1242085d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="58dd4262-1e01-4085-8f11-e8800c5d88be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0e28d734-e392-4f26-9c0f-eb6f0b7d6abf" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9d984b35-fec5-4420-985a-d949389686fb" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="b248eb36-4a73-408d-b684-9cf89b16f338">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_NoSend_CTR" id="490db61a-47cd-4894-afc6-1cd4c5483fab">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and st_message like '%${#TestCase#switchId}%'</con:query>
          <con:assertion type="JDBC Status" id="cc45d6ef-2316-4378-b582-f321b46f2cc1" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="9dc2a7bb-7c16-4bd1-980b-734fceb80acc" name="NotContains: Not Contains" disabled="true">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="3e3359e5-2ce4-41a0-9e68-fb9f2bc3cad2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2e3dc447-7d93-48d1-8e69-832ef1fa667d" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="7776125d-1845-4440-8e9c-39d4b2d69252">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="390514ab-ac69-4190-928e-ff87725fe194">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f768c42d-88e9-41c9-a0b2-8d05cd171719" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9155beb2-508d-4306-8bfd-4e9e85cdafb7" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ad16e040-b3cc-42da-b28e-88ef0a648479" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b12f671e-b338-4683-b415-be81a185763f" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="e80c7049-c865-4f07-a767-f56db0797238">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="13c7afd7-5602-49a3-95d2-9d90c3c16879">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9569e434-49ab-4e45-a050-80ba0e196e2b" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="cdb4ab0d-32f0-4676-9d1f-90b5597e6307" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="82099442-4019-4124-9f81-daffc6b76ac3" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="93c60b5c-6ce0-4267-a339-4ad533ef268f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0698abb2-b5fd-487f-b97c-78ded47ab78d" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="96c2d25b-c015-4f72-9798-38705a14e7eb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e40439fd-a28d-447c-b44d-3fb2c6ef4dea" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="1a1ed5cf-fa84-464e-93ec-60b9b720a2c7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="aee83c84-1f40-4d13-a66d-1b6209582295" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d53ba6f3-831f-4961-a4f2-a1f4e5790824" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d9e4ebfa-60c5-40af-b271-45cb2b780166" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8d1292e4-3d5c-415d-b962-e64b337505d0" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="c7bfe848-1d44-475e-b6fe-5037e2632473">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 1" id="4ba6bef9-562d-48cb-bb74-99f2c0e34ab9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9" disabled="true">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match" disabled="true">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="81ff77ff-f8eb-43aa-b40d-42cb951150d9" name="Xpath: soapversion" disabled="true">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e149e04-50b1-46af-b467-8b543fca4616" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="57c3324c-e4b2-4f9f-8a65-73fa1a518b15">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="d704b97d-c5d0-4867-8d55-50d66fb03817">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="b6d5ae98-57ce-4e00-9ffd-14dd43eb4e5f" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="043760f7-0e54-48ca-ac4e-540aefdf7d3b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9e6eb0ac-6236-43c5-95f1-c9a11a24dd0d" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="59dda0b8-22ea-455b-8d6f-2885c2e67bee">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eed74edc-4675-4053-9871-cadbe07c3c55" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="82669aa6-a4c4-4757-8633-d26a6f07b76a">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="1300a454-1eb2-42a5-a298-999c6f59101f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3fdace08-47bc-4a9c-bea3-eedf47960e5e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="f1ac4d6b-7267-410e-8f0f-8c968ec7cabc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="ad681b60-0b08-414f-bf9e-288a1e48c297" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c995d23e-2a8b-4f83-9400-d8f3d2bd1039" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="326e2313-9c21-4577-9b73-177501a90a12" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="37dcea5c-be1d-45e1-8f50-1183afbbc81f">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="4c677a3a-6c12-47bd-96f1-84e5ed8294b8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c700e7f-2fe8-4f40-875c-ce91c2e56070" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="27b50bec-0cc8-4f16-bf58-0c0120b1f6d1">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="aa43646c-6c18-4c0b-980d-05a0b922e245">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="92c5b2ef-5b3a-45cd-a52f-18a256b11942" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4eda4b2e-a5ed-45a8-9529-701acae315e7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="bdcaacf5-e603-4294-bd35-645f3a6f5795">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctchDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="bae7f12a-b364-4696-b33d-4cd85f42ca3c" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA" id="2dcf6c27-7994-4073-9eb9-736fbe9a7b55">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="7fc9b221-fe55-4633-922f-cd1e79288b05">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f6c05a55-b26f-4bd9-b303-56461538a8a2" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="74a35f65-5182-4f24-98a9-1e5e0391bbd2" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b2830046-1c9f-48e7-8767-c86370a584e3" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b6f9264b-b68d-4956-a328-72471efe5330" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="77694ec6-9111-42ff-8b3f-4c78c8dde487">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="2969c5d1-c716-4bdf-addf-5fea0390252e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d0e1985e-6e3e-45cb-b8b0-b45a21f9a2bd" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="fad17aaa-1f6a-4473-b040-bdb4a0c1356f" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="73ea4532-23e9-460c-95c6-918ed7988a34" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="efdf4321-8923-4342-b755-83f8e20f3c6a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="64a67ad5-82d2-4b22-9a8d-02b9ead1c738" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2fb6578c-865a-470f-aeea-249ec110fc48" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="8e17ec30-3c67-4209-a636-a9213306a108">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d39811c4-2232-47ee-ba08-6ba3ca210866" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="af8a9c23-57b9-4f46-a2f0-69bcd2ab4af3" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="7f666d6c-b6f6-4e67-a526-5a16a76501ee">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="bd859157-dcc5-4ef6-9e3c-d9b4efb1f01c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7a0a25ac-22bc-4ade-88cf-3ad103b2398d" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="46dc64ac-1610-47f1-b59d-15a3946e680b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="78202b72-f36f-4c19-9fa2-398ce031ce4f" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP" id="a1eccbf4-9e72-4957-aa94-13965ebf4d6f">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA email is received
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//Get the locator of viewDetails with current dossierID
def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
log.info seleniumHandle.clickObject(byViewDetails);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="5019ecdd-4945-4565-bcec-6b7047742665">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Completed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>f</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5d1906d9-833e-4c0e-a60e-6f721ded678c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="4df44498-a285-4062-9583-76b9f789ad69">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="9522087d-47b9-4f57-a36e-06f3b8b0df6e" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="689c2dfd-26df-407e-8399-08b09685c0bb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="63689743-96ab-413b-9423-fcc0ac1839c4" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTP" id="9063b503-00da-4261-b123-01d492bbf1ca">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="3687cebb-f30a-4411-ba21-616fdb637651">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7277aa2f-e8ea-44db-b706-7f978734f32d" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bb0084c-3b0b-49e2-a89a-df1a103997ed" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="da51d5ec-f8cf-4d2b-85c1-78acb9c6cf14" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTP" id="6c4c1735-dd12-4077-8d27-37676e722c3d">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="0b57c423-4215-45e7-a4d3-122dd5d3ad42">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="95891cd3-f574-42e6-a17b-4a71fc7bf43b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTP" id="51bd8fa3-aebe-462b-88f8-6fe82877c431">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctpDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Performed received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Performed received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a2637c9b-df25-47a2-bf61-5d827e97fb1e" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="f3444bbb-4b3b-4e3c-93d1-55f9243b6878">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 200.seconds
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "15-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.9 CTR-CTRA ok-CTCH-CTCHA ok - CTP buffering" searchProperties="true" id="69128a6c-cb5d-48f8-91b4-b681a9cd3a90" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="91954931-4836-4893-996b-3b091725d372">
        <con:settings/>
        <con:config>
          <delay>8000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="3fade11e-6b38-4b94-a619-ef451f6bcd60">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="0c4dff70-2578-4c23-9f8d-68badd760584">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b7b10cf0-300d-425c-8ded-dd2cb727eae1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="743816e1-4e5e-4d78-a5ea-0f2aa4f124bc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="60348e37-1b59-4849-ab8f-f57a02cfe3b4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="67572f4f-dcf7-44a2-8f6b-535e7ec5bf11" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="964bfcb8-9949-42ac-840f-f7cb45b946ef" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="cc5d1726-d737-454c-b61f-dd6e333b8b88">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="d5af3a4e-7f5a-479c-a522-782eee325abe">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c5c8756-e9aa-4892-8267-8ad1bf31000b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ec56e512-26de-4288-89c0-dd70c6cafd4f" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a12447e1-4d81-4b63-b2a8-092e7fb9afc7" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="1741ad92-5484-427e-8579-c3674dec990b">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="07477989-c1f4-434c-b86f-1de31848c87a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="454ac95c-2a55-4dd6-922f-dd4c2477ff41" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="68e3ff1f-7c58-45c9-9f44-9a7c36f61642" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="4d5be48d-cf2a-4cfc-8c3e-32c53c908036">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="73be6011-abb6-483f-9057-0caff8907701" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="3366a579-764c-402f-bbad-0bdaca73415c">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="b241388d-e6b4-4481-a8ef-3d46ce72cc1e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6adb7f19-1129-474d-aff6-2983ec84b8d8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="981c2467-1bbf-4897-99b6-4397706e7a41" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="68035c82-d307-4cc5-91d0-5be3c75bf2b8" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e1e6148b-582b-4931-b476-b18361b2cec0" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="add36b37-c93a-47b8-b93d-3e3333e43859">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="3645997a-8cad-4056-a858-a497bf1a951c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="25caea45-cd2b-4695-af19-cc1e96a5a326" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5066797c-85d5-452e-8616-bf59d9408ff9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="1900c638-45c3-4bf3-9c89-59ac2839cb89" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="48817a55-161a-4bfb-b779-769afdf0a172">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7f0cc596-3a89-4ba2-9a43-98ea2cc22eb0" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="a48df363-7c0f-4fc8-99ba-ee9cf1222ef4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fecee2f4-6018-4cb9-9ba5-bc26713382b2" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="1777ec6f-1b51-4aa9-b3c1-e4fb06f4e2f9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="79147a31-d4bf-40fb-a58e-5310e4367ab8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="574bc501-120a-4908-b010-f6f094dc7005" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="42ada0a3-2abd-4217-b985-731388b2f8ed" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="2543cfb6-2c78-4476-8e8b-d5fc29cc6a97" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="47250989-904a-4948-bdab-a7a8a6c3e924">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTRA" id="64d46fb6-81cd-4c07-aab6-ba69a32a9efc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="23f1d523-a83e-4d11-a6f5-b17c0a2f39bd" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="798e9f12-c593-49b2-b7bd-05393eaef0fc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="dc4cfd98-1b7d-4a5f-ae0d-39c541553228">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="6146cc3b-414f-4b45-85bc-f8f546f8b01d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7e970475-02b9-4c7f-a1f3-665169a6076f" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14be091-b057-4eb0-a004-040d372ea524" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f7fb5af1-2779-4a59-8941-cffbd64b24fb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="c0124d51-2a56-4559-993d-8a9aa9cd79f7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ffa2ed61-8b83-42ed-b5b4-256982f113b8" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="e9ca3ff5-6a63-48f5-b725-ff4ee53d1a68">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="83082b22-6551-4994-8753-da2abd10a35d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e6a6376-47e8-4488-a3e3-4295890430ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="6e31883d-a64e-4bf6-88ff-447c45322854">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="b1916a4a-a3c0-4040-b443-6708be1bb1be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1af75c3f-da23-4526-b274-fdc7cdc444bf" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="ea202156-1b36-4ec3-8803-eaf5f6ff8e54" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="fa21bcde-0e1f-4001-b12a-39b15953890c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="09fa2dff-dff1-4f41-b181-59484b999819">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="727baafa-d3ca-4849-9627-f1217698c6c1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="1726382c-7966-45f0-8fbc-0d0fefa11a8c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName("CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="4f933f76-2156-47ba-a668-e7e31586402e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c945630f-2975-46e8-a81e-8c5b768e8af3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="76226e45-1105-4df1-aecd-8531fcf01410" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="78a77d74-b5d1-463b-a484-0616ebc96898">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctchDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="912e6893-abf4-487c-8344-389ab8d2fe47" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA" id="21c86f78-5961-4329-a626-9ae64b75822b">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="e035415e-6869-4183-98f5-78cca3297cfb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f6c05a55-b26f-4bd9-b303-56461538a8a2" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="74a35f65-5182-4f24-98a9-1e5e0391bbd2" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b2830046-1c9f-48e7-8767-c86370a584e3" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b6f9264b-b68d-4956-a328-72471efe5330" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="2cb0cc3b-c3a9-4967-b35d-6dd662654e2f">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="ce40ec71-56ae-4bf7-9725-965d4e263133">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d0e1985e-6e3e-45cb-b8b0-b45a21f9a2bd" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="fad17aaa-1f6a-4473-b040-bdb4a0c1356f" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="68d98291-747f-4017-80bb-9311aa7a1f9b" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="edbeb053-7fb5-4fa5-a086-b7a26e37d0df">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="bd859157-dcc5-4ef6-9e3c-d9b4efb1f01c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="44f3f4df-5f57-4fed-865f-422fd130d926" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="1b4aaa69-1d25-475f-b37b-04e1fc1905ef" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP" id="63cf9817-c6b2-437d-8163-7d2c05778cd3">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA and CTCHA(2x)  emails are received
//verify for ${#TestSuite#donor} that hte CTR and CTCH (2x) emails are received.  
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//Get the locator of viewDetails with current dossierID
def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
log.info seleniumHandle.clickObject(byViewDetails);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="86b74895-4d54-47ab-90c5-2196a0139ecc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="496451e3-821f-45dd-99e0-c700a09fe438" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="e7788702-4909-47cd-b4eb-1fb0d327f573">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="1469bcd0-8b34-4249-aded-953adddb4f3c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a352c81a-1516-495b-8296-a072ae8a5072" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a0011450-9307-4929-9c38-16751471c7f7" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="f02427c0-eb06-476c-9c91-664ca7f6718f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cd7e1363-f59a-4d4b-aba5-2539c517c9b7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
import java.util.Random
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.days
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "14-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.10 CTR-CTRA ok-CTCH-CTCHA ok-CTC" searchProperties="true" id="64f8b42b-ff95-490f-b725-97fa0149783f" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="a611de28-5c8e-4cc7-84d9-912fb2a510aa">
        <con:settings/>
        <con:config>
          <delay>9000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="6b54a7f8-90fc-42f4-a52d-4d037f92d33b">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="a646b4c8-c15c-496d-8bb9-9cda8188b7ee">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="19026b41-ccca-4883-97c3-823163e38824" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="6324a716-145e-4c71-9c4c-f3183e5d47e1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="5cb6bed4-aa52-4dfc-bd1e-09609461ec9b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c494f12d-52b8-483c-9ebf-c590036b24e8" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="b612c3df-d344-47ad-874b-06f1287242ed" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="d6b50d87-d44c-47b5-a76d-242318c298ef">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="5b36fb53-a256-4a98-b167-0d5bbe6d45b0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3ccbb5f8-44c9-4b03-b8f6-53810791432b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ec149c4f-2d75-4b3b-a5fb-66d71dedab94" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6e0b600f-caf3-458e-b3ff-d4e6b3cb5a87" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="039b42be-8994-4aa2-a8b7-2ba7f204ac7e">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="b8e9db33-7987-4f36-bcef-0f99b5810861">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="79ddb734-e96d-44bc-897c-fb57b90350ca" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b59bf65a-290f-4cd1-acea-88560508a0ed" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="9b5211d7-77bf-4d36-812e-4454ea693c1f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8d24ec92-6e3c-4fc6-b437-b6530d092e57" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="149e4d1c-3c75-4f7c-9d10-36c6ac588049">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="e3cc9eda-7395-480f-b5e8-16a53650225d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="86d3842b-e5b8-4f08-b99b-b02e24cf2fc4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9ca130cd-0141-4911-925b-c46958e26441" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="718d1492-f757-4043-8ab0-2ffbf41bede6" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7f701631-99c8-4eab-84e0-75d46a798fcc" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="d7c63628-a702-4482-9533-6a1f03dd1964">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="79977194-d571-4d5a-915d-867379f89f02">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e2858a53-2e03-4a40-b0d8-7053e232d1b1" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="3e60cf15-7e20-4bde-b967-e26879ff51af" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="44bbc2b8-f766-4d2b-bd21-f12bb6d80c51" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="97807807-2bb8-440b-bb78-88116532aff9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="917d7c50-c8b6-4d99-b6bc-1e5cc45d366c" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="41dbbedf-3a3e-4ac3-8978-f1ea81fd0573">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="56d4b1e0-5f6c-4284-8d93-a944881fab9d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="f1e10250-f12e-4fe0-97f3-cd540996c598">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="150530f7-1461-41ac-a6ba-d3784260b12e" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a3708109-8254-4704-a509-a126754e4bca" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8e10fc56-2bb7-4ea1-8e6d-6c215a4bd018" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="db52ae05-d3d9-418e-86fe-9bc01fc41b8f" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="d057efdd-d7f3-458d-8804-2ef61838161a">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="d9014bd3-ccb5-4209-8dbb-bd2a1988eb34">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8ee3c61a-edc3-4f5d-a6e5-52a1f94a3d46" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="09b22ae1-8f88-48ec-acbd-a7d490b3aff0" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="6d4ee174-e707-4080-8eac-d809640650b3">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="e4048ba7-18ec-4683-a1b6-8766bb6e57cf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="14bf4c96-3f27-4539-b785-19d738670e67" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="481154a3-7680-47d7-8834-1d82386eb844" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="ebe61bbd-57c1-4130-920b-2738c579eb40">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e5316972-6e56-4614-928f-bbc2747973e4" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="745b0edc-4875-4665-9b9c-4f48e198a348">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 3.5" id="8a13bb4f-3762-4774-9985-781a8d9a558a">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="d26b4065-1972-40d3-99ff-fa798a2093d2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3fdace08-47bc-4a9c-bea3-eedf47960e5e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="0fc62072-d2df-4636-95bd-5b8d8185e7e0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="ad681b60-0b08-414f-bf9e-288a1e48c297" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="35e224b8-3063-4db1-b323-7509140cc798" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="2418ac3e-e9ee-4c18-9a74-591e89235377" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="57c7d274-02f5-4cf2-a5ae-880ad8f3b3d0">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="1850d80a-94fe-46cf-b628-787b0651b0cf">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="209b03d2-d00c-4fe7-9367-65b50461aa78">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c700e7f-2fe8-4f40-875c-ce91c2e56070" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="02463c54-d956-42d1-960c-bce550edb19b">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="af9d93ba-bfb2-4d88-b8e9-44929ffb18e3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="92c5b2ef-5b3a-45cd-a52f-18a256b11942" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4eda4b2e-a5ed-45a8-9529-701acae315e7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="ea2881d6-5a99-4f2e-9cfd-b1baca543b8e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctchDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e02263d5-3703-4d9c-9f07-6b321451b91d" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA-ok" id="29661f9b-7787-427b-8727-a371bf67f1ff">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="e3d37557-509b-4a30-8d88-d1d16bf97ed3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6ee43c8a-8179-4b8b-99de-a54cad403eea" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ef4fbbec-1996-4949-9882-fda763dcf75b" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="86353aff-c597-49d4-97aa-7f4e6c726ceb" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4d795ad0-f3d1-461c-940d-6fb3388e3857" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 5" id="a106e45b-f588-4442-9858-5a50bdbe5ac7">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="9082f239-83ea-4d3b-b19a-e2dac2ad08cf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3d01c165-e789-4b28-b4ba-3f174e134d4e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="68c73d81-5268-4ee7-a703-2fad5a130969">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="c3187f36-a87e-4d67-b276-21ac6f07ff04" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1ca7f913-4ce4-4ab7-b873-8f20b54824b5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="7409c2eb-2aa2-4737-823b-f8347e1053b8" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA" id="2231f2af-1375-4603-ba6e-3e3e137f8f39">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA" id="c52f0be0-099d-4b7f-953e-2c179f10945c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>N&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: wishdatetime">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no proposedatetime">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ccfc2241-1cdb-4dff-bb24-778613b0f6b6" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b5ee25f5-203e-4bb4-ae9f-1868afb6b0c9" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA" id="2b149593-8c96-4afe-935e-8fe00fbe234c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA" id="1f27e7f7-d666-40e6-91f7-e4c09647b6a1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="c2706c6f-8d75-4352-8ef1-2ab778814a86" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6384b2e5-d4b6-456b-b24c-48276ee22caa" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="52bc65c0-4c74-4be2-9ede-a621fecefa81" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCHA" id="b831a7f0-a72f-4b4a-9732-fe0f6e23c41c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctchaDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>ChangeAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a8812634-58f4-45c5-a200-565f49cbbbf9" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTC" id="b3e4880a-3719-453e-816d-7f0486c119b5">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	funcHandle.sendCTC(seleniumHandle, javaHandle, browser, guiUrl, recipient, switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 6" id="b7023400-7571-4d20-bb5a-a1699c39af21">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTC" id="1d9c33ee-3add-48b7-8f41-ea8ca9c1bf2e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=11 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="1846bd70-ede9-4406-b758-7f23241ac3aa" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3c0085bb-4cff-42d3-81de-6006d19dc5d5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="5ff24872-11d0-44d6-a6d2-63b33579d4e1" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTC" id="9f43ac4d-d1b3-4385-a1f0-aca17ef0ddae">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Cancelled</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e5674e64-b285-4e2d-b343-7a640c978165" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTC" id="2fc2e8d6-c00a-4a52-b882-0c33ea8f7039">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
	testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTC" id="d5463604-6050-417d-a5ab-b9908b84ad67">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3e6d13cd-db91-453a-b133-3482c556c87c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="11ea6756-4d66-4e9b-8fdd-1174a9ba181b" name="Xpath: soap verson">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14f60c8-81d7-41d5-b77f-79114ea85e64" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b3bb5a3c-6664-4d19-bf4c-3acea9c8ba09" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTC" id="69271cda-a613-4fc6-aae4-f0c094cc80ee">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTC" id="b7ce4f06-4871-4e58-b237-28f84b38366c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="4880fe0a-4e68-405d-a3eb-797bbd832eb2" name="NotContains: no rows">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="02a2c5a8-0d80-4f36-88de-c5ad753114a5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTC" id="a5f8af38-4a24-4e4e-85cb-dfb6b80b45c3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctcDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Cancel received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Cancel received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2a1f97b2-2cdf-48be-b006-09124d6520d4" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="1020b6db-2b8e-43a7-8261-0dab2c691121">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "15-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.11 CTR-CTRA ok-CTCH-CTCHA blocking-CTP direct" searchProperties="true" id="6270900b-ab31-4d64-989e-2b6d3b92a6c0" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="c3b858d0-eec1-4910-8657-735a1cc1065e">
        <con:settings/>
        <con:config>
          <delay>10000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="59c58066-7cd2-4684-a108-cf5788a0e50f">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="8a8538bb-af79-4f82-8976-3c1ad0a6fe9e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b7b10cf0-300d-425c-8ded-dd2cb727eae1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="32e9b23a-c416-450f-bea7-1c0ab7efb694">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="60348e37-1b59-4849-ab8f-f57a02cfe3b4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a6c43226-fcc0-4678-8d04-3979f511a354" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="3014e76f-d56e-4792-ab6e-dd8031184c78" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="1ec4b43d-6e54-4f0d-a97f-2ad7d18805ca">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="72f536ef-187a-4542-aff3-73528c085a10">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c5c8756-e9aa-4892-8267-8ad1bf31000b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ec56e512-26de-4288-89c0-dd70c6cafd4f" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a12447e1-4d81-4b63-b2a8-092e7fb9afc7" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="2958e8dc-2bca-4935-ba61-e7cf030ef21e">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="f5dde10c-e766-4452-a36e-4843d8304294">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="454ac95c-2a55-4dd6-922f-dd4c2477ff41" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="68e3ff1f-7c58-45c9-9f44-9a7c36f61642" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="47e3d307-878b-4fab-86fa-d7ad0bae64f7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0bae3fce-3e6b-4611-97b0-2ce1485fd02e" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="0120d66d-0674-4f0d-a35c-bc4237f05db2">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="342f9e9e-8a57-448f-931d-8e69c07ab5f5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6adb7f19-1129-474d-aff6-2983ec84b8d8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="981c2467-1bbf-4897-99b6-4397706e7a41" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="68035c82-d307-4cc5-91d0-5be3c75bf2b8" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e1e6148b-582b-4931-b476-b18361b2cec0" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="11c67ac6-2a3c-4bd8-809d-e6a9f0c0ea82">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="60971615-567d-4f95-a9e0-4e63d0108b99">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="25caea45-cd2b-4695-af19-cc1e96a5a326" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5066797c-85d5-452e-8616-bf59d9408ff9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="05265629-8452-4ad6-98e3-d57439fa5375" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="d2d0294a-a8af-40f2-bd34-1b0aef794689">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7f0cc596-3a89-4ba2-9a43-98ea2cc22eb0" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="2c8ecd6e-764a-43eb-bd2c-72219e552c04">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fecee2f4-6018-4cb9-9ba5-bc26713382b2" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="290245fe-3786-42e8-b7a1-0b4c7880edaa">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="79147a31-d4bf-40fb-a58e-5310e4367ab8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="574bc501-120a-4908-b010-f6f094dc7005" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="27ed2eaf-e0c5-4ef4-ac7b-b1723ba44504" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="24915e11-6175-4e14-a4c5-d297c6d67c8f" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="0103522c-adde-4a6a-9670-f03538a94c28">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTRA" id="8a286e53-480d-46e3-b683-a50ca3b0215d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="23f1d523-a83e-4d11-a6f5-b17c0a2f39bd" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="798e9f12-c593-49b2-b7bd-05393eaef0fc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="dd733f8c-e908-41a5-aa6a-0838cb34a364">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="d355dc43-aab2-4790-badd-ea317aa10fba">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7e970475-02b9-4c7f-a1f3-665169a6076f" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14be091-b057-4eb0-a004-040d372ea524" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f7fb5af1-2779-4a59-8941-cffbd64b24fb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="ead85107-c605-4c3c-bd7e-1a71fc0679d6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="eeb9715a-3be2-454d-8a48-529ee57f3b81" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="edd09e19-34d7-4bdc-953c-8e4c8fbd01a3">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="b47e85e0-6e75-4dd2-8f0f-44403af5d067">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e6a6376-47e8-4488-a3e3-4295890430ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="0caa8a4a-f778-4882-900e-1f5f9f5bd51a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="b1916a4a-a3c0-4040-b443-6708be1bb1be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d6b5fe4d-3e37-46f6-a58e-30d063cd0927" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8ae70aba-b99f-48ab-93d6-642f9458268c" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="3f228809-32e4-49c5-be44-d42ba611c127">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="64dca12a-38c7-4e68-9f34-e48f760bd0eb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="727baafa-d3ca-4849-9627-f1217698c6c1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="60fbfdb5-e71c-44b7-b9f6-82a012ee9b03">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="b0932d23-1e49-4fc4-aefb-437e0ad3c038">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c945630f-2975-46e8-a81e-8c5b768e8af3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="76226e45-1105-4df1-aecd-8531fcf01410" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="9f94802e-6d68-463b-9bea-529a70785d9d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctchDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d0353417-eb7f-483d-afb5-dbf664f68b8a" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA-blocking" id="0665b0f5-e488-4dd2-adc8-026285c0b3f4">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-004</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>Y</blocking>
<proposeddatetime>${#TestCase#wishDate}</proposeddatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} blocking, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="ba69895e-5d95-4da3-87f8-d1f08b491b2f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c051cf6d-afc2-4039-8e66-648d8eae1e2b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9ce08446-0831-48a3-abf3-cfe93b64ac2f" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f442ad9c-8a22-4ed2-a38b-3d63b12e0235" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d3219ad6-9af7-47eb-a24d-452f21db3519" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="d4240adc-99a6-4eb0-a3c7-220aa8c3f631">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA 1" id="b448712e-3623-4740-9fbd-82ff112e419d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="25caea45-cd2b-4695-af19-cc1e96a5a326" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5066797c-85d5-452e-8616-bf59d9408ff9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a83aea1a-270d-4943-84cd-ac5218ceaf59" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="fce5ae65-1449-4b25-946b-932f03b34710">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="173b2343-5c06-4cfa-ada1-b0f7af150d8b" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA" id="f644937e-ef95-42dd-815f-ff512eaeae18">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiWishDate} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiWishDate} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="12e59763-3074-41e8-9fc3-0009bbab64bd" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="73f100f7-0d32-4685-ab2f-b1c8e81ea53d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="313515c5-1a9a-4730-88d9-6e36c03d36e6" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="62679830-3057-4f71-bbfb-41b8bd616fc6" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="2ff5fee7-b5fc-4caa-a6de-cbf41e824b83" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP" id="796024a6-eb01-4528-b978-765659e8a1ea">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA email is received
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//Get the locator of viewDetails with current dossierID
def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
log.info seleniumHandle.clickObject(byViewDetails);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="57d9e917-925c-43a1-93cd-222fbeea669b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Completed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>f</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cf0db72b-5d72-4c33-8f3c-9814dac4f61c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="eb6487d9-7924-48cb-9b83-221f5f245217">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="e900d3d1-d077-4a27-a503-b214634440dd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e4e59874-57c1-4bc8-b724-a06bd9653bba" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="20725ad9-d290-4a52-a521-fe88b7c3e0e5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="ddd7d651-607a-4351-9e21-67884c2988a6" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTP" id="6071aeb6-28d2-47e5-b903-b2722bd38e18">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="21b278cb-b373-4546-8817-cecf016500ae">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7277aa2f-e8ea-44db-b706-7f978734f32d" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bb0084c-3b0b-49e2-a89a-df1a103997ed" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="da51d5ec-f8cf-4d2b-85c1-78acb9c6cf14" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTP" id="7c76fc51-b239-44d7-810b-c9b32a8fc95e">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="6163d60e-c02a-469e-a407-91078cd88dbf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="95891cd3-f574-42e6-a17b-4a71fc7bf43b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTP" id="485d36a2-9ddf-49f7-bc64-12ca4c7e0091">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctpDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Performed received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Performed received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="07c98842-4dd9-488b-a268-bd2dfb014a54" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="0f2ffe0a-dc14-45d0-a308-7e398a5177fa">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 200.seconds
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "15-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.12 CTR-CTRA ok-CTCH-CTCHA blocking-CTP buffering" searchProperties="true" id="d43da08b-0be2-4726-bd92-83dece2878bd" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="a8cdb0f2-b236-4b02-ac20-b5508b879eaa">
        <con:settings/>
        <con:config>
          <delay>11000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="5bfc3a52-bc00-4f53-9dbd-7fbd3594bbc6">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="3a200c71-fa68-47d0-a8d6-87e99675b69d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e4415146-698e-4844-be0a-cf0f5018f1ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="89708d13-c22a-48c0-bb9c-d44c977b0f45">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="f116fa6a-8895-4986-b1aa-446d9e201909" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="aca0adf0-394d-419d-b52e-ee7534d0fe5d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f5522e9d-61ef-41fa-ae18-153d0cef095d" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="47ab979c-fb65-4fa6-b510-b4a77264c638" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="00e3fc53-ec80-4516-8667-73a1d7b0fcdd">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "Wait For send Poller")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="4ec5e1e8-7fa9-4313-b6d9-d6cdd12dacff">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac0e5b22-e677-48b9-afc6-8f2331fc9f07" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="bc6cefa8-7aa6-4de5-afef-8bcdc506f545" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e38526ad-5bf0-4755-8b82-90ec10384a13" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="dfacea3c-8ca8-493e-b740-225975b0455c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For send Poller" id="2224f645-df77-4dff-a441-3bf648f2cb99">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 1" id="59747bb1-e97d-4ccc-8127-76434745133e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="454ac95c-2a55-4dd6-922f-dd4c2477ff41" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="68e3ff1f-7c58-45c9-9f44-9a7c36f61642" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="eadd47de-e7cd-4d95-a446-91617092587b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="95607b8d-d265-4d76-b9a6-7b8f4854f4f5" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA ok" id="abba08a2-ec29-4ff5-ab9b-c463766e8675">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer blocking ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="d9abb4bb-ab21-4b8c-b4de-20571e0b643f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0dee71a3-a935-4b06-b972-c813e5f4ada7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="87a46e1b-6abd-40e9-93d7-879cd5d80622" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fe92eb90-8575-4ba4-8bb8-62355e7b99e1" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="62a39dc6-77ee-41a5-89bb-452f2cf60f3b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="a7448e10-c67e-4934-8fea-3ff0f8e90399">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="352cf2a7-a4e0-4083-afde-49864daf5b8f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4d48a085-3f43-46c6-8810-e8e94ec93ff3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b58743e7-0a55-4986-8e86-afa8533ab867" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8f6c2401-b5bd-4227-a820-f7c948c5c015" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="924dd394-0977-47c3-8b21-0048318bde63">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="de7dd802-8f79-48c8-911b-6b11ee6d662f" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="fffc350c-791f-474f-bfee-d3c6639216a8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be12c6b7-e826-4a58-b4c4-a5ec955b7f46" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="de67fe28-2ca4-4816-a0fb-1b56906f6bc0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="da663a2e-7feb-471a-9c29-84be65f04692" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="212ef293-cfa9-4a8b-b970-711abd7fd3ab" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c0c1849-6c84-42a9-9560-cf1fc38ab654" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="274e78e6-1095-4f65-a860-db4a229a7d61" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="6ed324ff-6531-4355-92cd-112f557b65b7">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="91ac8320-92a2-4efa-a74a-104b85fcbb55">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1f3a2336-d8af-4fcc-a5e5-e834c9de3bb1" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="15efa522-b0f6-499f-9adf-dd1f09fb7588" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="422209f4-6379-409a-a649-bd11d1866e61">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="93916028-46b5-4e8f-a743-de4104a285af">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7c2ead04-db2e-4ede-b16b-85c280699784" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7a60508b-5cbc-4994-8350-5538bcf33f7b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e3c9580b-5332-4fe1-8f7a-98def76fd3d3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="6384f820-8560-4795-97a6-8510c29c7f97">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2a997e09-b3aa-4ade-b7f1-6c99a49f30a6" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="c7af604d-6c37-46f3-98be-bcedfc95294c">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="583649e1-6435-44cf-8d64-85f68c4341cb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e6a6376-47e8-4488-a3e3-4295890430ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="48a72ae9-9ae9-4b45-8494-e2a59ae2c3d7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="b1916a4a-a3c0-4040-b443-6708be1bb1be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="74915307-1cee-47f9-8caf-134254dc495d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="912db30e-aa36-46a7-ab3c-c760f6c9c587" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="22a3cb71-615d-4c74-9385-f990132da55f" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="14496fd6-e805-4c30-adc6-4c0db4b6bbfe">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH1")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="be3ca8bc-0386-47de-ae44-98ef909f938d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="727baafa-d3ca-4849-9627-f1217698c6c1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="aa1604fe-d3fd-4892-af59-cb199bc345b9">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH 1" id="fea2ac88-435a-4a1a-b428-b58ac6b88910">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c945630f-2975-46e8-a81e-8c5b768e8af3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="76226e45-1105-4df1-aecd-8531fcf01410" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="e7ee38ba-fb36-42d4-a9b0-ab68ddc09250">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctchDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="cf355308-a6fc-4c74-ab08-932e30c78809" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA-blocking" id="bacd43ab-11ee-4559-8b88-99c92ba5aeb2">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-004</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>Y</blocking>
<proposeddatetime>${#TestCase#wishDate}</proposeddatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} blocking, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="7189cb09-d534-4b9c-9a92-e3e6de81a04a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c051cf6d-afc2-4039-8e66-648d8eae1e2b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9ce08446-0831-48a3-abf3-cfe93b64ac2f" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f442ad9c-8a22-4ed2-a38b-3d63b12e0235" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d3219ad6-9af7-47eb-a24d-452f21db3519" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="dc07ebbd-e253-496b-81ee-f55c8a4570d6">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="026195dc-e4ba-4b44-b990-cf02f603afff">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4d48a085-3f43-46c6-8810-e8e94ec93ff3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b58743e7-0a55-4986-8e86-afa8533ab867" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="9fc1b31d-3c58-4a92-ac56-cd4215b1b177" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="4e12fcff-91d4-41fd-9787-3dc1ea732a95">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="173b2343-5c06-4cfa-ada1-b0f7af150d8b" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA" id="eaadb446-3661-407a-be96-352ecf458502">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiWishDate} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiWishDate} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="12e59763-3074-41e8-9fc3-0009bbab64bd" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="81965b70-580e-4923-9459-f8a68d2c6af5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="313515c5-1a9a-4730-88d9-6e36c03d36e6" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="20084d7d-7b02-473e-9177-49d9c15450a4" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="96b660ea-bef1-448e-85c8-8b5b91c76dfb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="6d672e60-5c74-4f17-8992-8ea6c78f53e3" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA" id="3ae54a2a-4653-45e6-ac69-0643612c7de2">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 3" id="58834ef1-5db9-4d84-92e0-937937e4ae00">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>Y&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: proposeddate">
            <con:configuration>
              <token>${#TestCase#wishDate}&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no wishdate">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="dff4fa17-890d-4153-b5e5-76f059c87ba4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="123f9eb9-653c-45ea-803e-38bb1265911f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA" id="365fe0ab-ab93-4b13-9b74-e09f57eaa3ee">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA" id="b5fd344d-e6cc-497c-bc02-f19d7c70de94">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="79e5921c-1cc3-4b96-94e5-27becdb749c3" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="2a2c3c04-c4b6-420d-a414-d1a9e338e034" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5fca7117-65fa-493e-a6e6-e32493a04a2a" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCHA" id="8e3b0f17-021c-4e8d-9ce8-275119bb62f2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>ChangeAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2312aa66-905a-4f01-ab1d-d17e3dbd59f4" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP" id="ada4d9ce-49a9-47d2-ab78-a614e703795f">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA and CTCHA(2x)  emails are received
//verify for ${#TestSuite#donor} that hte CTR and CTCH (2x) emails are received.  
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//Get the locator of viewDetails with current dossierID
def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
log.info seleniumHandle.clickObject(byViewDetails);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="57c7d241-3771-40b8-b63b-f3562938bff6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="496451e3-821f-45dd-99e0-c700a09fe438" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="a893e589-5521-4631-bbf7-a6a6fb82f4dc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="1469bcd0-8b34-4249-aded-953adddb4f3c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="872ca9d7-d721-4168-8cb4-1d9d2d6426e4" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="69d2daa8-4ece-4d7a-b148-f537ee17bc81" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="e803489d-51e4-400b-b7b1-f6b9e7b5203b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cd7e1363-f59a-4d4b-aba5-2539c517c9b7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
import java.util.Random
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.days
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "14-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.13 CTR-CTRA ok-CTCH-CTCHA blocking-CTC Direct" searchProperties="true" id="74183a7a-263a-485f-9370-c4b90d17a287" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="ca64f79a-7f94-458e-ae74-df66e5fbfc83">
        <con:settings/>
        <con:config>
          <delay>12000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="7f5c0707-2911-4647-a6c4-2b298a0e4d8c">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="1456e92b-cb4c-4572-a8f9-72642db41698">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e4415146-698e-4844-be0a-cf0f5018f1ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="1a3ed59a-04e5-4340-be9c-fd7c68477bc5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="f116fa6a-8895-4986-b1aa-446d9e201909" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="aca0adf0-394d-419d-b52e-ee7534d0fe5d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e66442fa-6bce-4de1-86eb-7c555e20acfa" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="2b819543-9b19-433f-a004-f91a630f9b01" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="0cc51b2d-d0f7-4596-8786-73ab298a41e4">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "Wait For send Poller")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="ea64b79b-b0e6-4258-8780-418b1b535528">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac0e5b22-e677-48b9-afc6-8f2331fc9f07" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e38526ad-5bf0-4755-8b82-90ec10384a13" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="23b5cf33-a714-425c-b1a5-5f87b38b742f">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For send Poller" id="fb8e0767-e23b-4916-aeb9-feb88c80fd46">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_NoSend" id="5612fdf6-c7f7-4574-8607-c14975429348">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and st_message like '%${#TestCase#switchId}%'</con:query>
          <con:assertion type="JDBC Status" id="cc45d6ef-2316-4378-b582-f321b46f2cc1" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="9dc2a7bb-7c16-4bd1-980b-734fceb80acc" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="1e0f72c3-034f-429b-b166-cd0a343120c5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d361d3f6-cca6-4e28-b1f9-7e0670068aed" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA ok" id="ba106cf9-9090-484b-9779-af8a24eb6909">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer blocking ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="0d399773-cdd4-4852-9169-3a608bdcd61a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0dee71a3-a935-4b06-b972-c813e5f4ada7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="87a46e1b-6abd-40e9-93d7-879cd5d80622" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fe92eb90-8575-4ba4-8bb8-62355e7b99e1" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="62a39dc6-77ee-41a5-89bb-452f2cf60f3b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="68354f9d-7f10-41b8-b143-5bb51ff0e140">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="ded52d36-4420-47f2-9c0a-6a4b0d3c3591">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4d48a085-3f43-46c6-8810-e8e94ec93ff3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b58743e7-0a55-4986-8e86-afa8533ab867" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="552beebd-0ccc-47fe-94f8-08947630978b" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="86552b8f-9b2a-409b-af15-3ab77baf7258">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="de7dd802-8f79-48c8-911b-6b11ee6d662f" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="7501c3e7-9fab-46a8-a069-b09900adf8d6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be12c6b7-e826-4a58-b4c4-a5ec955b7f46" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="73a63bac-a110-4b87-9653-4a98a3e7dc6d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="da663a2e-7feb-471a-9c29-84be65f04692" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="212ef293-cfa9-4a8b-b970-711abd7fd3ab" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="dbc930a9-a1c7-4966-9d40-79f623391c3b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="bdc64ff6-02e0-4e3e-aa42-373a4d1f068a" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="c3a7631d-22f3-483b-b513-5ff04bf56636">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 1" id="9ffb21b8-e8b2-4b91-b7a7-231b817768cc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1f3a2336-d8af-4fcc-a5e5-e834c9de3bb1" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="15efa522-b0f6-499f-9adf-dd1f09fb7588" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="be159997-9811-4c74-ae31-0fb3da477057">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="733f3fd2-474e-4133-904d-2fafbbcdb4fd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7c2ead04-db2e-4ede-b16b-85c280699784" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7a60508b-5cbc-4994-8350-5538bcf33f7b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e3c9580b-5332-4fe1-8f7a-98def76fd3d3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="d68325b0-245b-4d7b-bc7a-da69dd25ad4a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="89606901-5ca8-4205-be9a-aef7fbd4d988" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="c54a49d6-189a-4161-a700-516175b9f754">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="f5cb9441-30a2-4515-80f8-7cae805334a6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e6a6376-47e8-4488-a3e3-4295890430ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="ecd1436d-08ad-4a0b-88ca-79360bf9b6c0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="b1916a4a-a3c0-4040-b443-6708be1bb1be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="74915307-1cee-47f9-8caf-134254dc495d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="920ea6ac-56f4-482d-905c-e847df47860e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="525d5c7a-4043-42e8-af5d-d8af51a4f463" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="15bf517e-5189-4061-8b12-9a1527996d90">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="70e1b691-4762-45d1-b362-3c53a938a36e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="727baafa-d3ca-4849-9627-f1217698c6c1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="85e74f35-9505-4e8e-aea5-638e861268fc">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="f1f5fcf2-aaf8-4846-9f98-8b41f3d795ef">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c945630f-2975-46e8-a81e-8c5b768e8af3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="76226e45-1105-4df1-aecd-8531fcf01410" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="d54ab1fc-8243-475f-ab8d-8b6f69e2bc33">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctchDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3572ccee-f7f0-46d0-ada7-5e4ba3f5c763" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA-blocking" id="4b2b86b9-ce75-436f-b16d-d30a10636769">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-004</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>Y</blocking>
<proposeddatetime>${#TestCase#wishDate}</proposeddatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} blocking, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="97a85f50-2d3b-433c-b5ef-ad03b42d9f67">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c051cf6d-afc2-4039-8e66-648d8eae1e2b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9ce08446-0831-48a3-abf3-cfe93b64ac2f" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f442ad9c-8a22-4ed2-a38b-3d63b12e0235" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d3219ad6-9af7-47eb-a24d-452f21db3519" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="6e8a553a-ced9-4c55-b07d-624a79deb00f">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="e262e89f-42ec-4c14-bbde-23b4cb2d97d9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4d48a085-3f43-46c6-8810-e8e94ec93ff3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b58743e7-0a55-4986-8e86-afa8533ab867" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="7453a13d-b910-41ae-ba64-6bf232670541" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="b8890201-681e-4747-8dc8-19a0986afead">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="173b2343-5c06-4cfa-ada1-b0f7af150d8b" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA" id="e3baafcc-f2e5-4ada-92c5-2efcd81ad242">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiWishDate} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiWishDate} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="12e59763-3074-41e8-9fc3-0009bbab64bd" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="72e1a82a-8780-40b6-9b83-882f25ef222c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="313515c5-1a9a-4730-88d9-6e36c03d36e6" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="20084d7d-7b02-473e-9177-49d9c15450a4" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="52eb5807-9941-427e-b9bc-150be2887065" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="51e13ae1-92c3-4244-af93-7fc635c1f4a4" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA" id="092050dc-b5df-424d-b909-91a1ed32ce7a">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA" id="e5211be3-93b7-4b19-b2ff-af239cf214f5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>Y&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: proposeddate">
            <con:configuration>
              <token>${#TestCase#wishDate}&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no wishdate">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="dff4fa17-890d-4153-b5e5-76f059c87ba4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="123f9eb9-653c-45ea-803e-38bb1265911f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA" id="78ab41b6-ed1c-4cbc-b5d1-820a811911b0">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA" id="e06d8c97-3b39-4b8f-acee-d3d35a450e14">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="79e5921c-1cc3-4b96-94e5-27becdb749c3" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="2a2c3c04-c4b6-420d-a414-d1a9e338e034" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5fca7117-65fa-493e-a6e6-e32493a04a2a" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCHA" id="7d2783ec-b1fa-4fb9-aae9-12b9bd0c6ded">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>ChangeAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8c1620fa-9d48-45ea-95ea-2e50de58e9c1" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTC" id="a31281d3-f9e8-4f48-8696-6475908ce74c">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	funcHandle.sendCTC(seleniumHandle, javaHandle, browser, guiUrl, recipient, switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTC" id="ab27361d-9ffe-4dfa-b95f-c17a285bf81b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=11 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="1846bd70-ede9-4406-b758-7f23241ac3aa" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cf8ad48f-3ba2-4aa8-a7fd-542a67868dda" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5b93d6b9-b4cf-4c3d-bd02-e5715b0db4cf" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="b4b292bc-4133-4bf3-8519-9b00505715b1" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTC" id="f7741c9d-5850-44fd-bc93-2a178ced69f3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Cancelled</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e5674e64-b285-4e2d-b343-7a640c978165" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTC" id="d00ae7e7-4182-42d4-b3b5-8a0e5fe47885">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
	testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTC" id="5b747888-40d5-4f8e-9469-cc118fd2d6f5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3e6d13cd-db91-453a-b133-3482c556c87c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="11ea6756-4d66-4e9b-8fdd-1174a9ba181b" name="Xpath: soap verson">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14f60c8-81d7-41d5-b77f-79114ea85e64" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b3bb5a3c-6664-4d19-bf4c-3acea9c8ba09" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTC" id="d5e68227-1e65-46ad-a54b-43c69d999c85">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTC" id="1f3dedfd-b2cf-42be-842e-539b970ef80c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="4880fe0a-4e68-405d-a3eb-797bbd832eb2" name="NotContains: no rows">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="02a2c5a8-0d80-4f36-88de-c5ad753114a5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTC" id="c6f33e39-3634-493c-afcb-b8a56f8f5ad5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctcDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Cancel received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Cancel received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3b1d3e1e-2250-4c51-9ce7-810d1b0e4ddf" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="bf44be49-117f-4613-afe2-b449b73919d1">
        <con:settings/>
        <con:config>
          <delay>0</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 200.seconds
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "15-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.14 CTR-CTRA ok-CTCH-CTCHA blocking-CTCH-CTCHA ok - CTP buffering" searchProperties="true" id="95d56fdd-f6b5-4771-aa0c-25c70844522c" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="0cf4e527-9453-4e4e-9a02-238057d1f5b1">
        <con:settings/>
        <con:config>
          <delay>13000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="84c225db-00e7-4e52-a9ae-29bb9330afed">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="1dd5485a-cab5-42dd-b8e0-ee30a3a1cfe1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b7b10cf0-300d-425c-8ded-dd2cb727eae1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="375913cd-c977-41eb-98e4-0172077ca680">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="60348e37-1b59-4849-ab8f-f57a02cfe3b4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a39e7995-4af1-45bb-b002-8b4d550e3691" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="ca68c0bb-263a-4540-a528-aa05a29e1eac" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="1f5272f7-4bb4-410f-b0fe-d7d768a2d794">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="bee25655-f40c-49bc-81fe-c4e073fe647e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c5c8756-e9aa-4892-8267-8ad1bf31000b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ec56e512-26de-4288-89c0-dd70c6cafd4f" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a12447e1-4d81-4b63-b2a8-092e7fb9afc7" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="4348c4e9-4b74-47ee-a419-dd5fe6ac613d">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="104d3fde-1419-4807-be87-2e5461efdde6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="454ac95c-2a55-4dd6-922f-dd4c2477ff41" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="68e3ff1f-7c58-45c9-9f44-9a7c36f61642" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="df028828-9fa3-4003-8d39-8ae607395971">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13910c40-ea6c-4918-a3de-780c41e62eb3" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="f970a078-0a93-4b87-9f4b-513dfd892c13">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="ace2fd4f-ef0f-4564-8413-539840f5a2ca">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6adb7f19-1129-474d-aff6-2983ec84b8d8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="981c2467-1bbf-4897-99b6-4397706e7a41" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="68035c82-d307-4cc5-91d0-5be3c75bf2b8" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e1e6148b-582b-4931-b476-b18361b2cec0" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="7f67a0ba-76ab-44de-8507-8ed4a69e55e3">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="01282f52-c8c9-4cb6-872c-036a6fe7ae00">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="25caea45-cd2b-4695-af19-cc1e96a5a326" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5066797c-85d5-452e-8616-bf59d9408ff9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="46c7f42b-261f-4c67-acc7-b55ba4865428" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="76ae3b2c-30ac-4539-8c15-01fd0a9acf49">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7f0cc596-3a89-4ba2-9a43-98ea2cc22eb0" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="16a2ee79-7955-431b-912e-84ecf17e5084">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fecee2f4-6018-4cb9-9ba5-bc26713382b2" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="fa5ca8b1-326f-4a49-90b0-ddb7daaa6bd9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="79147a31-d4bf-40fb-a58e-5310e4367ab8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="574bc501-120a-4908-b010-f6f094dc7005" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1939718e-aaf6-4b35-b067-0d3887e117cd" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="4c037d64-bb87-46b0-bc8d-c6a9b89d7f4d" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="7790fc09-d433-4433-b77a-aea3390db6c8">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="39af6c2a-2554-4960-8b3d-7b21bdc1ec69">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="23f1d523-a83e-4d11-a6f5-b17c0a2f39bd" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="798e9f12-c593-49b2-b7bd-05393eaef0fc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="5e882905-96bb-4083-b930-11a85e70b559">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="2b58be0a-5c5c-482e-973e-2a91ae16bbd6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7e970475-02b9-4c7f-a1f3-665169a6076f" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14be091-b057-4eb0-a004-040d372ea524" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f7fb5af1-2779-4a59-8941-cffbd64b24fb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="5062240e-12c3-434b-968a-904b7effa46a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="84365a53-ed86-4d01-9e40-e6a641cd9938" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="60408487-fb9a-47b0-966b-e553545afa7f">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="881db25c-d9a2-45ad-ab40-c029e087527b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e6a6376-47e8-4488-a3e3-4295890430ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="23306ed5-7a76-4fe2-ac80-6ce9ff7d7587">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="b1916a4a-a3c0-4040-b443-6708be1bb1be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="eb652525-dbf8-4036-8893-f49e3e68b4ac" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="fd66efaa-7b69-4dd4-81ca-b400c39a9c2a" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="6c5d99bd-4aed-4f09-92aa-8fb94f135236">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="6ed8f4ef-2034-4916-8e29-9dbf79707592">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="727baafa-d3ca-4849-9627-f1217698c6c1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="c5ac579e-ea62-4ea3-8c46-0fc1d5b867b3">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="dea086f5-dba6-4fbb-9d64-745212230789">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c945630f-2975-46e8-a81e-8c5b768e8af3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="76226e45-1105-4df1-aecd-8531fcf01410" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="1676e568-9775-4f8e-bb50-9b634001ce1a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctchDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="98e88f96-6353-43ad-ac0f-9b9494fff14b" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA-blocking" id="bcae088f-5fca-4416-b121-1c924c18e5fa">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-004</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>Y</blocking>
<proposeddatetime>${#TestCase#wishDate}</proposeddatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} blocking, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="accbfff1-2da7-43ac-a5dd-2f16a560caab">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c051cf6d-afc2-4039-8e66-648d8eae1e2b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9ce08446-0831-48a3-abf3-cfe93b64ac2f" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f442ad9c-8a22-4ed2-a38b-3d63b12e0235" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d3219ad6-9af7-47eb-a24d-452f21db3519" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="c032d938-e8b1-4640-b85f-e6c060471641">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="8e1e5422-9d9e-458f-bd73-1fe1bc70c62c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="25caea45-cd2b-4695-af19-cc1e96a5a326" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5066797c-85d5-452e-8616-bf59d9408ff9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="03b4b7f3-32ee-4787-8265-4a29b3a0a0fc" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="0f4fa330-953a-4192-9c7e-3c63a276950c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="173b2343-5c06-4cfa-ada1-b0f7af150d8b" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA" id="1c9b60da-0a20-429c-9c7f-b767f5d6ae83">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiWishDate} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiWishDate} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="12e59763-3074-41e8-9fc3-0009bbab64bd" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="176b35e2-3154-4702-a1a9-f5083263695d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="313515c5-1a9a-4730-88d9-6e36c03d36e6" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4d57e2cc-2c4a-477d-bad0-7ac5652b7fbb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="ee1bc617-e4ee-43d8-bc3f-adbcc0327da9" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA" id="591b5268-c8b7-4017-a855-eb8126b8ef88">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 3" id="46fbea71-6b29-4650-a9bf-0bda6d7b39bb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>Y&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: proposeddate">
            <con:configuration>
              <token>${#TestCase#wishDate}&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no wishdate">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="dff4fa17-890d-4153-b5e5-76f059c87ba4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="123f9eb9-653c-45ea-803e-38bb1265911f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA" id="24991e19-7b19-4aa2-bba4-08e178cb7746">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA" id="c4e8b474-4a10-4dad-b309-bd480b15f2f2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="79e5921c-1cc3-4b96-94e5-27becdb749c3" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="2a2c3c04-c4b6-420d-a414-d1a9e338e034" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5fca7117-65fa-493e-a6e6-e32493a04a2a" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCHA" id="aa5d84b0-5e37-4b8b-bba1-7d173fd0c862">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>ChangeAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5dfb20d2-9839-4bf7-893a-949f0adfbf33" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH2" id="13d0232b-8deb-4472-be21-611a6ff18187">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh2Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH2" id="1cd91961-b6b9-4205-8b9f-4726a63fd0b3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#guiCh2Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="969d51b6-e10e-47f7-80a9-4ed0833de28c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH2" id="9d615fc8-2f9f-4dfc-a37e-78812847020d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="GroovyScriptAssertion" id="ce6c722a-7076-4bbf-a7e8-f434bb00aec5" name="Script: get wishdate" disabled="true">
            <con:configuration>
              <scriptText>import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ch2wishdate = holder.getNodeValue("//Results[1]/ResultSet[1]/Row[1]/MESSAGE_TYPE.DM_DATETIME[1]")
def string = ch2wishdate.replace(' ', 'T')
messageExchange.modelItem.testStep.testCase.setPropertyValue("ch2Wishdate",string)</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fa439ceb-dddd-40a6-bcac-30cfea11f6e4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="25bd873e-4796-458e-91e7-32cc1982c5f7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>2</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="81edecf7-dab1-4bef-9977-2ee2f5f5bdef" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctch2DMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH2" id="ff9019e6-1003-4391-9070-6aeca61ae059">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH2" id="29609931-85d8-42df-b49f-d558c7e2842a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="67905e7c-7c88-42a7-8f5c-cacce2609f38" name="Xpath: Change">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4888e5ec-704e-4f7e-8bbe-ab7f5ddfa202" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH2" id="3aa23e85-43ca-4b92-b30a-f36717abaf11">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH2" id="f39673b3-23cd-45fd-a2a4-908293726443">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="b2979c73-8fbf-4655-9423-8c570376a288" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="65d58701-8f00-4f33-b5a2-eda542e8bda2" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH2" id="db2fb009-3b7a-41c3-8606-24a4a3f5290f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctch2DMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="07d7275f-ac87-4538-8bde-c0fc021bfa18" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA ok" id="3ae46351-8bfe-4a33-87fa-d16bcc698438">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-05</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#ctch2ProposedDate}</wishdatetime>
<note>Change Answer blocking ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcha2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA2" id="89829f34-9281-44dc-aa7d-c5b444c8ef53">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcha2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bbbb335-14d0-4529-9e7b-f4ca94e25914" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e7b19e97-c6d5-4be6-89d2-cdb9a58b9bf8" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="52fa79d6-e46b-4ceb-9f70-2b9509257f01" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f87345af-1216-491b-b562-1a005a348a5e" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="496f6862-dfe2-43c7-ab5d-b02761aabb5b" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcha2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 6" id="38d56ca5-4c6e-4364-a19e-4e768bdea329">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA2" id="b1448f06-5a12-4ca9-8038-f64f36063f87">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcha2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="67a50163-9088-4468-b56c-92f6a123a3cb" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="dbbceb38-6519-4fc9-8a16-860f1dc19242" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="fdbdbe10-4364-4fae-b96a-199f3a6b8ba5" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcha2RSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA2" id="0d6d3d95-e992-451f-bfa8-7546fbc68dcb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5d28564c-1c11-4f78-916d-90a5eb8a9710" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcha2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="ddf6ab16-002b-41c5-9416-e8fee6674309">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh2Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_CTCHA_PROPOSEDDATETIME</path>
              <content>${#TestCase#cWishDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be6b44b5-bcd8-4658-8de5-4de9ee37436e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA2" id="23e134c2-dc89-41cd-88ca-df124495c0b3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="37ea867d-1a4f-4b6d-9464-8e6b2e1afddc" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e6904802-694a-47c5-8c0c-755308f8d072" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>2</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="b8c59efa-a1a9-4a28-9183-5ae2453d3463" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA2" id="e459e757-6c02-45ee-bb58-aba77b722443">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCHA2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA2" id="982123dd-1649-4343-a515-283ee25641c3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>N&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: wishdatetime">
            <con:configuration>
              <token>${#TestCase#ch2Wishdate}&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no proposedatetime">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0016db61-53fc-4bc3-b8ee-00a2fa007ea7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="033e93d6-8260-4704-96f7-c8e16c1555dc" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA2" id="067b87f3-00db-4e45-afcb-9d1b92e0e467">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA2" id="c4c52072-b755-43ed-9ffb-fa3a3148677a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="5defa40a-3301-4fe5-8096-3618f6fca592" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4567d945-ad97-4022-8313-51f4cdec1f23" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8618002a-d92c-489f-a000-0680d2ca4be3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCHA2" id="8d44232b-f3c4-47ed-aff0-e3f45af2de66">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctcha2RSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>ChangeAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2c3052a7-69c6-4524-8995-b7ebeb6937ae" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP" id="1a7e8ac7-fd69-4824-9029-f41ac555bdc2">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA and CTCHA(2x)  emails are received
//verify for ${#TestSuite#donor} that hte CTR and CTCH (2x) emails are received.  
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//Get the locator of viewDetails with current dossierID
def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
log.info seleniumHandle.clickObject(byViewDetails);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="4fdc1aab-65ae-4108-944c-b0b485bd3e9c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="496451e3-821f-45dd-99e0-c700a09fe438" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="959f61cb-ffd0-44f7-8025-15751b3b59c1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="1469bcd0-8b34-4249-aded-953adddb4f3c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="64bcaefa-fc22-4fdf-88ab-4ca54b7fc58a" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="9c338710-0028-4ab3-bd39-88e018680b5f" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="c926729c-2f2a-4899-b254-982c4ef41c8c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cd7e1363-f59a-4d4b-aba5-2539c517c9b7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
import java.util.Random
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.days
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "14-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.15  CTR-CTRA ok-CTCH-CTCHA blocking-CTCH-CTCHA ok-CTP direct" searchProperties="true" id="a5a55622-02bd-47bd-9472-127b26dbaf4f" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="539e1795-4f6c-4923-9a41-0233ffe14678">
        <con:settings/>
        <con:config>
          <delay>14000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="3d6b3553-6e59-49a8-a0d4-ed0df3dedbea">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="a75cc2f1-e3b8-4489-b814-08d8a27d72ab">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");
def switchid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CTD_SWITCHID[1]", "switchId");
log.info("Testcase 3-15 dossierid "+ switchid)</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bd3a759-d9e5-4881-bf60-afe26ef43240" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="1cb0bcf9-5a91-4e39-817e-413edc82d22c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="898f6ddd-45b6-47d5-ba8c-ea06c797ad4c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c4920324-2e87-48e6-81e2-96a2345a99a2" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="b649b91c-3020-4432-bd30-7aca7c24835b" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="d00cf4c9-27f1-4f84-8637-b3aa42799111">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="a164b832-1500-4d4f-9e5b-df3476cc788f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="55292669-7170-47d8-b025-dea1e40f7cf8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1630b40c-aa45-469c-a2c7-f76420c38f65" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="dd9c4da1-a0ab-47fb-972c-9d3ec348a654" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="7ad20a72-2f49-4859-9dfe-2dabd3726ce8">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="a70951fb-26da-442f-a818-15e343fb8b9d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="d33e6e2b-8790-4e68-983a-14454ffacd04" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cadeb218-6880-4036-b9ff-119d6845cf0b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="1e49ac24-cea9-4a2a-881d-f949c253f0cd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0b29936b-a48c-43c8-9490-7567e5f9b7de" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="07f47081-d7c3-4904-9420-13611d90889d">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="ccf0b892-2520-45a4-b5f8-684ddbc5ea1f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3e5cf6ba-1450-4a0b-ac13-ba6254df54a2" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5ce8f27c-2cdd-4557-b472-221431b64f94" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3cdd08d2-6052-4fe0-96dc-4d739821eba3" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2e18e5ea-acf9-4d6a-bbd1-71f1c077944c" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="8aec813f-72bc-483d-a17a-06c6005005cb">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="7500b96a-1220-400a-8980-9272e03dc13f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8f1a622a-bac0-4897-a2c8-77c0cb43ed83" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="7728515e-9fed-4058-b7cc-ec934c705dae" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e269fab4-22ec-4c91-9c10-88b37edc62c9" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="4d27a6a7-aa20-422f-bb16-a9ea400d6f86">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="220eec1c-2f13-4bb6-9d84-3dcb4782a61c" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="2d98b1b2-5b15-461c-bef0-db4c6ccf2b1e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="888a79b2-df05-4da0-9e76-cc16a09e6603" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="24e9fed3-447d-4d6e-a029-2b60d2015952">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="48be8767-63dd-4b97-bd2e-6b148712f734" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9c3f665-02fd-417f-a931-4bae5ef4f761" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d2c6c74e-e35f-40ee-bd4e-50778a5e23d9" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="69ab6e56-aa9f-4621-b27c-e6ffdb49cab8" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="95736718-64f6-435e-ac56-643b3aa7eb7a">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="f7a73c6a-7b2d-4900-b46c-6c61b00c6bfd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Request answer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ed038b67-62f6-4aa2-8b95-f2381a9cc282" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3d127954-12ef-4302-8988-68c72fac206b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="bfa1aa45-6d07-4688-9c36-3ad2a17ba57f">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="c31dc7f3-407f-4030-9afa-fbe01a2beee8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="b0f6f224-4149-48c4-8e93-5fe0362dd8c4" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d4fccf19-3ee8-4122-a391-3c06892f6893" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3c574ea0-7a28-4f5d-bdd7-a72962ca91f9" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="f93bdbd0-7c4c-448e-9cec-6c55fc0a5c75">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d6bde988-2cd4-4fab-ada5-750b1ee2e8c7" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="7282bbf7-ca1a-45a0-8095-25fe403e2a40">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="9ae2512f-8fa4-4e41-ba65-c3cbb9b34fd4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3fdace08-47bc-4a9c-bea3-eedf47960e5e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="2c0eb3cd-fd78-4a3b-8834-4abc4970efd8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="ad681b60-0b08-414f-bf9e-288a1e48c297" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="70c15d91-f69d-4c98-8d26-f6b31d76a279" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6e477af3-19aa-4419-8648-e7dca6f2373d" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="97e87bd4-60b6-4873-b0ae-70c40fa5fbf4" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="ce00f0ed-3f23-42e7-bcc0-54ff7b970501">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="aa834fe0-e049-414d-8725-902f5b0bd52c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c700e7f-2fe8-4f40-875c-ce91c2e56070" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="ba058a7e-9011-4637-937c-e245a4dbb8a0">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="50b8a698-2052-4f08-8b97-c57cb6e68d79">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="92c5b2ef-5b3a-45cd-a52f-18a256b11942" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4eda4b2e-a5ed-45a8-9529-701acae315e7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="01cf64df-d71e-4c8f-ad10-e48fef8992ba">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctchDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="15cf3303-326c-4648-8c26-8ecb67f3bf0b" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA-ok" id="81958cd3-376f-4b2f-9c4f-7dfb89a8f1ca">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="f9dde568-ced4-4e3a-8b16-bd014ff28188">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6ee43c8a-8179-4b8b-99de-a54cad403eea" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ef4fbbec-1996-4949-9882-fda763dcf75b" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="86353aff-c597-49d4-97aa-7f4e6c726ceb" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4d795ad0-f3d1-461c-940d-6fb3388e3857" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="26eb7b8d-56cd-4674-804e-f07397203681">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="c7a34de1-2aec-405b-960b-8eb1129716bb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="caf0182a-d390-4e84-9360-2bdaacba9e7f" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="ee61ff35-317b-4b00-a8ec-8e19c47ba8e2" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f7a87fda-cdcd-4b96-8333-36f922c39492" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="3abf8526-465f-417b-b0d0-40ea61c5e4c7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="24432d32-d608-4ada-b297-d55c09095bf9" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="ab440f14-e1d7-4764-836e-ce884d313af5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3d01c165-e789-4b28-b4ba-3f174e134d4e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="e5bda5e4-4e61-44ea-9b68-69a219326bbf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="c3187f36-a87e-4d67-b276-21ac6f07ff04" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="427427e5-bf00-43f8-b95e-50bcb212281c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8dde8b75-9a59-4604-ae4d-ac9e759b4cd4" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA" id="7bcae69a-edbf-4e39-b221-175a907aa38a">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA" id="51e5844e-4f02-4fbc-8d9e-abee4b483e70">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>N&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: wishdatetime">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no proposedatetime">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ccfc2241-1cdb-4dff-bb24-778613b0f6b6" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b5ee25f5-203e-4bb4-ae9f-1868afb6b0c9" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctchaDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA" id="7b18b55e-89fd-46fa-94ba-86c01b880838">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA" id="935b194a-3523-4ea2-806f-1255974613f0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="c2706c6f-8d75-4352-8ef1-2ab778814a86" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6384b2e5-d4b6-456b-b24c-48276ee22caa" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="52bc65c0-4c74-4be2-9ede-a621fecefa81" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCHA" id="a82e61c2-66db-4be3-8e71-162e9b4fdcdc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>*New Change Answer received on COMP for ${#TestCase#switchId}.*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>ChangeAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4edb150c-c4f6-4546-93ea-934061d78f13" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH2" id="c233e118-48d4-4c05-b378-dd0b75d32e68">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh2Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH2" id="bd9886d7-370c-4ef9-9840-e143935e0b4b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#guiCh2Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="29b2f9c6-d45e-4755-a0ce-eac4d2021236" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH2" id="107d9c02-bb6c-430c-b564-d6dd4eff1cc5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="97ddf65e-f65f-4de4-9a43-6ca72a0d7fc7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ce1f1532-bf81-402b-9a6c-44ceacaf8662" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>2</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="2a94810a-6832-4df1-92ad-b0051a359d16" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctch2DMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH2" id="6d826ce9-6e78-46cf-87a5-b245282f8c3f">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH2" id="d6f8c1a9-7ccb-4424-8e80-9bee47ef83c1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[2]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3068ab63-afe9-4668-849c-2b936393418f" name="Xpath: change 2nd message">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[2]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e1162bd6-7f6d-425b-a169-4abd878fe6e3" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH2" id="16609b08-d8db-4409-b57e-7ac7b39cc616">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH2" id="4b2a712d-139d-4666-93a6-a14aa11b9355">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="6f54d1fc-caab-456b-bb0d-12c15a47f12c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="611ee388-def1-4af1-b7cb-f1679d9cedc7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH2" id="2436d6ee-47dc-4bee-b86a-697c5f54b1e4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctch2DMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5d23715c-f1cd-46c1-b588-57bfacca0055" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA blocking" id="cba3a6b3-66a6-4d20-ab1f-197e2091afb3">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-05</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>Y</blocking>
<proposeddatetime>${#TestCase#ctcha2ProposedDate}</proposeddatetime>
<note>Change Answer blocking ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcha2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA2" id="a7a8cdf0-b883-400b-8b69-1f7c9ae0f2df">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcha2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4a47a2ab-b9cb-45b9-9295-7c5e50ef9532" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="bd5345ce-6d26-4ec6-9cab-d9c771438a34" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcha2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="db0fa649-c5aa-4291-ba67-5ae76297110c" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="bc4af8c2-0b2d-4e1d-af90-aa8fe5f93ab9" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c61cf3cc-d5b8-4867-825e-dff4bb60de11" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 6" id="a91f56d7-6ec5-454b-8e4e-3ead47b520ab">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA2" id="d99c14b3-86df-4843-a9d2-612559ed5bc3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcha2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9e1160c0-68c4-412d-b2de-e51868d40f3e" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="a99e150d-76e6-4663-bdf0-0a1f9e71f3c3" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0fb4d7fe-2855-49e2-85bf-2a0a79d2f211" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcha2RSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA2" id="6f8631d0-d687-486e-bbbe-77db3114e740">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="37ed1e90-fb8d-43e4-8bb7-fa93af1395db" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcha2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-blocking" id="eeb43d89-3df3-4652-8fb9-055922d2e345">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_CTCHA_PROPOSEDDATETIME</path>
              <content>${#TestCase#ctcha2PropDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5bf5d462-d42e-4eb7-a1db-d438551c84f7" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA2" id="7a906d60-9116-4600-994a-bc66b2b2d299">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="fd9fe429-e598-406e-a449-645a82bf7f2c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="761caca2-c369-4497-bec8-5d115af7d1c0" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8773761d-850d-4ea9-8083-762ddca1c405" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>2</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="de86989c-4f6a-4572-aa0c-8319b4dab5e9" name="Script: SaveDM_ID" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA2" id="23971323-8242-4999-bd19-bc8149c5a9da">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCHA2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA2" id="266140cf-fe22-4e55-af25-249d4e318133">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>Y&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: proposeddate">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no wishdate">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ed02927b-cd35-4694-891f-74f51ff49406" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ed9a6255-0416-47bd-9390-4f424c82386c" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA2" id="fda2be2c-8f35-41c2-9f4f-686f4e635ae8">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA2" id="c6b61169-88d2-491b-a8fe-634714621ac5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="f588bb43-2adc-4520-af08-5327ed857d7b" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="22a4a2f9-6528-4394-a330-8c2d5fb501ea" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="96103092-365e-4741-b166-11107ddf58dd" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCHA2" id="9da6c32e-e95e-4cb0-bac2-fe87d1dce104">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctcha2RSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>ChangeAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="398aba77-b29d-4f7c-8650-34879458d816" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP" id="28dbcc1d-b296-4859-a8de-4c81afded25d">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA email is received
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//Get the locator of viewDetails with current dossierID
def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
log.info seleniumHandle.clickObject(byViewDetails);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="f7c03a77-f2ba-4cba-b918-d60c8930cb15">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Completed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>f</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cf0db72b-5d72-4c33-8f3c-9814dac4f61c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="706f376c-77c1-4533-9d4e-86d90a3979cc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="e900d3d1-d077-4a27-a503-b214634440dd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="fd31305f-e85b-47d0-ae8d-3ee18e8b635b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="4c571ca7-c4ac-4ab7-acc6-8793dc5ae37f" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTP" id="62da1eed-4e43-4dbf-81df-c900b9a0f42e">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="26f6cec5-8e59-452f-88a0-d1fe70512aac">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7277aa2f-e8ea-44db-b706-7f978734f32d" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bb0084c-3b0b-49e2-a89a-df1a103997ed" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="da51d5ec-f8cf-4d2b-85c1-78acb9c6cf14" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTP" id="670c778e-24f8-4956-9986-400f29124780">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="3a10f225-b277-4693-bbda-e38921df3e17">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="95891cd3-f574-42e6-a17b-4a71fc7bf43b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTP" id="ed858cc1-4212-4fbb-a9a9-5b09fac19bc9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctpDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Performed received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Performed received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8c7d422d-a6d1-41cc-8fe3-668b9dc4b3d0" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="CheckMail" id="edef7afd-e6f2-4ea7-90e0-198c02fa1a72" disabled="true">
        <con:description>Check for ${#TestSuite#donor}  ${#TestCase#switchId} 
if emaisl for CTR, CTCH (2x) and CTP have arrived.</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="779b47a1-a10a-4868-8287-9b3e07720e58">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 200.seconds
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "15-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.16 CTR-CTRA ok-CTCH-CTCHA blocking-CTCH-CTCHA ok - CTC" searchProperties="true" id="f637cae6-a019-4bc7-95d7-0568ee83debf" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="5369df24-6ca5-4b50-a6a1-3ae555908ed2">
        <con:settings/>
        <con:config>
          <delay>15000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="17ff024d-6735-4a9c-84ce-b5a0e70c89e5">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="51f8a217-6019-4f7d-b124-01c1e1620bd4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b7b10cf0-300d-425c-8ded-dd2cb727eae1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="7ea0caf9-ae29-4c5f-97c1-979d8a567eb3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="60348e37-1b59-4849-ab8f-f57a02cfe3b4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="56b281b5-02ca-4d83-8965-da805ddb7c10" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="061ba0e4-5c1b-414a-8160-e7fd13956301" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="d420867a-0c29-4c81-96c8-3b8903492fe1">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="17b7c876-cf10-4a96-b3fe-846a567a2f0b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c5c8756-e9aa-4892-8267-8ad1bf31000b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ec56e512-26de-4288-89c0-dd70c6cafd4f" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a12447e1-4d81-4b63-b2a8-092e7fb9afc7" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="66428a2f-2e2d-4fed-af05-b5a50c343740">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="a1e03a4f-82d0-4aed-bdae-c054c33ef672">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="454ac95c-2a55-4dd6-922f-dd4c2477ff41" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="68e3ff1f-7c58-45c9-9f44-9a7c36f61642" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="c63bb1b8-aab1-4655-9bda-2a96ab8febfa">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="aad42bbb-1fa0-4d06-911c-b0df2dfb031a" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="b24c92db-765f-45a2-bba4-43656aa49be7">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="bf831dfd-a5cb-44cd-a1dd-1941da128983">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6adb7f19-1129-474d-aff6-2983ec84b8d8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="981c2467-1bbf-4897-99b6-4397706e7a41" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="68035c82-d307-4cc5-91d0-5be3c75bf2b8" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e1e6148b-582b-4931-b476-b18361b2cec0" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="bd67a5a1-d30c-4fd8-b60d-02a4c269377d">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="728d35fe-f8b7-4080-9333-b88798e26286">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="25caea45-cd2b-4695-af19-cc1e96a5a326" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5066797c-85d5-452e-8616-bf59d9408ff9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="05855749-8a10-45a2-8219-bcfa3692a9cd" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="2eae10a7-1a32-4be9-9151-585317c35d87">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7f0cc596-3a89-4ba2-9a43-98ea2cc22eb0" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="bb659e93-50aa-44df-a99c-3558a3fb7bf3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fecee2f4-6018-4cb9-9ba5-bc26713382b2" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="94c74d4d-9629-4d51-8c4c-0ea18e2683c5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="79147a31-d4bf-40fb-a58e-5310e4367ab8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="574bc501-120a-4908-b010-f6f094dc7005" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="12ce48a9-40ed-4b81-a692-8e7ae8ba4372" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f21a5612-e78e-41a8-ad06-a4c2f10b21f9" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="0d54d17f-0879-4a58-abed-225b8b4d1cc1">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="cba0c270-c440-42b5-96d9-bbed2ca0b381">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="23f1d523-a83e-4d11-a6f5-b17c0a2f39bd" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="798e9f12-c593-49b2-b7bd-05393eaef0fc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="99ca56cd-8d0d-4ce6-a7c6-910e162008c6">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="efe5faf1-4f09-4ec5-8faf-b3b6d0145b3f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7e970475-02b9-4c7f-a1f3-665169a6076f" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14be091-b057-4eb0-a004-040d372ea524" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f7fb5af1-2779-4a59-8941-cffbd64b24fb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="5a6da6d9-75b8-45d0-9bc5-888ee020e877">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="388af6fe-3a25-41e1-aa9e-776dc4ddd3a7" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="097dd72b-3e1c-4d02-b685-8d6c00e03d71">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="65dc2a32-c615-427e-b1b5-55414f7cbfd9">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="10dbd3d2-934e-4ceb-bb92-4f5abdafe556">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e6a6376-47e8-4488-a3e3-4295890430ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="0d9d0f41-eef6-4e6a-8882-3efacf2982fd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="b1916a4a-a3c0-4040-b443-6708be1bb1be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4c72fc9f-b615-4631-bbb8-6929afa5be5d" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="55ca078d-b669-4d39-95d2-b7466a0edc75" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="1f9d3d7f-23f1-4949-af72-a9b438b4a3a5">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="de1ce1be-0c2e-4d06-a77a-a4ae63725bd8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="727baafa-d3ca-4849-9627-f1217698c6c1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="f758a542-dd00-4496-9c0f-b87df49276c3">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="5bff1487-d9aa-4815-9230-41d108580c89">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c945630f-2975-46e8-a81e-8c5b768e8af3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="76226e45-1105-4df1-aecd-8531fcf01410" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="2fb3fc2c-bc9c-469f-9f7f-cd315d147219">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctchDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="48385e29-74df-4049-b4f9-23e379e2da79" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA-blocking" id="1fa36f59-091f-45db-9cb5-15b564658966">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-004</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>Y</blocking>
<proposeddatetime>${#TestCase#wishDate}</proposeddatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} blocking, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="a5a573b3-bef9-48c8-a505-32a963f8eb93">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c051cf6d-afc2-4039-8e66-648d8eae1e2b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9ce08446-0831-48a3-abf3-cfe93b64ac2f" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f442ad9c-8a22-4ed2-a38b-3d63b12e0235" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d3219ad6-9af7-47eb-a24d-452f21db3519" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="fc743b86-3938-4c85-95eb-78880f4425f7">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="5447f0cf-3594-467e-8b1c-1d1f45a95838">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="25caea45-cd2b-4695-af19-cc1e96a5a326" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5066797c-85d5-452e-8616-bf59d9408ff9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d738975b-796b-4876-8c41-d546d7aaf495" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="3ee33cf7-c819-40b8-888f-3aa71836d3d9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="173b2343-5c06-4cfa-ada1-b0f7af150d8b" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA" id="febb15e6-9f7e-41ee-91a6-801a6bf2a419">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiWishDate} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiWishDate} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="12e59763-3074-41e8-9fc3-0009bbab64bd" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="699eee62-fd60-4664-9c84-7e0c6c4e138b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="313515c5-1a9a-4730-88d9-6e36c03d36e6" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="382dcff6-9228-4d6f-bf4d-d9ff967fbb79" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0511c316-f437-407b-8eae-6be0e54d5f85" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA" id="2faf097f-d756-4384-884b-3da374955791">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 3" id="2cba91a7-c331-4bf9-8a8f-4b6b7139a2c3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>Y&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: proposeddate">
            <con:configuration>
              <token>${#TestCase#wishDate}&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no wishdate">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="dff4fa17-890d-4153-b5e5-76f059c87ba4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="123f9eb9-653c-45ea-803e-38bb1265911f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA" id="ca887ee2-f290-430e-910a-38487d5ab7cd">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA" id="f53b7aaf-4a45-463a-948d-13cfd636648e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="79e5921c-1cc3-4b96-94e5-27becdb749c3" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="2a2c3c04-c4b6-420d-a414-d1a9e338e034" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5fca7117-65fa-493e-a6e6-e32493a04a2a" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCHA" id="8d432587-7e0f-4258-b152-aa4a343981c7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>ChangeAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="286d1217-daff-4e6c-a390-188999ca29b2" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH2" id="ca2433bd-6c08-4189-9618-3d0b1f08b358">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh2Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 6" id="6fe1c28f-7a0f-46f5-bfb5-964342ead878">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH2" id="21661014-462f-4482-9dd1-c4007836d279">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#guiCh2Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="969d51b6-e10e-47f7-80a9-4ed0833de28c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH2" id="744c53c7-8442-43a1-b929-4939a57ec966">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="GroovyScriptAssertion" id="ce6c722a-7076-4bbf-a7e8-f434bb00aec5" name="Script: get wishdate" disabled="true">
            <con:configuration>
              <scriptText>import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ch2wishdate = holder.getNodeValue("//Results[1]/ResultSet[1]/Row[1]/MESSAGE_TYPE.DM_DATETIME[1]")
def string = ch2wishdate.replace(' ', 'T')
messageExchange.modelItem.testStep.testCase.setPropertyValue("ch2Wishdate",string)</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fa439ceb-dddd-40a6-bcac-30cfea11f6e4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c08cd217-18e6-494b-9a08-e008492c38a1" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>2</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="06728e6b-bd16-49f5-8f61-40680f7c5e33" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctch2DMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH2" id="3bb8a2cb-c548-4042-8dde-7813b0e45daa">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH2" id="2e049479-a26e-4289-886d-479dcce47fe7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="67905e7c-7c88-42a7-8f5c-cacce2609f38" name="Xpath: Change">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4888e5ec-704e-4f7e-8bbe-ab7f5ddfa202" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH2" id="0f1e54e5-6cf9-4cfe-b3ed-0d0a37372823">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH2" id="1f7c96b3-a31b-4e66-8008-c4a8ae371ab2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="b2979c73-8fbf-4655-9423-8c570376a288" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="65d58701-8f00-4f33-b5a2-eda542e8bda2" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH2" id="f2f84021-8281-4d31-9b21-24957d8e522c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctch2DMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3e8c4928-0841-4582-bda1-351d27ea80a2" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA ok" id="d0320446-2d64-4985-84e6-6a61aaa056de">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-05</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#ctch2ProposedDate}</wishdatetime>
<note>Change Answer blocking ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcha2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA2" id="1247f4f7-e449-4a6a-bd76-69b7e68daa8f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcha2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bbbb335-14d0-4529-9e7b-f4ca94e25914" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e7b19e97-c6d5-4be6-89d2-cdb9a58b9bf8" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="52fa79d6-e46b-4ceb-9f70-2b9509257f01" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f87345af-1216-491b-b562-1a005a348a5e" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="3486ad27-7df9-42d5-9d9d-e205b211fa24" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcha2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 7" id="16f65d9c-261d-49a8-b537-36f40b04bd4a">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA2" id="0c011e4c-e2be-4ba6-a54b-f5f52aaab658">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcha2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="67a50163-9088-4468-b56c-92f6a123a3cb" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="dbbceb38-6519-4fc9-8a16-860f1dc19242" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="588e542b-3ffc-4499-9aee-eeb52e48edce" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcha2RSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA2" id="23d76d2c-09fc-4e18-8bc6-f4641bf6e7e8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5d28564c-1c11-4f78-916d-90a5eb8a9710" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcha2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="a07c746b-27ef-42b8-8a50-270239e761f6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh2Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_CTCHA_PROPOSEDDATETIME</path>
              <content>${#TestCase#cWishDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be6b44b5-bcd8-4658-8de5-4de9ee37436e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA2" id="2d25417d-d7b2-4659-8a5b-a8e9e3cd4b6c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="37ea867d-1a4f-4b6d-9464-8e6b2e1afddc" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="60aeb9e2-e7be-46aa-a6da-1335dae293c7" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row[1]/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a7241de9-9d32-47e7-8ddf-d07191b293dd" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>2</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="112634d4-ae42-43ca-9098-1fac3dd453ac" name="Script: SaveDM_ID" disabled="true">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA2" id="7c1566df-da30-4756-9713-8bb5836a44bb">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCHA2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA2" id="074eb653-ae7f-42e4-a2a9-dcdf974fdd83">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>N&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: wishdatetime">
            <con:configuration>
              <token>${#TestCase#ch2Wishdate}&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no proposedatetime">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0016db61-53fc-4bc3-b8ee-00a2fa007ea7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="033e93d6-8260-4704-96f7-c8e16c1555dc" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA2" id="8da037ce-ec55-428b-82b9-964368df2f73">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA2" id="9d31016b-f63c-4b6a-b229-6fe04fd07835">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="5defa40a-3301-4fe5-8096-3618f6fca592" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4567d945-ad97-4022-8313-51f4cdec1f23" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8618002a-d92c-489f-a000-0680d2ca4be3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCHA2" id="81dac5c9-d579-46c5-bc16-60a772e1acf8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctcha2RSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>ChangeAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5dac94a6-cf9b-4faa-9ce4-4bcba2980cc6" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTC" id="c004c4d7-7d3f-4710-b44c-eed01ef4e446">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	funcHandle.sendCTC(seleniumHandle, javaHandle, browser, guiUrl, recipient, switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTC" id="06eb5cf3-db00-4c18-aa76-f61a462c105d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=11 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="1846bd70-ede9-4406-b758-7f23241ac3aa" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ac67b9a0-9b26-48ca-a6fc-f3eab5e36904" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="51c9870d-f418-4d55-851a-ae7fcd077c9f" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTC" id="1a21a50f-629b-40b5-9a8d-4bb6d2e82bd4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Cancelled</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e5674e64-b285-4e2d-b343-7a640c978165" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTC" id="91bc6ceb-9622-4862-8b26-919dc3eb769c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
	testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTC" id="c298f540-012a-4603-8dcd-7add7ed1ad77">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3e6d13cd-db91-453a-b133-3482c556c87c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="11ea6756-4d66-4e9b-8fdd-1174a9ba181b" name="Xpath: soap verson">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14f60c8-81d7-41d5-b77f-79114ea85e64" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTC" id="3917c50a-9c4e-4fdc-87b5-d7a50e45301f">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTC" id="8bafd7b2-80d9-497b-a850-bbfb44da2625">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="4880fe0a-4e68-405d-a3eb-797bbd832eb2" name="NotContains: no rows">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="02a2c5a8-0d80-4f36-88de-c5ad753114a5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTC" id="19ecb902-9880-467b-8822-e045bccc8fa0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctcDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Cancel received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Cancel received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="665a0cc4-2d96-4327-aea1-149d6d789865" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="CheckMail" id="c63fcc20-cca7-47be-9808-eb63316778b3" disabled="true">
        <con:description>Check for ${#TestSuite#donor}  ${#TestCase#switchId} 
if emails for CTR and CTC have arrived.</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="f42c7eaf-0944-464f-a70d-4bbacdf8c077">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 200.seconds
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "15-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.17 CTR-CTRA ok-CTCH-CTCHA ok-CTCH-CTCHA blocking - CTP buffering" searchProperties="true" id="41999b5d-d89b-4900-81e7-62ee3730f5a4" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="f9dd0c61-a79e-4c0e-8f20-11ee6b37735b">
        <con:settings/>
        <con:config>
          <delay>16000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="17e2a7dc-4717-4ffb-b489-2e549b1812fc">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="121af4cf-835e-440c-9eee-179c76cf9ff8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b7b10cf0-300d-425c-8ded-dd2cb727eae1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="3c71e3c3-1ab7-4c8b-8712-5e1c583f8cba">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="60348e37-1b59-4849-ab8f-f57a02cfe3b4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d79f9368-2b09-4a46-8ab4-558b401e4ee8" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="63e94b2f-31d0-4e08-bb7f-51255632c5ae" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="9fc8aaab-f5bc-4b3d-aa99-7a0007f376a9">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="983c4a8e-5dfe-467e-af33-b3449b954461">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c5c8756-e9aa-4892-8267-8ad1bf31000b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ec56e512-26de-4288-89c0-dd70c6cafd4f" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a12447e1-4d81-4b63-b2a8-092e7fb9afc7" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="fd041b08-ad2c-4678-b033-0e007d182aee">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="55c8a2db-13a8-4cae-bf8b-fe75b8b9d5ac">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="454ac95c-2a55-4dd6-922f-dd4c2477ff41" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="68e3ff1f-7c58-45c9-9f44-9a7c36f61642" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="d919c673-268c-4e2e-b0a1-1fc1ed68b200">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="02df4617-db44-423b-b60b-27c77c1ebbd1" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="6bb73b65-088f-4aac-bf63-1d821818dae0">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="e2004cd8-e9b4-47af-a469-57083315f348">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6adb7f19-1129-474d-aff6-2983ec84b8d8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="981c2467-1bbf-4897-99b6-4397706e7a41" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="68035c82-d307-4cc5-91d0-5be3c75bf2b8" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e1e6148b-582b-4931-b476-b18361b2cec0" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="e3d1e277-b94b-4b0f-adef-087db0f437d0">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="7dc96709-73ec-447c-8968-aba9f510cf7a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="25caea45-cd2b-4695-af19-cc1e96a5a326" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5066797c-85d5-452e-8616-bf59d9408ff9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="54853c9e-d796-432a-962f-125d24f63071" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="53f88afa-8726-492f-9b0a-72eff5110ba8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7f0cc596-3a89-4ba2-9a43-98ea2cc22eb0" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="15d31546-3b81-4d0b-b33d-a17f07d2f4b0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fecee2f4-6018-4cb9-9ba5-bc26713382b2" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="584fef94-2414-441f-a74f-a44563402afb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="79147a31-d4bf-40fb-a58e-5310e4367ab8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="574bc501-120a-4908-b010-f6f094dc7005" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="35ca57ac-4809-4957-b445-3e63efeffce2" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0eda3dc7-8ea9-42b2-bc2b-a529a93780f6" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="f364ec23-9c60-4478-813a-efaa1139b612">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="dae82de8-e636-4e77-b2de-73574872b79e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="23f1d523-a83e-4d11-a6f5-b17c0a2f39bd" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="798e9f12-c593-49b2-b7bd-05393eaef0fc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="ef7280cc-5e53-44fb-ab6c-99ff250f51ac">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="1a9becae-981b-40f9-926a-94e7a29f908e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7e970475-02b9-4c7f-a1f3-665169a6076f" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14be091-b057-4eb0-a004-040d372ea524" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f7fb5af1-2779-4a59-8941-cffbd64b24fb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="a663f45a-d453-4aab-9979-7dba2cb579ad">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c2b36039-ac74-4332-82d5-1c920f90268b" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="a90ba48c-b7b6-4319-ae27-0dc0da800fc8">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="46ad227b-9722-4ac6-b80e-608b51209025">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e6a6376-47e8-4488-a3e3-4295890430ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="52fd5f06-6f13-4588-b0fd-87e8e3b6a678">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="b1916a4a-a3c0-4040-b443-6708be1bb1be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="6f42bb25-96db-42a4-b1b9-5d6b357330f0" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="332bbc00-b3eb-4c96-a506-771e3397d734" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="0efcb0b7-d63a-40c5-b2f1-16c3c5b312dc">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="1b34fb06-b0b2-4286-a3ed-0e69b10939ba">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="727baafa-d3ca-4849-9627-f1217698c6c1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="889c1705-3121-40b6-87ab-b5d39e64268a">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="cd6e7f1a-8687-4390-8e39-5af4584c3a93">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c945630f-2975-46e8-a81e-8c5b768e8af3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="76226e45-1105-4df1-aecd-8531fcf01410" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="aaeff9c8-2205-4d84-8577-c6adcc571097">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctchDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4b0efc37-e1ba-47d4-99b9-da4ddcaab3a9" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA" id="ee5ea822-ef92-4b9b-995b-5d84048dfc73">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="5e229769-5ce9-4f4d-a02f-7fd4bb125851">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f6c05a55-b26f-4bd9-b303-56461538a8a2" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="74a35f65-5182-4f24-98a9-1e5e0391bbd2" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b2830046-1c9f-48e7-8767-c86370a584e3" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b6f9264b-b68d-4956-a328-72471efe5330" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="4f2748c2-1bbb-4932-96ea-1898ce3d3611">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="3572a703-af28-4d36-a538-c1862c538734">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d0e1985e-6e3e-45cb-b8b0-b45a21f9a2bd" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="fad17aaa-1f6a-4473-b040-bdb4a0c1356f" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="48890380-97c3-44d9-8fe0-12402f5acee6" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="51a8b99d-cc82-4162-96e1-cb225700a8b6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="64a67ad5-82d2-4b22-9a8d-02b9ead1c738" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2fb6578c-865a-470f-aeea-249ec110fc48" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="9a34f2e6-66f2-4646-92b6-050550036b02">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="bd859157-dcc5-4ef6-9e3c-d9b4efb1f01c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3eda72f6-71fd-4aa3-8a5c-e6b12ef74036" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="68f4020c-70f3-4c4f-88b5-909ad7bf44fa" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH2" id="fc28aa09-67cd-4273-81f8-1053bffb728f">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh2Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH2" id="3ba8573d-bec4-4b67-89cb-ffe843c558a5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#guiCh2Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="969d51b6-e10e-47f7-80a9-4ed0833de28c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH2" id="889538b6-8ac2-4097-8cfc-30d45994d0ef">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="GroovyScriptAssertion" id="ce6c722a-7076-4bbf-a7e8-f434bb00aec5" name="Script: get wishdate" disabled="true">
            <con:configuration>
              <scriptText>import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ch2wishdate = holder.getNodeValue("//Results[1]/ResultSet[1]/Row[1]/MESSAGE_TYPE.DM_DATETIME[1]")
def string = ch2wishdate.replace(' ', 'T')
messageExchange.modelItem.testStep.testCase.setPropertyValue("ch2Wishdate",string)</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fa439ceb-dddd-40a6-bcac-30cfea11f6e4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9333f2eb-0690-42fc-836f-430110e8d825" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>2</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="45e7bb3b-6538-413f-b1cd-6de0411987a9" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctch2DMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH2" id="f20dc053-4790-4f48-8c17-d3c9c04d6481">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH2" id="1cf9f899-17b2-4a7a-9f82-980f9cdd00be">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="67905e7c-7c88-42a7-8f5c-cacce2609f38" name="Xpath: Change">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4888e5ec-704e-4f7e-8bbe-ab7f5ddfa202" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH2" id="e77dd4fd-5983-492e-8ae9-145a2828b62b">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH2" id="d518af45-29d9-4e26-b2f2-4fbeea993fc0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="b2979c73-8fbf-4655-9423-8c570376a288" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="65d58701-8f00-4f33-b5a2-eda542e8bda2" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH2" id="50e4a583-d150-4ff3-b4c8-ad3ac78f99dd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctch2DMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b74e0a2c-192d-4778-adc8-6365df037df0" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA blocking" id="9a666b61-6b27-40f2-b953-c7c261c337a4">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-05</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#ctch2ProposedDate}</wishdatetime>
<note>Change Answer blocking ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcha2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA2" id="6f8b230b-f489-4833-8c8c-b86fc03d7e04">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcha2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bbbb335-14d0-4529-9e7b-f4ca94e25914" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e7b19e97-c6d5-4be6-89d2-cdb9a58b9bf8" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="52fa79d6-e46b-4ceb-9f70-2b9509257f01" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f87345af-1216-491b-b562-1a005a348a5e" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="1ce00a4c-3f73-4fe5-8d56-c2d3d58f63a9" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcha2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 6" id="dd7db3ff-5118-4b2b-8e58-5be9e57c32d2">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA2" id="d235f892-c77c-431d-9998-4475655cef2c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcha2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="67a50163-9088-4468-b56c-92f6a123a3cb" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="dbbceb38-6519-4fc9-8a16-860f1dc19242" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="7b584933-9a9b-4ea7-95cf-f0191e267eda" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcha2RSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA2" id="f8a078e1-cb0d-415e-a1d9-9c7e6aa7c1af">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5d28564c-1c11-4f78-916d-90a5eb8a9710" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcha2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="058825ce-3648-4fc8-abef-a12562917ad0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh2Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate" disabled="true">
            <con:configuration>
              <path>//CTD_CTCHA_PROPOSEDDATETIME</path>
              <content>${#TestCase#cWishDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be6b44b5-bcd8-4658-8de5-4de9ee37436e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA2" id="085d1dad-f37e-4277-bad1-6cd8d8ff1057">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="37ea867d-1a4f-4b6d-9464-8e6b2e1afddc" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9785e6a7-d710-4227-ac6c-b9e84b1e7be4" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>2</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="88ce0e48-9c69-42e7-971c-270f5e692a93" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA2" id="6b65c593-0d48-4b76-84c3-2190f29c698b">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCHA2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 3" id="6e5ee978-bc3b-469b-b09a-b24a57677cdf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>N&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9" disabled="true">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: wishdatetime" disabled="true">
            <con:configuration>
              <token>${#TestCase#ch2Wishdate}&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no proposedatetime">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0016db61-53fc-4bc3-b8ee-00a2fa007ea7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="033e93d6-8260-4704-96f7-c8e16c1555dc" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA2" id="1bf96e28-b8ce-4adc-b690-40213dcf64ec">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA2" id="d3e7ab2f-4ee3-45e6-b8d1-45d8bf852c55">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="5defa40a-3301-4fe5-8096-3618f6fca592" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4567d945-ad97-4022-8313-51f4cdec1f23" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8618002a-d92c-489f-a000-0680d2ca4be3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCHA2" id="e8b1f171-dc7e-43a0-8b1a-b23c8ba979ef">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctcha2RSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>ChangeAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5531672a-7fe0-4adf-a050-83f9a18fa2c3" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP" id="61652e65-b4b0-42ce-aa65-3d7ae6318203">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA and CTCHA(2x)  emails are received
//verify for ${#TestSuite#donor} that hte CTR and CTCH (2x) emails are received.  
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//Get the locator of viewDetails with current dossierID
def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
log.info seleniumHandle.clickObject(byViewDetails);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="0f933d47-845f-4d73-bc83-fa4ff4986037">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="496451e3-821f-45dd-99e0-c700a09fe438" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="8b69dbcf-5ad8-4e78-9a69-bc13b683b109">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="1469bcd0-8b34-4249-aded-953adddb4f3c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="897692e7-2e4d-4aea-b710-b5a05ca74c77" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="6d2fe77a-396a-4fd0-9731-d4c7d340f63e" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="74870d74-240f-4058-8a04-32977c426dbf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cd7e1363-f59a-4d4b-aba5-2539c517c9b7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
import java.util.Random
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.days
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "14-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.18  CTR-CTRA ok-CTCH-CTCHA ok-CTCH-CTCHA blocking-CTP direct" searchProperties="true" id="e9d5e6d2-c0f6-4c9b-8e4e-29b1a1008410" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="af42bb35-5bdc-4641-be92-a76c058afb93">
        <con:settings/>
        <con:config>
          <delay>17000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="90201df1-f6ba-42a0-828f-62016e3f19d5">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="c09c11ab-3beb-4d0e-9f05-eef4ca77990b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");
def switchid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CTD_SWITCHID[1]", "switchId");
log.info("Testcase 3-15 dossierid "+ switchid)</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bd3a759-d9e5-4881-bf60-afe26ef43240" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="7f1e0e98-710c-4b80-b531-6af27555c182">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="898f6ddd-45b6-47d5-ba8c-ea06c797ad4c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9cd13ec7-6705-4d8c-9f6d-64e5d2d6c69b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="4d14bc07-f26b-490c-bc58-0f0094f072c8" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="d929f0a2-9538-4e82-9b99-5ff0caf6159b">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="144a453b-a24d-485b-ba7f-0cbb88a2a913">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="55292669-7170-47d8-b025-dea1e40f7cf8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1630b40c-aa45-469c-a2c7-f76420c38f65" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="dd9c4da1-a0ab-47fb-972c-9d3ec348a654" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="cb8281bc-4adf-481a-b688-51e78b3dd130">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="3b413515-f7c0-4da8-a3d1-769ec3b724d4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="d33e6e2b-8790-4e68-983a-14454ffacd04" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cadeb218-6880-4036-b9ff-119d6845cf0b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="5b1ba27a-febc-4b2e-ac64-711309dd0c03">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e05db4db-7158-4ae1-9c04-09bec2a171f6" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="cfc332ec-b774-420e-b5da-3ba645302bce">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="1cfd188b-e1b7-4773-bc11-c7cace8ae9e7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3e5cf6ba-1450-4a0b-ac13-ba6254df54a2" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5ce8f27c-2cdd-4557-b472-221431b64f94" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3cdd08d2-6052-4fe0-96dc-4d739821eba3" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2e18e5ea-acf9-4d6a-bbd1-71f1c077944c" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="38a6638f-8650-4f05-91de-f5c6a7a16131">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="ce771727-5082-4c52-89ff-799b9af48d6a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8f1a622a-bac0-4897-a2c8-77c0cb43ed83" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="7728515e-9fed-4058-b7cc-ec934c705dae" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8af3f7a2-57e7-4bd5-b734-fc5b84dde921" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="04ab8841-3f19-440c-9e36-2a5cb39106da">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="220eec1c-2f13-4bb6-9d84-3dcb4782a61c" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="a9002461-0e11-49ec-a8d3-44944f17acc4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="888a79b2-df05-4da0-9e76-cc16a09e6603" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="47a82657-a7a8-428a-abf1-84a24e4dca55">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="48be8767-63dd-4b97-bd2e-6b148712f734" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9c3f665-02fd-417f-a931-4bae5ef4f761" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d255ab3e-ecc4-48b7-b092-afa79b1a0985" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="bbcf4936-34ac-4812-8db7-8817eaaf5c8a" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="eeb51c01-af82-4888-92f6-a4088c0a05d8">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="3a96e6fd-5a67-41c2-9255-80fc0c1d49d3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Request answer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ed038b67-62f6-4aa2-8b95-f2381a9cc282" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3d127954-12ef-4302-8988-68c72fac206b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="5301b590-acab-4280-bc42-c63c32c99537">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="8dfb0b98-b580-4c39-b545-475e6abf2bda">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="b0f6f224-4149-48c4-8e93-5fe0362dd8c4" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d4fccf19-3ee8-4122-a391-3c06892f6893" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3c574ea0-7a28-4f5d-bdd7-a72962ca91f9" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="db675b37-7e66-4302-8b23-3e9394cccea6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1edaad39-d40e-4051-b648-57b6855293ea" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="df00e5dd-9f5f-4564-9d1e-9f44223bed06">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="c2514e90-e9e6-423b-aa6a-a5a30d8b7d9d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3fdace08-47bc-4a9c-bea3-eedf47960e5e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="06f68028-1c5d-4f6b-8310-e2d6fcd8d68a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="ad681b60-0b08-414f-bf9e-288a1e48c297" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="602c9078-453d-419e-9b00-2b2a5b8086b1" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="195f3f9a-f103-40d2-9e15-201beb965f76" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="97b16f6b-d820-49c0-9723-bf58f2f6ec8a">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="2d43a95f-10aa-4781-89f7-b7530606cfe6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c700e7f-2fe8-4f40-875c-ce91c2e56070" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="e16c05e5-7441-409f-9582-8cca671dd556">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="a5bf7abc-7291-4b6f-b6aa-6277a25b48ca">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="92c5b2ef-5b3a-45cd-a52f-18a256b11942" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4eda4b2e-a5ed-45a8-9529-701acae315e7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="db17ca92-f637-4100-938d-6b80c720370e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctchDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9008e257-72e3-41c3-b8ca-b346c7889b0f" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA-ok" id="49100922-c7f4-46ae-9f2c-fcd610d3d597">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="38a1fafd-6448-4675-8334-a3dabe0f8671">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6ee43c8a-8179-4b8b-99de-a54cad403eea" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ef4fbbec-1996-4949-9882-fda763dcf75b" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="86353aff-c597-49d4-97aa-7f4e6c726ceb" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4d795ad0-f3d1-461c-940d-6fb3388e3857" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="59764686-ee67-472b-a260-59f6deb9853d">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="7a9740b5-2077-4af0-9481-f583b69c8d74">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="caf0182a-d390-4e84-9360-2bdaacba9e7f" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="ee61ff35-317b-4b00-a8ec-8e19c47ba8e2" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f2968f3d-e223-4f1c-b105-67e58e63cde4" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="897ae306-dc76-4430-b0bf-165e3e32cff1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="24432d32-d608-4ada-b297-d55c09095bf9" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="61aab746-08ef-4a85-a942-094e3b669e54">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3d01c165-e789-4b28-b4ba-3f174e134d4e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="fd28e759-7e13-449a-bea5-399f1db18868">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="c3187f36-a87e-4d67-b276-21ac6f07ff04" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d68c5481-0fc7-4df6-80b8-b4ffd725d1ef" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="63e6e916-5567-4ce0-9cdd-87b9d094ed07" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="43c0ead4-d18e-406d-9bdf-b52d4ed615d8" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA" id="38c1b6da-18c2-4247-a0d5-426d4618f29d">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA" id="2009789a-41e1-4b49-b0b9-31d0137e938c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>N&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: wishdatetime">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no proposedatetime">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ccfc2241-1cdb-4dff-bb24-778613b0f6b6" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b5ee25f5-203e-4bb4-ae9f-1868afb6b0c9" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctchaDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA" id="77ea6089-f7d5-4665-abbd-a0e11a6b2997">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA" id="c119824b-df68-4a5d-9199-6930775efa94">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="c2706c6f-8d75-4352-8ef1-2ab778814a86" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6384b2e5-d4b6-456b-b24c-48276ee22caa" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="52bc65c0-4c74-4be2-9ede-a621fecefa81" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCHA" id="aa079c37-1c45-48b8-b8e8-3d058f398016">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctchaRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>ChangeAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="99f93775-d7d4-4d85-be66-af299840f35c" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH2" id="87897478-df07-4d82-bc98-ae38353f065e">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh2Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH2" id="4bd89aa8-c85f-4040-9a00-e5aa3982e459">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#guiCh2Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="29b2f9c6-d45e-4755-a0ce-eac4d2021236" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH2" id="2e399e03-2805-444c-b394-c2e8eb7c00b8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="97ddf65e-f65f-4de4-9a43-6ca72a0d7fc7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="89440c0f-a5bc-4ed4-bec7-38aff57cafec" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1d0f3770-79c2-4ff4-aed3-a0cac5d7519e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>2</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e024ca72-e11d-4f67-b9bd-6fc588478f49" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctch2DMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH2" id="bcb792dd-f6d0-485e-9f45-34724e1332df">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH2" id="0f12adf7-1391-4f02-8d66-1cfea8fbcaee">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[2]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3068ab63-afe9-4668-849c-2b936393418f" name="Xpath: change 2nd message">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[2]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e1162bd6-7f6d-425b-a169-4abd878fe6e3" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH2" id="4b241389-f263-4873-90a8-84d7f8675247">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH2" id="dee91fbf-ed03-4aea-8a7a-182829e31551">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="6f54d1fc-caab-456b-bb0d-12c15a47f12c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="611ee388-def1-4af1-b7cb-f1679d9cedc7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH2" id="9cc631db-5edc-4ae5-a6f0-e09bb4b60f00">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctch2DMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05b3a5cc-3128-4a6e-a535-dd2d3f7f38d4" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA blocking" id="f0de437f-2fac-4a41-ab89-fad3e7d0249a">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-05</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>Y</blocking>
<proposeddatetime>${#TestCase#ctcha2ProposedDate}</proposeddatetime>
<note>Change Answer blocking ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcha2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA2" id="d2923988-8f4f-432c-b17c-5073c015c340">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcha2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4a47a2ab-b9cb-45b9-9295-7c5e50ef9532" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="bd5345ce-6d26-4ec6-9cab-d9c771438a34" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcha2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="db0fa649-c5aa-4291-ba67-5ae76297110c" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="bc4af8c2-0b2d-4e1d-af90-aa8fe5f93ab9" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c61cf3cc-d5b8-4867-825e-dff4bb60de11" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 6" id="341ab27e-8899-4d9d-83f8-4affd7c43279">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA2" id="54e49508-fde5-4733-b6c1-66cb28120dc4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcha2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9e1160c0-68c4-412d-b2de-e51868d40f3e" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="a99e150d-76e6-4663-bdf0-0a1f9e71f3c3" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="6ad67c40-70ca-426b-866e-82d8d60a46f5" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcha2RSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA2" id="f0ecbd03-bdee-43f9-b600-1d87d9d7e5f8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="37ed1e90-fb8d-43e4-8bb7-fa93af1395db" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcha2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-blocking" id="7a2d405f-f1ec-4d05-a15b-60aa727e5e05">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_CTCHA_PROPOSEDDATETIME</path>
              <content>${#TestCase#ctcha2PropDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5bf5d462-d42e-4eb7-a1db-d438551c84f7" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA2" id="3461bc19-8cbf-4429-bf32-caffdd820c41">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="fd9fe429-e598-406e-a449-645a82bf7f2c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="761caca2-c369-4497-bec8-5d115af7d1c0" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row[1]/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="13f232d6-fe1c-4963-85aa-24528789cadc" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>2</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="1b23cb4a-a5f5-405e-ae54-e3696f2a6b08" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA2" id="2cf296ec-2147-4133-ad06-cdcd3943a464">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCHA2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCHA2" id="27ea46d4-b423-49ab-8fb4-341228bd897f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>Y&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: proposeddate">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no wishdate">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ed02927b-cd35-4694-891f-74f51ff49406" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ed9a6255-0416-47bd-9390-4f424c82386c" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA2" id="78fac5fe-c608-4d6b-9b8d-51f22b24a85a">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA2" id="219da3de-ec06-42bd-9da4-42693c631db2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="f588bb43-2adc-4520-af08-5327ed857d7b" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="22a4a2f9-6528-4394-a330-8c2d5fb501ea" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="96103092-365e-4741-b166-11107ddf58dd" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCHA2" id="311d78d4-e3f9-4ba6-b9b5-0e70e0482f47">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctcha2RSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>ChangeAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c8acabf1-d818-40cc-aac5-16d6b2d01007" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP" id="7fcfb870-0519-4978-8241-a85bb0b91635">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA email is received
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//Get the locator of viewDetails with current dossierID
def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
log.info seleniumHandle.clickObject(byViewDetails);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="3db8aad2-001e-49fd-a844-40d9fb6259a4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Completed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>f</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cf0db72b-5d72-4c33-8f3c-9814dac4f61c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="bf165111-dc07-439e-9507-c89bde0ceaa5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="e900d3d1-d077-4a27-a503-b214634440dd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e4e59874-57c1-4bc8-b724-a06bd9653bba" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a12e8a77-b917-4508-a69b-725a1e4331e9" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c204c2fb-0ceb-4e7f-af94-8f84c7807a0b" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTP" id="a5e3587e-3952-45a6-944d-adf4f6d36119">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="2afdf8d7-e63c-4dc9-884c-4436b3163058">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7277aa2f-e8ea-44db-b706-7f978734f32d" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bb0084c-3b0b-49e2-a89a-df1a103997ed" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="da51d5ec-f8cf-4d2b-85c1-78acb9c6cf14" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTP" id="bd5e99bd-05a0-479a-90c1-66bcf758b2ff">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="00907d4a-d506-460d-b5ba-7e2c8efcc49e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="95891cd3-f574-42e6-a17b-4a71fc7bf43b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTP" id="dd892808-331f-42d2-8d0c-bc254af61ae0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctpDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Performed received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Performed received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4dd7bd9f-620a-4705-83c2-41b3fef5d9d6" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="CheckMail" id="de7012f1-a141-4883-bc86-919ef719b705" disabled="true">
        <con:description>Check for ${#TestSuite#donor}  ${#TestCase#switchId} 
if emaisl for CTR, CTCH (2x) and CTP have arrived.</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="cb0d70c3-ce92-46fd-bcea-c6f86f3981b8">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 200.seconds
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "15-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.19 CTR-CTRA ok-CTCH-CTCHA ok-CTCH-CTCHA blocking -CTC" searchProperties="true" id="ed164dcb-4d73-4b6d-a127-045b35212a19" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="delay" name="Delay" id="c163d788-14d1-440d-9054-83fe835e27a8">
        <con:settings/>
        <con:config>
          <delay>18000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="494ab598-1029-40fe-a376-d3790041443a">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="573877eb-cadb-4b56-97be-ed54bfa1b32d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b7b10cf0-300d-425c-8ded-dd2cb727eae1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="d856fd68-95a8-4eb3-83bc-9771c8777b8d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="60348e37-1b59-4849-ab8f-f57a02cfe3b4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="effe2e03-ea29-4025-adc4-993472528978" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="7944380f-ea24-47bd-9839-71f7e44c81b9" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="997b280d-2393-4af8-adef-31885ddeaba1">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="031d2b55-e306-4f48-b5d2-a6a967a78a0e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c5c8756-e9aa-4892-8267-8ad1bf31000b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ec56e512-26de-4288-89c0-dd70c6cafd4f" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a12447e1-4d81-4b63-b2a8-092e7fb9afc7" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="1c28c12f-4906-4ec5-886c-db0c4d9d548c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR" id="b169ef02-0aa7-4374-bff3-b5236a0fbf0e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="454ac95c-2a55-4dd6-922f-dd4c2477ff41" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="68e3ff1f-7c58-45c9-9f44-9a7c36f61642" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="171e6181-469e-4864-9168-3d9ed67efadd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f62e5aa6-b57a-4e4f-a752-ddc26397fa57" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="7508f8c7-600a-46b3-9c9a-6ca99785a046">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="bf8384a6-4a0c-4dec-9882-f94ec97980bc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6adb7f19-1129-474d-aff6-2983ec84b8d8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="981c2467-1bbf-4897-99b6-4397706e7a41" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="68035c82-d307-4cc5-91d0-5be3c75bf2b8" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e1e6148b-582b-4931-b476-b18361b2cec0" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="a88c1e32-d480-4f03-a1c9-7ab0697a61ff">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="cd1c68ea-a9f0-4300-a851-956bf56a1a0b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="25caea45-cd2b-4695-af19-cc1e96a5a326" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5066797c-85d5-452e-8616-bf59d9408ff9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c03660d8-7fdf-4ca9-9031-252b8ca6538c" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="a4bb5d6d-8915-4590-9b92-5860bd3305b2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7f0cc596-3a89-4ba2-9a43-98ea2cc22eb0" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="f77ff0f8-f003-4ef6-aba0-2dac04fe9404">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fecee2f4-6018-4cb9-9ba5-bc26713382b2" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="7ca042b0-b82f-4aa8-a49b-c88b76e6e5fa">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="79147a31-d4bf-40fb-a58e-5310e4367ab8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="574bc501-120a-4908-b010-f6f094dc7005" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8a7100d6-17fb-4709-9b96-fc7f8ebdd56c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="dbd2886d-1e6c-4fec-8fd2-7bc4e1639f27" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="0ce76b0e-a5a9-4e47-8408-7f0699529592">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTRA" id="0fe8e833-4f9a-424d-a1ee-106fe5f62ec5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="23f1d523-a83e-4d11-a6f5-b17c0a2f39bd" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="798e9f12-c593-49b2-b7bd-05393eaef0fc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="15a4f6b0-98e4-44c4-b34f-acba60df0bde">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="9a58a43d-d8ab-40e2-ac1a-ac53305df33c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7e970475-02b9-4c7f-a1f3-665169a6076f" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14be091-b057-4eb0-a004-040d372ea524" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f7fb5af1-2779-4a59-8941-cffbd64b24fb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="e67a4c1c-fb94-4223-b825-30f4a9fcd7ea">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctraRSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0fab1ed0-4257-4cae-a0f6-2d5a3cd8899e" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="13ffa5f2-e0be-49be-9ca1-859dcf57fcdf">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="d8de7abd-0447-4622-b61f-7353d154c8ad">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="0b194c75-18fa-4ccc-a6c8-9614da296276">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e6a6376-47e8-4488-a3e3-4295890430ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="1e63fdca-94fa-4461-8e4f-6c9c4fd97de0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="b1916a4a-a3c0-4040-b443-6708be1bb1be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="bec2a2c5-3521-4a8f-a769-08bd856400a4" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="245b96f0-01f6-49cc-ba29-b6d05dbb0874" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="35f9520f-f4bb-48cc-8157-4def97804771">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="aba3f17b-25b0-42e1-ae73-815540063cdd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="727baafa-d3ca-4849-9627-f1217698c6c1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="ef314ac3-ce10-4872-ae58-4ccf501e8e9a">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH" id="9cb89d56-c9f3-4571-bd2e-cf82fa448ab4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c945630f-2975-46e8-a81e-8c5b768e8af3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="76226e45-1105-4df1-aecd-8531fcf01410" name="Xpath: assert RowCount" disabled="true">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH" id="6f7a8b5c-9363-4a70-bbb3-e58dca663cc7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctchDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="90dab300-ca91-473b-847f-51dd9c8b73d5" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA" id="abe52d92-2fef-42d1-bd9a-9bc459130c35">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="68564953-91dd-4c60-82cc-31ede53dfcce">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f6c05a55-b26f-4bd9-b303-56461538a8a2" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="74a35f65-5182-4f24-98a9-1e5e0391bbd2" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b2830046-1c9f-48e7-8767-c86370a584e3" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b6f9264b-b68d-4956-a328-72471efe5330" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 3" id="ae6f89c2-b7d7-4b6c-a7da-2f2253fa6d59">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="04b35f00-7ff8-476e-acce-16a3e8e40327">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d0e1985e-6e3e-45cb-b8b0-b45a21f9a2bd" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="fad17aaa-1f6a-4473-b040-bdb4a0c1356f" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="de53eada-cdd4-4f3b-a3a0-f572ff21d5b9" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="9c54b688-5a35-4746-bcf9-d3afc7e40685">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="64a67ad5-82d2-4b22-9a8d-02b9ead1c738" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2fb6578c-865a-470f-aeea-249ec110fc48" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="d0e52630-c78f-4325-a89f-0b5cae6473d7">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="00ad7263-880c-40e3-8aa8-648081b34a20">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="bd859157-dcc5-4ef6-9e3c-d9b4efb1f01c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7a0a25ac-22bc-4ade-88cf-3ad103b2398d" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a295d27f-110a-4458-a8d7-37aaf865afbc" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="7139517b-e2c0-43df-ba25-591c21c7d48e" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH2" id="cf3d3190-7e01-4eb0-9ea3-74b4d0500b0a">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh2Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 8" id="a0fd5355-0155-4bda-b8f1-592dd6121cf3">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH2" id="2f0f654b-8011-471f-840a-33a39d0e6907">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#guiCh2Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="969d51b6-e10e-47f7-80a9-4ed0833de28c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH2" id="98e534ba-08da-4c46-9bb8-4598551251cb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="GroovyScriptAssertion" id="ce6c722a-7076-4bbf-a7e8-f434bb00aec5" name="Script: get wishdate" disabled="true">
            <con:configuration>
              <scriptText>import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ch2wishdate = holder.getNodeValue("//Results[1]/ResultSet[1]/Row[1]/MESSAGE_TYPE.DM_DATETIME[1]")
def string = ch2wishdate.replace(' ', 'T')
messageExchange.modelItem.testStep.testCase.setPropertyValue("ch2Wishdate",string)</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fa439ceb-dddd-40a6-bcac-30cfea11f6e4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7b18a10e-6c63-42c9-8926-c66eec8c188e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>2</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="2ab9def3-abc0-443c-95ad-76adaa833a28" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctch2DMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH2" id="6cf0bdcd-44d7-487c-982c-cc0f534fa70a">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH2" id="58776bb1-9952-48e1-a61e-5a4d375a26d7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="67905e7c-7c88-42a7-8f5c-cacce2609f38" name="Xpath: Change">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4888e5ec-704e-4f7e-8bbe-ab7f5ddfa202" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH2" id="b8be5bf2-08bc-46c3-a1ba-ca755bf669f0">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH2" id="5675a859-8574-4f53-b2ca-7d57364943e7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="b2979c73-8fbf-4655-9423-8c570376a288" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="65d58701-8f00-4f33-b5a2-eda542e8bda2" name="Xpath: assert RowCount" disabled="true">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCH2" id="0972c39c-be3f-4f3e-8d7a-5639b17e8254">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctch2DMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Change Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d2cff823-92d6-42f3-b67d-cf1ca52c2ef7" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA blocking" id="95fde3be-eaf3-404c-98fc-83fb48842d35">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-05</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#ctch2ProposedDate}</wishdatetime>
<note>Change Answer blocking ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcha2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA2" id="f346ea43-fbaf-465d-95ca-ca705c76f5cd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcha2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bbbb335-14d0-4529-9e7b-f4ca94e25914" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e7b19e97-c6d5-4be6-89d2-cdb9a58b9bf8" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="52fa79d6-e46b-4ceb-9f70-2b9509257f01" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f87345af-1216-491b-b562-1a005a348a5e" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0ff54f8d-a597-48d6-aecd-31ff5aadeaa0" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcha2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 6" id="c8f60f59-54b0-4b39-98e8-888b1eea1b02">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA2" id="bcda7009-c181-4d07-b86f-e49b01983d1c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcha2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="67a50163-9088-4468-b56c-92f6a123a3cb" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="dbbceb38-6519-4fc9-8a16-860f1dc19242" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctcha2DMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e4f9859e-7403-4e19-9ea5-4d89c911a500" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcha2RSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA2" id="c768a352-e0fd-4e94-b81c-828167d5cef1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5d28564c-1c11-4f78-916d-90a5eb8a9710" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcha2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="948cdc95-f4da-417b-949e-3e573b67fd23">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh2Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate" disabled="true">
            <con:configuration>
              <path>//CTD_CTCHA_PROPOSEDDATETIME</path>
              <content>${#TestCase#cWishDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be6b44b5-bcd8-4658-8de5-4de9ee37436e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA2" id="0623f1b5-3362-449c-b867-26bf36db3dde">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="37ea867d-1a4f-4b6d-9464-8e6b2e1afddc" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="60aeb9e2-e7be-46aa-a6da-1335dae293c7" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctcha2DMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fd201005-3312-4ff6-a471-1ccbb6f5b487" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>2</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="ce8c81e9-f104-4467-a075-89628ea50944" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA2" id="1ed1e3bf-fcfa-40e3-9a5d-dc6708d15103">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCHA2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 3" id="e77e744a-4866-4a75-8790-e34eda4e17a9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>N&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: wishdatetime">
            <con:configuration>
              <token>${#TestCase#ch2Wishdate}&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no proposedatetime">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0016db61-53fc-4bc3-b8ee-00a2fa007ea7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="033e93d6-8260-4704-96f7-c8e16c1555dc" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA2" id="ae520df2-5cfb-4239-b98e-c3ded82e3aeb">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA2" id="e328ab31-52c9-496e-8f46-73b87e5c4da2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="5defa40a-3301-4fe5-8096-3618f6fca592" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4567d945-ad97-4022-8313-51f4cdec1f23" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8618002a-d92c-489f-a000-0680d2ca4be3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTCHA2" id="a51a756a-db48-47b7-9d3e-6a6e1c7a1034">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_rsxm_id = '${#TestCase#ctcha2RSXMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Change Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Change Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>ChangeAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="173421cf-3b62-47fd-8160-4ad6c984616b" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTC" id="d5b153ae-d4eb-4e3c-90e5-df5d1bedf6aa">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	funcHandle.sendCTC(seleniumHandle, javaHandle, browser, guiUrl, recipient, switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 7" id="8edf49b5-a1e8-4826-a615-52d9fe7b0296">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTC" id="9395c237-d19d-4328-ad2e-feb5024f203e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=11 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="1846bd70-ede9-4406-b758-7f23241ac3aa" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="845df18c-a94e-425b-ae80-d24ca7c15950" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="6c1e888a-f37e-4e2a-8bc5-35d9329bf0f0" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTC" id="855097f9-1823-460f-a310-2645b18c32c0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Cancelled</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e5674e64-b285-4e2d-b343-7a640c978165" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTC" id="f1758661-47ce-4171-b315-77e858d8a293">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
	testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTC" id="417f7a1c-3f55-4d12-9567-59113518202e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3e6d13cd-db91-453a-b133-3482c556c87c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="11ea6756-4d66-4e9b-8fdd-1174a9ba181b" name="Xpath: soap verson">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14f60c8-81d7-41d5-b77f-79114ea85e64" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b3bb5a3c-6664-4d19-bf4c-3acea9c8ba09" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTC" id="bb32b62f-5520-49cd-90a3-e46918cb04ff">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTC" id="c5cf427d-5009-4703-8c61-2d862ac6dbe3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="4880fe0a-4e68-405d-a3eb-797bbd832eb2" name="NotContains: no rows">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="02a2c5a8-0d80-4f36-88de-c5ad753114a5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTC" id="31b8ae1e-6a8a-428d-b935-cd8231d26987">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctcDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Cancel received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Cancel received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="879195bc-9174-4a28-926a-80620b12cf61" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="28cecd05-9ebd-4c1f-9cef-66959eaa1aff">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
import java.util.Random
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.days
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "14-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:properties>
      <con:property>
        <con:name>PollTime</con:name>
        <con:value>2000</con:value>
      </con:property>
      <con:property>
        <con:name>TimestampNOW</con:name>
        <con:value>${=String.format('%tFT%&lt;tT', new Date())}</con:value>
      </con:property>
      <con:property>
        <con:name>lineNumber</con:name>
        <con:value>0</con:value>
      </con:property>
      <con:property>
        <con:name>maxDays</con:name>
        <con:value>90</con:value>
      </con:property>
      <con:property>
        <con:name>maxBusinessDays</con:name>
        <con:value>120</con:value>
      </con:property>
      <con:property>
        <con:name>testdatafile</con:name>
        <con:value>testrecipientgui.csv</con:value>
      </con:property>
      <con:property>
        <con:name>browser</con:name>
        <con:value>firefox</con:value>
      </con:property>
    </con:properties>
    <con:setupScript>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
import org.apache.commons.lang.RandomStringUtils
import groovy.time.TimeCategory
import nl.coin.Selenium.*;
def directory = groovyUtils.projectPath + "/"
System.setProperty("projectfiledir", directory)
def seleniumHandle = new SeleniumActions();
def funcHandle = new ReadymadeFunctions();
def Line = funcHandle.getTestDataAndIncreaseLinenumber(testSuite, directory);
//Split the first line into a string array and assign the array elements to various test case properties
String[] propData = Line.split(";")
funcHandle.setRecipientAndDonorSoapCredentials(seleniumHandle, testSuite, directory, propData[0], propData[1]);
testSuite.setPropertyValue("soapVersion",propData[2])
testSuite.setPropertyValue("dossierType",propData[3])
testSuite.setPropertyValue("compensationOK",propData[4])
testSuite.setPropertyValue("recSoap",propData[5])
import groovy.sql.Sql;
def  con = funcHandle.createDBConObject(testSuite);
def recepientDetails = funcHandle.setProperty4mDB(testSuite, con, "select spr_code, it_interface_type,business_gui_only from overstappen.service_provider inner join overstappen.interface_type on service_provider.spr_request_it_id = interface_type.id where service_provider.spr_code = '"+ propData[0]+"'", ["business_gui_only", "it_interface_type"] as String[], ["recipientbgo", "recipientif"] as String[]);
testSuite.setPropertyValue( "recBusGuiOnly" , recepientDetails[0])
def donorDetails = funcHandle.setProperty4mDB(testSuite, con, "select spr_code, it_interface_type,business_gui_only from overstappen.service_provider inner join overstappen.interface_type on service_provider.spr_request_it_id = interface_type.id where service_provider.spr_code = '"+ propData[1]+"'", ["business_gui_only", "it_interface_type"] as String[], ["donorbgo", "donorif"] as String[]);
testSuite.setPropertyValue( "businessGuiOnly" , donorDetails[0])
def donorsoap = funcHandle.getDonorSoapVersionS2SAndSetProperty(testSuite, donorDetails[1], propData[3], "donorSoapVersion");
def donorbusiness = funcHandle.getDonorDossierTypeS2SAndSetProperty(testSuite, donorDetails[1], propData[3], "donorDossierType");
def donorMessage = funcHandle.getMessageTypeAndSetProperty(testSuite, donorDetails[1], propData[3], donorDetails[0], "donorMessage");
def recipientMessage = funcHandle.getMessageTypeAndSetProperty(testSuite, recepientDetails[1], propData[3], recepientDetails[0], "recipientMessage");
funcHandle.setProperty4mDB(testSuite, con, "select id from overstappen.service_provider where spr_code='"+ propData[0]+"'", "id", "recipientId")
funcHandle.setProperty4mDB(testSuite, con, "select id from overstappen.service_provider where spr_code='"+ propData[1]+"'", "id", "donorId");
funcHandle.getOutgoingMsgTypeAndSetProperty(testSuite, propData[3], recepientDetails[0], recepientDetails[1], "donorOutMsg");
funcHandle.getOutgoingMsgTypeAndSetProperty(testSuite, propData[3], donorDetails[0], donorDetails[1], "recipientOutMsg");
con.close()</con:setupScript>
    <con:tearDownScript/>
    <con:reportParameters/>
  </con:testSuite>
  <con:testSuite name="3.3.2_SunnyDay-State_Transitions_RecipientGUI_ModuleScreen" id="fb34f994-41a1-4e02-ab5d-3a9a3f985f11" disabled="true">
    <con:description>CDV-703: Disabled C3.6 &amp; C3.12 test cases
CTP step is not automated from module main screen, as we have sorting problem in that.</con:description>
    <con:settings>
      <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
      <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">true</con:setting>
    </con:settings>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.1 CTR-CTRA blocking 99" searchProperties="true" id="02859770-8c9a-4995-83a9-417a6c7932f1" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="ad98023c-d2a5-4cdd-a277-bc0039f51865">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="431a6e7a-ec92-4b88-a657-57ac7e5e9876">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="JDBC Status" id="e4415146-698e-4844-be0a-cf0f5018f1ae" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="c713144f-d16c-41af-b9f6-c02291d2e078">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="f116fa6a-8895-4986-b1aa-446d9e201909" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="aca0adf0-394d-419d-b52e-ee7534d0fe5d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="201b51ae-a8aa-4e52-a088-354ccc34a551" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="6898c931-d19d-4f19-abf8-c3c9395b5eb1" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="18d0ed4f-c543-4df7-a4b6-92f4bbbd72a6">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "Wait For send Poller")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="ea2022df-b544-49be-9b6c-3995151416b5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac0e5b22-e677-48b9-afc6-8f2331fc9f07" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="bc6cefa8-7aa6-4de5-afef-8bcdc506f545" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e38526ad-5bf0-4755-8b82-90ec10384a13" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="7c6cb086-e29f-4811-973e-c4086e498de3">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For send Poller" id="ab7ba289-269d-46df-81eb-26fa7486acbe">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_NoSend" id="ed90c6d6-af63-4166-b0a5-35f88a9d65b5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and st_message like '%${#TestCase#switchId}%'</con:query>
          <con:assertion type="JDBC Status" id="cc45d6ef-2316-4378-b582-f321b46f2cc1" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="9dc2a7bb-7c16-4bd1-980b-734fceb80acc" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-blocking" id="f91cf447-74fa-4cd9-b898-62dcdf5c3005">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>Y</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>99</blockingcode>
<note>Request Answer blocking ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="bd30412d-fc5f-452a-b2d0-24c28bdf154e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0dee71a3-a935-4b06-b972-c813e5f4ada7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="87a46e1b-6abd-40e9-93d7-879cd5d80622" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fe92eb90-8575-4ba4-8bb8-62355e7b99e1" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="62a39dc6-77ee-41a5-89bb-452f2cf60f3b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="a947952e-6f55-435a-aa97-46ac35b6b972">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="b661a372-26a3-4108-8097-a22bd668285a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4d48a085-3f43-46c6-8810-e8e94ec93ff3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b58743e7-0a55-4986-8e86-afa8533ab867" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="06889d3d-6dff-4af5-94a0-4cdf3cffe8be" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="d0095b4f-7920-487b-8bf9-1fba1d67d56b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="de7dd802-8f79-48c8-911b-6b11ee6d662f" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="8622f0ec-8885-4619-b3f2-0b6564e9507d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Blocked</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be12c6b7-e826-4a58-b4c4-a5ec955b7f46" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="3ab6f039-b506-4afe-a7aa-8d22f9bd0c4d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="da663a2e-7feb-471a-9c29-84be65f04692" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="212ef293-cfa9-4a8b-b970-711abd7fd3ab" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5f249470-aff4-4bf9-aa98-94169b08ebe1" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="fa74bc38-21df-4953-90c8-41e93ef32694" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="cb7faf16-bd8d-427f-8f25-36c72f9b83c2">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 1" id="e0982891-aad2-4c70-b7bf-09a64ff1472a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1f3a2336-d8af-4fcc-a5e5-e834c9de3bb1" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="15efa522-b0f6-499f-9adf-dd1f09fb7588" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="4acc500f-2a77-45b7-9c6e-4236c7960cc0">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="f37c82b9-a86d-465a-917a-3c9d066f6790">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7c2ead04-db2e-4ede-b16b-85c280699784" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7a60508b-5cbc-4994-8350-5538bcf33f7b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e3c9580b-5332-4fe1-8f7a-98def76fd3d3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="check CTRA email" id="d6d21cd2-281c-49e9-bc67-a7357a7c2076" disabled="true">
        <con:description>Please check for ${#TestSuite#recipient} that the CTRA email is received
for ${#TestCase#switchId}</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="497a9813-0794-4d2e-a79c-4708fc6059de">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def guiwishdatestr = wishdate.format("yyyy-MM-dd")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdatestr)
String contractId = funcHandle.getRandomString(9, "1-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.2 CTR-CTRA ok-CTP buffering" searchProperties="true" id="5c23fa1e-51c5-43c9-91b6-a20d5da18257" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="6ca24459-778f-4071-83e6-a563670f133f">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="0e32f89f-f27b-46bd-8562-9125b48684c4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="bc7d5e6d-e2ce-4678-961a-4bed06c24de5" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="1a0b5aea-8eb2-479a-8e7d-dcceab0d1bf4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="e16c88de-a3d8-4bbf-9708-469b40ddcde5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ee70ef94-eda4-44d3-8e80-7dac6fae52c9" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="aa569a9b-c702-4b9b-b6b3-980805ff9443" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="56316b37-8c48-4aee-9293-546102329858">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-Check no Send Status in ST table")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="8ec7e991-1a1c-4296-af54-49ed84120a8b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="58dd4262-1e01-4085-8f11-e8800c5d88be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0e28d734-e392-4f26-9c0f-eb6f0b7d6abf" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9d984b35-fec5-4420-985a-d949389686fb" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="b1cefbd3-f532-41c9-b750-d194936b67d9">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_NoSend" id="7db8c6bd-3705-470f-9dd9-0460c01f0b5c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and st_message like '%${#TestCase#switchId}%'</con:query>
          <con:assertion type="JDBC Status" id="cc45d6ef-2316-4378-b582-f321b46f2cc1" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="9dc2a7bb-7c16-4bd1-980b-734fceb80acc" name="NotContains: Not Contains" disabled="true">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="2fc14090-f3bd-4fb3-82cf-189ed4084ca6">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="9c4f1309-3b3c-4225-b0af-edf6fef0bf90">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f768c42d-88e9-41c9-a0b2-8d05cd171719" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9155beb2-508d-4306-8bfd-4e9e85cdafb7" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ad16e040-b3cc-42da-b28e-88ef0a648479" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b12f671e-b338-4683-b415-be81a185763f" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="83eaa889-a57f-4b45-844a-6adb38d86150">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="e6e9b843-6c69-495a-a5b5-69af06607b9e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9569e434-49ab-4e45-a050-80ba0e196e2b" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="cdb4ab0d-32f0-4676-9d1f-90b5597e6307" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="770dc763-ea93-48c1-a884-de74b5923062" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="3af00a14-267a-4cf1-9bc8-2f2ec991d650">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0698abb2-b5fd-487f-b97c-78ded47ab78d" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="bc834cf3-1058-4c60-896f-aba9e8b2e12b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e40439fd-a28d-447c-b44d-3fb2c6ef4dea" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="7ad1dcd9-0ea1-470d-87df-1b50e2e62fa4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="aee83c84-1f40-4d13-a66d-1b6209582295" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d53ba6f3-831f-4961-a4f2-a1f4e5790824" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c9c1d87-218e-4e8a-88d4-376c33208bf2" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="274f9e6f-40a0-418d-a0f7-fd9e5317db5a" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="72950a31-b39f-4956-98bf-62c8b035a503">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 1" id="7d6b06c3-466f-4e5b-bd80-3cff4f89e17d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9" disabled="true">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match" disabled="true">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="81ff77ff-f8eb-43aa-b40d-42cb951150d9" name="Xpath: soapversion" disabled="true">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e149e04-50b1-46af-b467-8b543fca4616" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="a616e1fc-2167-4578-a918-da80b9615478">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="e73853b0-db3d-406d-96b5-5b4b557bb3b5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="b6d5ae98-57ce-4e00-9ffd-14dd43eb4e5f" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="043760f7-0e54-48ca-ac4e-540aefdf7d3b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9e6eb0ac-6236-43c5-95f1-c9a11a24dd0d" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP" id="6e0b7c79-b6f7-4bbc-a6a7-5335b16e0960">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA email is received
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
//log.info seleniumHandle.clickObject("HomePage","PerformedMenu");
//
//Get the locator of viewDetails with current dossierID
//def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
//log.info seleniumHandle.clickObject(byViewDetails);
log.info seleniumHandle.clickObject("HomePage","SearchTab");
log.info seleniumHandle.enterData("HomePage","DossierID",switchId);
log.info seleniumHandle.clickObject("HomePage","SearchButton");
log.info seleniumHandle.clickObject("HomePage","ViewDetailsSearch");
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="ebdbae1b-969c-41cf-9de1-de13be6b00ca">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5d1906d9-833e-4c0e-a60e-6f721ded678c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="80a9971a-bbec-47a0-b097-af1493e7223e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="9522087d-47b9-4f57-a36e-06f3b8b0df6e" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b946d05d-3c16-44fe-8256-c4afcf46ce75" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="50416ba7-383e-428d-b092-09282e35e880" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="f4c18349-44cb-48f2-8e19-2e94e9c3cf89">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="836d44cf-beaa-49c2-8a5e-5cf16be2ea85" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ad98d404-ebdd-4338-b29a-fe44c6ecf63d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="696ffc21-ade8-4452-b52b-b09a6c4243f6" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="335d6018-ddc9-43e2-9917-402deaee4a0a">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
import java.util.Random
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
         wishdate = wishdate + 1.days	  
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def guiwishdatestr = wishdate.format("yyyy-MM-dd")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdatestr)
String contractId = funcHandle.getRandomString(9, "2-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.3 CTR-CTRA ok-CTP direct" searchProperties="true" id="7831c9fe-7004-4b47-a0d3-a6e58ba24956" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="6d5c0ced-d119-4de9-a6ff-9c1c5a9d79f9">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="a7d60a74-4d75-4e9d-b3da-3442043d5e50">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");
def switchid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CTD_SWITCHID[1]", "switchId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="de2ff4b5-671b-4763-abe0-169757adc3b5" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="499cac47-e975-470e-aca1-1d95f461b253">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="9c6a4c76-f8c0-4b58-9c06-85a2dca62d43" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5d0b6b76-fa87-47f3-8773-1e72e38bca97" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f9823ca2-6d0c-463f-9ba3-ef8a01a28708" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="bd3b0b6e-ec41-444e-af0d-f14cdfe9e34c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="cd41ba14-2a9a-42a8-81f7-a3c3378a186f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8a079eb7-72d1-4afd-886b-216280b5891a" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1195ffda-6c6c-40a0-ac4f-7d107c84543f" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f21fd3fd-a473-4b44-9ba1-2a1d33e6f077" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="8be080c0-9d6c-4cef-a687-dedae147c2c8">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 1" id="2e64a5d7-3b68-4047-8286-25ef8ac1344a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="Simple NotContains" id="9b2d6ab3-c2c2-4565-8ebe-9554d73403ed" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fb7616b8-b0db-42f0-8c5b-4baafabcf7d5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1907c7be-eadd-4ecd-bffa-6d978f7acd6f" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="b9c26726-4434-4ec2-86ea-a75713a88230">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="4bd5920c-fefb-4d85-88de-4689012c8a92">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="59bda985-e924-46df-acde-29b94b388b20" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ed9cdea9-4fed-4668-8553-fa16846f9b1c" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="06e38d06-0656-4338-a760-5bae3ffe2fbd" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b7b0ecd3-bcbb-43c7-9a02-bf99b8e15dd0" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="37de08e4-6056-4af0-a957-5de9065176ed">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="d0c9b136-35c2-405f-9041-fa56c3e1f680">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="bc927106-c4d2-4e7a-b6a7-52146e60fcfb" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="bf4198a2-321c-4c22-bed3-8e9f5a769f3b" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="acfbaaa3-5dba-4d95-b34d-9e665c8b17db" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="af33cc80-8429-4a43-9426-63e397c98e59">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b8cd2452-0710-4c5c-aba1-567355c04271" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="b3f73cb4-850e-4d77-8a08-e3c6e69ab291">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="a11dfa18-126b-410b-8ba5-efd785068433" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="e0d5dfae-094c-419f-b566-0d8719644174">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="47442577-ea95-43a2-b281-0d4209903d99" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8d88f9f0-0b01-4f0c-aa48-557455b73832" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9e0707fb-34bc-403c-a1b5-c2d388773d35" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="ca2fda2c-00ab-413b-afc8-8fe0cd4e2795" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="ec1a723b-a23f-49cc-af37-3d35a5d58e75">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="57357d86-5d24-4f5a-81a0-22e35f012b0f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="28e95b97-51c5-43ff-a3d2-30b8aef2e4fb" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="71f5e64a-5488-42d3-8d99-1541b5ff62db">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTP direct")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="bfb2c7d8-403b-4328-81c7-e36e5ce5ed4c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="JDBC Status" id="03e8a379-fbf8-48a6-9917-a789cac2f09e" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c4f3746c-cf96-4a4c-aa2c-ff36a5201ad8" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP direct" id="4ce96ae7-7394-4cc6-91e8-d5d411b8b08e">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA email is received
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
//log.info seleniumHandle.clickObject("HomePage","PerformedMenu");
//
//Get the locator of viewDetails with current dossierID
//def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
//log.info seleniumHandle.clickObject(byViewDetails);
log.info seleniumHandle.clickObject("HomePage","SearchTab");
log.info seleniumHandle.enterData("HomePage","DossierID",switchId);
log.info seleniumHandle.clickObject("HomePage","SearchButton");
log.info seleniumHandle.clickObject("HomePage","ViewDetailsSearch");
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="91965335-d154-447e-9306-cc662adc07a8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Completed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>f</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="04d95770-aed3-4ad3-af31-aa94fc177219" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="e1c4c9fc-e78c-451e-8733-25478062df60">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="aaeb9b7d-f5dd-46d3-9ef1-fb92dd8eb051" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="44fcb615-a724-459f-bc34-b8cd00565bdf" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="597186e6-5e93-451e-8404-e61d6ea28576" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTP" id="967d562d-be8f-4a6c-9a74-6a610b28b4ff">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
	    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="46afb96d-40f1-4232-bf74-4fc0daad4b05">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7277aa2f-e8ea-44db-b706-7f978734f32d" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="51fd96a3-4513-4cad-bcf6-d6992a32c31e" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3e7cbf73-7d82-4df5-b08b-3731c5fee234" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ba3f858d-dd6d-4c25-8181-f5a41e9e0882" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTP" id="fe8fb3a1-0476-4bcc-81e7-59142a81530a">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="CheckMail" id="d5024c65-8810-421d-b7ee-301eda463243" disabled="true">
        <con:description>Check for ${#TestSuite#donor}  ${#TestCase#switchId} 
if email for CTP has arrived.</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP 1" id="69ac3a8c-7074-46d7-bc04-79707b51aaee">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="395ced67-d7a4-4a45-b07e-276fbec0bf75" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="333be283-d169-44e6-a5bc-dd8e7baab64a">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 60.seconds
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def guiwishdatestr = wishdate.format("yyyy-MM-dd")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdatestr)
String contractId = funcHandle.getRandomString(9, "3-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.4 CTR-CTRA ok-CTC" searchProperties="true" id="54f57b5a-259d-4c76-921e-24cd6170801b" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="8194cede-0564-4e97-8712-2be439f7bc59">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="5785424b-c037-4af3-86b1-02d55f8af3f7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="19026b41-ccca-4883-97c3-823163e38824" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="63388c63-a06d-406a-87d1-590be5852c14">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="5cb6bed4-aa52-4dfc-bd1e-09609461ec9b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7a0bbd42-3dcc-41aa-baca-326f6a5d4c85" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="1f722875-4dea-4056-a74f-cc53a743f186" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="51dc6771-f889-4161-a18b-88d2801b25ab">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="4545dfb8-880e-4a01-bd0a-826ab9ce145a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3ccbb5f8-44c9-4b03-b8f6-53810791432b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ec149c4f-2d75-4b3b-a5fb-66d71dedab94" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6e0b600f-caf3-458e-b3ff-d4e6b3cb5a87" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="b24151ef-c528-4a33-a752-9d1811588ba8">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 1" id="ad073203-9463-4ff0-a260-5d473e11abf3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="79ddb734-e96d-44bc-897c-fb57b90350ca" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b59bf65a-290f-4cd1-acea-88560508a0ed" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="13b72a03-ee14-40fa-ac61-3094042b64cb">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="7de092f4-6a96-452b-833a-5d5588bf64dd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="86d3842b-e5b8-4f08-b99b-b02e24cf2fc4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9ca130cd-0141-4911-925b-c46958e26441" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="718d1492-f757-4043-8ab0-2ffbf41bede6" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7f701631-99c8-4eab-84e0-75d46a798fcc" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="6b86ea73-317e-4b58-bf52-9755beec1aa0">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="03e506ca-f1f0-4ead-97f9-75bca79d469e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e2858a53-2e03-4a40-b0d8-7053e232d1b1" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="3e60cf15-7e20-4bde-b967-e26879ff51af" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="74ba2779-25dd-42c3-b6f0-de9b27b5ba16" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="26cf62c2-7bd3-4f08-9750-86c54d934d7f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="917d7c50-c8b6-4d99-b6bc-1e5cc45d366c" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="2ce6bc06-6ca9-4931-8689-327a0e67b25d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="56d4b1e0-5f6c-4284-8d93-a944881fab9d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="6de316df-f761-4200-8ee0-3d1474ba8d04">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="150530f7-1461-41ac-a6ba-d3784260b12e" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a3708109-8254-4704-a509-a126754e4bca" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f0a12698-57ef-420f-9759-fa451d449109" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="ef030669-7416-4220-ab8a-197972069c68" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="5f0047f7-61fc-4568-80e9-ccb927d99b42">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="84b42a53-7ed7-4641-8376-ffd6ac458fcd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8ee3c61a-edc3-4f5d-a6e5-52a1f94a3d46" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="09b22ae1-8f88-48ec-acbd-a7d490b3aff0" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="b858cc85-77b1-447a-a6f1-ef2b142284c1">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="2c299e1d-d53c-4051-95f0-4490dde367fb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="14bf4c96-3f27-4539-b785-19d738670e67" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="481154a3-7680-47d7-8834-1d82386eb844" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTC" id="7ab6d8cd-b054-4818-b48d-c0fb71f3f740">
        <con:settings/>
        <con:config>
          <script>//Please send Cancel for ${#TestCase#switchId}
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//GetDossierLocator
def switchidLocator =  seleniumHandle.byLocator("HomePage","CancelRequestDossierID", switchId);
//Click On DossierRecord
log.info seleniumHandle.clickObject(switchidLocator);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","CancelRequestCancelNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","CancelRequestCancelNoteButton")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTC" id="35f8482d-24f4-4bbf-92f1-916467c059c1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=11 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="1846bd70-ede9-4406-b758-7f23241ac3aa" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="62ac514c-bb24-41a5-b323-12259dcf9339" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="9ca5f5eb-956d-4a8e-b375-d26f7be8ab98" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTC" id="5ab5a925-1e0c-463d-a856-1c791c997d6e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Cancelled</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e5674e64-b285-4e2d-b343-7a640c978165" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTC" id="c8dba0a0-738e-4924-88f5-8db50d11597b">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
	testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTC" id="67a403af-a490-4e77-b5ab-36ab39dcb4ab">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3e6d13cd-db91-453a-b133-3482c556c87c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="11ea6756-4d66-4e9b-8fdd-1174a9ba181b" name="Xpath: soap verson">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14f60c8-81d7-41d5-b77f-79114ea85e64" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b3bb5a3c-6664-4d19-bf4c-3acea9c8ba09" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTC" id="4173832b-2e3c-4629-9c1d-5b3f327d2cf0">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="CheckMail" id="4f324085-6300-4e5a-87e2-2073b96448a1" disabled="true">
        <con:description>Check for ${#TestSuite#donor}  ${#TestCase#switchId} 
if emails for CTR and CTC have arrived.</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTC 1" id="2ec06e4f-6552-4988-9ae3-ff37850a200b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="4880fe0a-4e68-405d-a3eb-797bbd832eb2" name="NotContains: no rows">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="02a2c5a8-0d80-4f36-88de-c5ad753114a5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="f3bbee65-2c4a-48f0-886d-c2a1cb09427a">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
import java.util.Random
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.days
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def guiwishdatestr = wishdate.format("yyyy-MM-dd")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdatestr)
String contractId = funcHandle.getRandomString(9, "4-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.5 CTR-CTRA ok-CTCH-CTP direct" searchProperties="true" id="64d68ab8-d8e2-4d1c-95b4-9131b5d76575" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="c6820b85-9e8c-498a-a1b6-b2b45ef7f521">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="19b00fc9-29ae-45ac-a9e0-2184cebd172f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");
def switchid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CTD_SWITCHID[1]", "switchId");
log.info("Testcase 3-15 dossierid "+ switchid)</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bd3a759-d9e5-4881-bf60-afe26ef43240" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="70d64387-3d17-4dcc-bb19-2bf870ca03e1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="898f6ddd-45b6-47d5-ba8c-ea06c797ad4c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0f27cf4e-9400-49a9-8156-982d52f78aad" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8631e55c-3202-4aa6-8df7-7e8939601060" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="bd22d3b2-f6f1-4c73-881e-0e1e8660e51a">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="3fbf5a1a-82ba-4862-970c-cac248215f32">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="55292669-7170-47d8-b025-dea1e40f7cf8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1630b40c-aa45-469c-a2c7-f76420c38f65" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="dd9c4da1-a0ab-47fb-972c-9d3ec348a654" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="160fb1ec-bb22-475f-bde0-2a9797237ccd">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 1" id="a86f2ea7-1e9d-4a58-ab95-a790aab66bff">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="d33e6e2b-8790-4e68-983a-14454ffacd04" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cadeb218-6880-4036-b9ff-119d6845cf0b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="477af6e6-00e5-467b-b666-60ca9569fdd9">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="62c3049b-8515-428a-b007-35b3384a97f4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3e5cf6ba-1450-4a0b-ac13-ba6254df54a2" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5ce8f27c-2cdd-4557-b472-221431b64f94" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3cdd08d2-6052-4fe0-96dc-4d739821eba3" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2e18e5ea-acf9-4d6a-bbd1-71f1c077944c" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="262babc5-541b-45b3-ab90-17f4d081cc9e">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="5321b669-c6c0-406e-adf3-46d6f1e68e3a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8f1a622a-bac0-4897-a2c8-77c0cb43ed83" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="7728515e-9fed-4058-b7cc-ec934c705dae" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f3f7779b-dfe4-4e27-8bd5-e8241166e271" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="43816925-35a4-456e-88a1-f215e7464e49">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="220eec1c-2f13-4bb6-9d84-3dcb4782a61c" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="57233ea3-1bb0-4554-8a6a-e56a718e53d9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="888a79b2-df05-4da0-9e76-cc16a09e6603" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="cfb40050-543c-4c66-9821-e8285bcc2732">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="48be8767-63dd-4b97-bd2e-6b148712f734" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9c3f665-02fd-417f-a931-4bae5ef4f761" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="09a176e8-456a-4c4b-b782-729d93ee60f6" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="5b69c464-eb2e-46e0-b70a-488f72ae7171" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="154ef64a-efe1-41b0-bc8a-fe9fe2b03cf2">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="05911cf0-906f-4d2e-b387-6b467560e72f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Request answer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ed038b67-62f6-4aa2-8b95-f2381a9cc282" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3d127954-12ef-4302-8988-68c72fac206b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="fa1b65c0-1c06-4852-89cb-c5f00bd87cc3">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="495bc4a0-4418-41a5-a2d9-d595a491492e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="b0f6f224-4149-48c4-8e93-5fe0362dd8c4" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d4fccf19-3ee8-4122-a391-3c06892f6893" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3c574ea0-7a28-4f5d-bdd7-a72962ca91f9" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="d6a1565f-f8bf-4a0e-9a9f-9c5036e7db3c">
        <con:settings/>
        <con:config>
          <script>//Please send CTCH for ${#TestCase#switchId}
//recipient is  ${#TestSuite#recipient}
//Send CTCH wishdate ${#TestCase#guiCh1Wd}
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","ChangeMenu");
//GetDossierLocator
def switchidLocator =  seleniumHandle.byLocator("HomePage","CancelRequestDossierID", switchId);
//Click On DossierRecord
log.info seleniumHandle.clickObject(switchidLocator);
log.info seleniumHandle.clickObject("HomePage","CTCHWishDateIconMainScreen");
def wishDate = testRunner.testCase.getPropertyValue("proposedDate")
def onlyDate = javaHandle.convertDateFormat(wishDate, "yyyy-MM-dd'T'HH:mm:ss", "d")
def monthYear = javaHandle.convertDateFormat(wishDate, "yyyy-MM-dd'T'HH:mm:ss", "MMMM yyyy")
//move calander to required month &amp; year
log.info seleniumHandle.moveCalenderToMonth("HomePage", "CTCHWishDateRightIconMainScreen", "HomePage", "CTCHWishDateCalHeaderMainScreen", monthYear)
log.info seleniumHandle.clickObject("xpath","//table[@id='wishDateDpJs']//a[text()="+onlyDate+"]", true);
//Enter change note
log.info seleniumHandle.enterData("HomePage","ChangeNoteMainScreen",switchId);
//click on Send change button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendChangeButtonMainScreen")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="eebee19d-3875-4d52-9ae5-e77a1e13862f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3fdace08-47bc-4a9c-bea3-eedf47960e5e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="ea7622e9-527a-4ed7-b3c6-b86c03b79bd2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="ad681b60-0b08-414f-bf9e-288a1e48c297" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="2710aa3d-ce0e-40ab-8687-85df10d4a90c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="3febb89b-2083-4b1b-a5da-39df96f599bf" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="2ea490fc-793f-4e08-af0d-7a0f20f7357b">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTCH1")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="36a17d9b-f9dc-468d-b356-519f28eae6d6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c700e7f-2fe8-4f40-875c-ce91c2e56070" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="4ae5e41f-654e-4147-9b8b-d37037b296a1">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH 1" id="2d6eeec1-723b-46d7-875f-d9154aefadc7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="92c5b2ef-5b3a-45cd-a52f-18a256b11942" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4eda4b2e-a5ed-45a8-9529-701acae315e7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP" id="df1df15d-2f0c-4cf0-8cc0-c4bb7f505058">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA email is received
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//Get the locator of viewDetails with current dossierID
def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
log.info seleniumHandle.clickObject(byViewDetails);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="e2bc9034-02ab-4031-af11-a8d791e7f82d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Completed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>f</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cf0db72b-5d72-4c33-8f3c-9814dac4f61c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="e6f21995-b29b-4d1b-989f-e9e07eddfac5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="e900d3d1-d077-4a27-a503-b214634440dd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e4e59874-57c1-4bc8-b724-a06bd9653bba" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="5b12b1c2-eda0-43a0-8611-7ecc163edb25" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="7cd9a057-4990-4801-9879-e3cf98f65ba2" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTP" id="11e081cc-bda5-45f8-94d8-adee843bc461">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="5596a871-db32-48fe-932c-0b9cd377a59a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7277aa2f-e8ea-44db-b706-7f978734f32d" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bb0084c-3b0b-49e2-a89a-df1a103997ed" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="da51d5ec-f8cf-4d2b-85c1-78acb9c6cf14" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTP" id="0d063ee0-ceb6-44cc-8bbc-17c71f072416">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP 1" id="304d2c42-26cd-4260-a026-17a3fb6ff942">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="95891cd3-f574-42e6-a17b-4a71fc7bf43b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="CheckMail" id="deba3e51-d6ba-475b-a256-86199857770d" disabled="true">
        <con:description>Check for ${#TestSuite#donor}  ${#TestCase#switchId} 
if emaisl for CTR, CTCH (2x) and CTP have arrived.</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="56ea592f-5844-431b-a640-353abe7dd34b">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 200.seconds
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "15-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.6 CTR-CTRA ok-CTCH- CTP buffering" searchProperties="true" id="40c1cb2d-64bb-4090-b347-fea48662d863" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="65145338-4a18-42bd-9790-2c30bf780425">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="ddb7fcd2-e2bb-43e1-b0be-f1b6ad40509b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b7b10cf0-300d-425c-8ded-dd2cb727eae1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="7b02bb2f-1248-4fe8-b51c-655b7f49625f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="60348e37-1b59-4849-ab8f-f57a02cfe3b4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="2587acba-d577-4a13-9084-181fbd288fb1" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="03b6863b-4734-4cb5-b56a-a0d5ada8849c" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="c5dbe143-4305-48d4-8f3e-401b7be495c4">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="372c832a-4aba-4391-ae52-75b315c55eb1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c5c8756-e9aa-4892-8267-8ad1bf31000b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ec56e512-26de-4288-89c0-dd70c6cafd4f" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a12447e1-4d81-4b63-b2a8-092e7fb9afc7" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="94737748-ccf4-4204-9ebb-27c2a9586454">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 1" id="f46ad161-2107-45a7-b885-86820a1eccc7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="454ac95c-2a55-4dd6-922f-dd4c2477ff41" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="68e3ff1f-7c58-45c9-9f44-9a7c36f61642" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="745e07fd-bcc4-4943-ad31-8c2f4a05c6e8">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="205477b2-ae18-46fd-b70b-4dd30edbc95d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6adb7f19-1129-474d-aff6-2983ec84b8d8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="981c2467-1bbf-4897-99b6-4397706e7a41" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="68035c82-d307-4cc5-91d0-5be3c75bf2b8" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e1e6148b-582b-4931-b476-b18361b2cec0" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="f3a9fb3b-d632-4b42-b373-7a705b0dfbd9">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="665a3cbe-0dad-45f1-be13-3314ba2d510f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="25caea45-cd2b-4695-af19-cc1e96a5a326" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5066797c-85d5-452e-8616-bf59d9408ff9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="08cab9b6-7c11-4660-a2b3-2bd8e174f011" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="edbcc9cd-7dfe-4c1d-88ce-8485f507bd00">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7f0cc596-3a89-4ba2-9a43-98ea2cc22eb0" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="01b156c1-c3f0-430d-9c96-32b27611b2b6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fecee2f4-6018-4cb9-9ba5-bc26713382b2" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="7bed66c3-2c13-4886-8704-f824f1516480">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="79147a31-d4bf-40fb-a58e-5310e4367ab8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="574bc501-120a-4908-b010-f6f094dc7005" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7a5c9e51-b06c-414b-8bed-a724bf82e4c7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="4c4a883a-801b-44bb-89b4-2f4fdf295b87" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="58dd88de-2a3b-4458-a5b0-4b241c3bab3b">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="ac44c57f-c0c1-4c68-9bbe-569837cfd60a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="23f1d523-a83e-4d11-a6f5-b17c0a2f39bd" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="798e9f12-c593-49b2-b7bd-05393eaef0fc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="9403c7f3-80c9-4342-8c85-33a084459227">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="4067788f-6e61-4698-b8d1-d9ef6cc9387a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7e970475-02b9-4c7f-a1f3-665169a6076f" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14be091-b057-4eb0-a004-040d372ea524" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f7fb5af1-2779-4a59-8941-cffbd64b24fb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="45687bdb-4c22-43ad-9519-b20f7423df2a">
        <con:settings/>
        <con:config>
          <script>//Please send CTCH for ${#TestCase#switchId}
//recipient is  ${#TestSuite#recipient}
//Send CTCH wishdate ${#TestCase#guiCh1Wd}
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","ChangeMenu");
//GetDossierLocator
def switchidLocator =  seleniumHandle.byLocator("HomePage","CancelRequestDossierID", switchId);
//Click On DossierRecord
log.info seleniumHandle.clickObject(switchidLocator);
log.info seleniumHandle.clickObject("HomePage","CTCHWishDateIconMainScreen");
def wishDate = testRunner.testCase.getPropertyValue("proposedDate")
def onlyDate = javaHandle.convertDateFormat(wishDate, "yyyy-MM-dd'T'HH:mm:ss", "d")
def monthYear = javaHandle.convertDateFormat(wishDate, "yyyy-MM-dd'T'HH:mm:ss", "MMMM yyyy")
//move calander to required month &amp; year
log.info seleniumHandle.moveCalenderToMonth("HomePage", "CTCHWishDateRightIconMainScreen", "HomePage", "CTCHWishDateCalHeaderMainScreen", monthYear)
log.info seleniumHandle.clickObject("xpath","//table[@id='wishDateDpJs']//a[text()="+onlyDate+"]", true);
//Enter change note
log.info seleniumHandle.enterData("HomePage","ChangeNoteMainScreen",switchId);
//click on Send change button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendChangeButtonMainScreen")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="71fb56c2-12fe-493d-879c-37a67e3bf9f9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e6a6376-47e8-4488-a3e3-4295890430ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="6350f793-bca3-4a1f-be52-33c701983c5e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="b1916a4a-a3c0-4040-b443-6708be1bb1be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d6418ae3-9354-424c-a3ab-654ed4a64632" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="99e8bb9d-3006-4969-9bc6-17e21b56a24f" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="821a1ce1-efd5-4f9f-a6e8-8b9b5735cb75">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTCH1")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="78cdadc9-2b54-4c43-b4ec-53199e652b1e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="727baafa-d3ca-4849-9627-f1217698c6c1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="5faafe26-0f80-426b-b2dc-c42f0820c166">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH 1" id="04e0c7c9-fe5d-4a50-a75e-6fcbda2c925f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c945630f-2975-46e8-a81e-8c5b768e8af3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="76226e45-1105-4df1-aecd-8531fcf01410" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP" id="2fed97a4-1344-4076-9632-94fca9fe394d">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA and CTCHA(2x)  emails are received
//verify for ${#TestSuite#donor} that hte CTR and CTCH (2x) emails are received.  
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//Get the locator of viewDetails with current dossierID
def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
log.info seleniumHandle.clickObject(byViewDetails);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="4f3a1872-3ce8-4be4-b6f1-2424a6a50b41">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="496451e3-821f-45dd-99e0-c700a09fe438" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="5bbeece4-009e-450d-a4c1-30c74c0be0a2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="1469bcd0-8b34-4249-aded-953adddb4f3c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="2cabc994-574c-4298-ad59-f9cdd980101f" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="cefa79cf-b4e7-4feb-b274-be4c8e49e347" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="7253cd58-898c-486a-8b28-6a82d0dfb654" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="d734fd27-5a6e-4445-899c-0772da0aa806">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cd7e1363-f59a-4d4b-aba5-2539c517c9b7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
import java.util.Random
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.days
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyyy-MM-dd")
// chcha proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "14-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.7 CTR-CTRA ok-CTCH-CTC" searchProperties="true" id="0d031f6f-10f4-47ad-aece-cde87e68fd96" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="ebee788d-028d-4e67-b07f-44d5da4d7b2b">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="24fdfa7d-f4c9-4e5b-a0a0-ae4b7f0c7d7d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="19026b41-ccca-4883-97c3-823163e38824" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="dd5d12f8-8bb7-4cb6-bf6a-a40f8d7997d7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="5cb6bed4-aa52-4dfc-bd1e-09609461ec9b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="28338534-3188-4795-a3e3-8f7c9dfa398f" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="9af697f1-8e64-41f0-b83b-ddbc43e6e292" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="23a4b25b-86a2-4ea6-89a7-40f81b68b0c5">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="6cce41ad-98cd-43c4-94a5-58d409625841">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3ccbb5f8-44c9-4b03-b8f6-53810791432b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ec149c4f-2d75-4b3b-a5fb-66d71dedab94" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6e0b600f-caf3-458e-b3ff-d4e6b3cb5a87" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="2952e4c8-3161-410e-b026-24a50a34affa">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 1" id="99dc36d3-fdd0-4dff-9eae-37c8ae295ee8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="79ddb734-e96d-44bc-897c-fb57b90350ca" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b59bf65a-290f-4cd1-acea-88560508a0ed" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="19bfd5e0-4ed7-4921-9ad9-0f50a268f0ac">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="04e3ae4b-99f4-4207-8292-5b2f1a010c83">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="86d3842b-e5b8-4f08-b99b-b02e24cf2fc4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9ca130cd-0141-4911-925b-c46958e26441" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="718d1492-f757-4043-8ab0-2ffbf41bede6" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7f701631-99c8-4eab-84e0-75d46a798fcc" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="1fec4e19-1d69-46ab-9389-434b2de16cdd">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="fa37f7bd-2c4d-4922-880e-850ff0448497">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e2858a53-2e03-4a40-b0d8-7053e232d1b1" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="3e60cf15-7e20-4bde-b967-e26879ff51af" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="4f7a8650-777a-4695-8554-b1e624225cbb" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="0771c74a-a19c-40bc-adcc-f42f193cb487">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="917d7c50-c8b6-4d99-b6bc-1e5cc45d366c" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="07a2ab5d-7549-4f5e-beb7-5eb138132c75">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="56d4b1e0-5f6c-4284-8d93-a944881fab9d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="f55001f7-b71c-4208-b4c8-a3db23ffc8ff">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="150530f7-1461-41ac-a6ba-d3784260b12e" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a3708109-8254-4704-a509-a126754e4bca" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8ff409b9-2cdf-406e-990a-8a8713e7598b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a589c79a-f450-415f-89e0-7acf31b48430" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="23e29945-f6a0-4263-ae5f-e6673ee0e2a5">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="c6712910-5548-4658-9e5d-2e18ca678a5b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8ee3c61a-edc3-4f5d-a6e5-52a1f94a3d46" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="09b22ae1-8f88-48ec-acbd-a7d490b3aff0" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="db93243e-f0be-4931-ac40-43fccb276fd8">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="4e87a54d-82f0-4f1b-9423-1d02513b3de2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="14bf4c96-3f27-4539-b785-19d738670e67" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="481154a3-7680-47d7-8834-1d82386eb844" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="e553abee-7ecb-4ac9-b2cf-c3778fe8efb3">
        <con:settings/>
        <con:config>
          <script>//Please send CTCH for ${#TestCase#switchId}
//recipient is  ${#TestSuite#recipient}
//Send CTCH wishdate ${#TestCase#guiCh1Wd}
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","ChangeMenu");
//GetDossierLocator
def switchidLocator =  seleniumHandle.byLocator("HomePage","CancelRequestDossierID", switchId);
//Click On DossierRecord
log.info seleniumHandle.clickObject(switchidLocator);
log.info seleniumHandle.clickObject("HomePage","CTCHWishDateIconMainScreen");
def wishDate = testRunner.testCase.getPropertyValue("proposedDate")
def onlyDate = javaHandle.convertDateFormat(wishDate, "yyyy-MM-dd'T'HH:mm:ss", "d")
def monthYear = javaHandle.convertDateFormat(wishDate, "yyyy-MM-dd'T'HH:mm:ss", "MMMM yyyy")
//move calander to required month &amp; year
log.info seleniumHandle.moveCalenderToMonth("HomePage", "CTCHWishDateRightIconMainScreen", "HomePage", "CTCHWishDateCalHeaderMainScreen", monthYear)
log.info seleniumHandle.clickObject("xpath","//table[@id='wishDateDpJs']//a[text()="+onlyDate+"]", true);
//Enter change note
log.info seleniumHandle.enterData("HomePage","ChangeNoteMainScreen",switchId);
//click on Send change button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendChangeButtonMainScreen")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="c1d6c7d4-5c94-473e-855f-55a1d733568b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3fdace08-47bc-4a9c-bea3-eedf47960e5e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="2054f3e2-b48c-4066-9d09-6bd7252cf9d1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="ad681b60-0b08-414f-bf9e-288a1e48c297" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c8a01ef4-74ad-43ab-8874-f6709f9c5f27" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="43035cc8-f0ee-49b8-9c9f-32247d8909ca" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="9ab6a56d-9559-412f-8f32-bbdae8ad0652">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTCH1")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="383d0b31-37ae-42cf-bcda-9c4ff8116bf7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c700e7f-2fe8-4f40-875c-ce91c2e56070" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="8a69193c-3e72-4a7b-a2f0-07ebf4ae9809">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH 1" id="79b1030e-4222-4c24-b818-3e62e611e604">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="92c5b2ef-5b3a-45cd-a52f-18a256b11942" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4eda4b2e-a5ed-45a8-9529-701acae315e7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTC" id="586d1207-8820-44a6-9be8-48f0ef10076d">
        <con:settings/>
        <con:config>
          <script>//Please send Cancel for ${#TestCase#switchId}
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//GetDossierLocator
def switchidLocator =  seleniumHandle.byLocator("HomePage","CancelRequestDossierID", switchId);
//Click On DossierRecord
log.info seleniumHandle.clickObject(switchidLocator);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","CancelRequestCancelNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","CancelRequestCancelNoteButton")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTC" id="c3ffa85b-8d0e-4d86-adbd-51465cc244e4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=11 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="1846bd70-ede9-4406-b758-7f23241ac3aa" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ae40d5c3-d779-4e70-b804-2d242679b073" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e1b1666d-7038-4f71-9665-caaa7f5acb1f" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTC" id="2d9585d1-7875-4f24-bc5c-79ec607c4468">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Cancelled</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e5674e64-b285-4e2d-b343-7a640c978165" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTC" id="549afa78-d425-4cd7-b691-0a1cd9187f99">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
	testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTC" id="cad449b1-4922-4cca-b4e8-d550cbf09047">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3e6d13cd-db91-453a-b133-3482c556c87c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="11ea6756-4d66-4e9b-8fdd-1174a9ba181b" name="Xpath: soap verson">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14f60c8-81d7-41d5-b77f-79114ea85e64" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b3bb5a3c-6664-4d19-bf4c-3acea9c8ba09" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTC" id="581cd3d8-f1fb-49d5-a11e-65a077e07213">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTC 1" id="adf9bb22-5c49-4802-85aa-7165f9a489ef">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="4880fe0a-4e68-405d-a3eb-797bbd832eb2" name="NotContains: no rows">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="02a2c5a8-0d80-4f36-88de-c5ad753114a5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="CheckMail" id="af714e6e-1589-426b-a98b-4ce6be3e7c42" disabled="true">
        <con:description>Check for ${#TestSuite#donor}  ${#TestCase#switchId} 
if emails for CTR and CTC have arrived.</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="b67c11a6-ee2b-4c2a-b754-26759bfe508d">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 200.seconds
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "15-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.8 CTR-CTRA ok-CTCH-CTCHA OK-CTP Direct" searchProperties="true" id="0b4ea183-8c1b-4eec-996b-600ddbedc715" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="0113d19c-2362-4468-901b-2bea51178f9e">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="c1e87f24-e931-423a-b969-562aff4a0217">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="bc7d5e6d-e2ce-4678-961a-4bed06c24de5" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="faeb58d6-46c3-4a80-9be5-e34cc9022c9e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="e16c88de-a3d8-4bbf-9708-469b40ddcde5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a4035b62-bf47-493a-8050-eedd6fcc2622" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="2772b3da-3d1f-41d8-9056-14705ed5affd" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="6b77a8d1-de28-4109-b92b-cd1120eacd55">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-Check no Send Status in ST table")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="e35e1975-b0c2-436e-815f-851ffb123bb3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="58dd4262-1e01-4085-8f11-e8800c5d88be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0e28d734-e392-4f26-9c0f-eb6f0b7d6abf" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9d984b35-fec5-4420-985a-d949389686fb" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="9ab5ecb4-3f64-43f2-ba0d-18bd9d106b0e">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_NoSend" id="8e2dba7f-7356-4fd4-aff9-6ca54e0bcf5c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and st_message like '%${#TestCase#switchId}%'</con:query>
          <con:assertion type="JDBC Status" id="cc45d6ef-2316-4378-b582-f321b46f2cc1" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="9dc2a7bb-7c16-4bd1-980b-734fceb80acc" name="NotContains: Not Contains" disabled="true">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="e02c99f6-ec63-431a-ac5e-9d593f2d02b1">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="4d8a7924-2af8-4ebb-8cb0-7d4ec8cbf195">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f768c42d-88e9-41c9-a0b2-8d05cd171719" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9155beb2-508d-4306-8bfd-4e9e85cdafb7" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ad16e040-b3cc-42da-b28e-88ef0a648479" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b12f671e-b338-4683-b415-be81a185763f" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="b65d776f-4eeb-4cd1-aa2d-15e8ffc81128">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="2426c4d9-d279-4baf-9d20-c5238f5a8b40">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9569e434-49ab-4e45-a050-80ba0e196e2b" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="cdb4ab0d-32f0-4676-9d1f-90b5597e6307" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="4b737308-1901-4be8-9a95-2edcfc046efe" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="91635b38-fd9a-4997-8aab-d33fd6602039">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0698abb2-b5fd-487f-b97c-78ded47ab78d" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="4b03cb25-e6b5-4f23-bc29-03d10a0677b9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e40439fd-a28d-447c-b44d-3fb2c6ef4dea" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="72c40e47-c294-49b1-b4a5-f62d5e17d999">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="aee83c84-1f40-4d13-a66d-1b6209582295" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d53ba6f3-831f-4961-a4f2-a1f4e5790824" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f2d364a1-5fa2-41a5-9c49-74783621ccd9" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="cf3a71fd-3636-44ad-8605-8eef73d88ec0" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="af8f2dff-6df2-4f95-be6b-f08ced37afad">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 1" id="e31b087e-2afb-4ad0-91a5-33a982f5dbe9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9" disabled="true">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match" disabled="true">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="81ff77ff-f8eb-43aa-b40d-42cb951150d9" name="Xpath: soapversion" disabled="true">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e149e04-50b1-46af-b467-8b543fca4616" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="30a6206b-de24-4010-b976-12e26cae0a1e">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="e458bf1b-b806-4f76-98df-696b0b5f9afa">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="b6d5ae98-57ce-4e00-9ffd-14dd43eb4e5f" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="043760f7-0e54-48ca-ac4e-540aefdf7d3b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9e6eb0ac-6236-43c5-95f1-c9a11a24dd0d" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="89da69f0-a50b-4d21-85c0-d327c88c0f6c">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="85422681-0d65-40bc-a296-cffd754cc1e3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3fdace08-47bc-4a9c-bea3-eedf47960e5e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="6ecd3214-2f9a-44ba-9024-fb81dad90a4b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="ad681b60-0b08-414f-bf9e-288a1e48c297" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8d0e6742-875f-46e4-b554-741cb59d0796" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="5bbae622-c418-4196-af3a-15c6dcfc43c5" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="2c13a98d-b74b-402c-a53c-da9f5b0879e3">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTCH1")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH" id="1d38ba79-7885-4b5e-9cac-7f107e8fa526">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c700e7f-2fe8-4f40-875c-ce91c2e56070" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="c7eab3b7-3da6-4feb-9e1b-65efdf2a07ca">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH 1" id="9b874fc7-7e4d-4beb-9f71-b47a24373ef6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="92c5b2ef-5b3a-45cd-a52f-18a256b11942" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4eda4b2e-a5ed-45a8-9529-701acae315e7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA" id="0d359077-25df-4efb-ac5e-8d49f510a07e">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="4d71cf71-81e4-448e-a263-9bcb572458df">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f6c05a55-b26f-4bd9-b303-56461538a8a2" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="74a35f65-5182-4f24-98a9-1e5e0391bbd2" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b2830046-1c9f-48e7-8767-c86370a584e3" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b6f9264b-b68d-4956-a328-72471efe5330" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="8709d4ea-b6b0-4a34-a6a9-5589eac2c204">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="be0cdb8c-5bcc-493e-b3c2-46c4c8ad9375">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d0e1985e-6e3e-45cb-b8b0-b45a21f9a2bd" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="fad17aaa-1f6a-4473-b040-bdb4a0c1356f" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c6d4a900-80bd-4eae-ba54-ff05be31d73c" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="3b35d1a1-edd2-48f6-91e9-0d7f39a890f2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="64a67ad5-82d2-4b22-9a8d-02b9ead1c738" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2fb6578c-865a-470f-aeea-249ec110fc48" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="0b9e0d98-c40d-4649-8786-3061a63b4e97">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d39811c4-2232-47ee-ba08-6ba3ca210866" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="af8a9c23-57b9-4f46-a2f0-69bcd2ab4af3" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="a4737461-d22e-42fa-9423-1dd270252a9e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="bd859157-dcc5-4ef6-9e3c-d9b4efb1f01c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7a0a25ac-22bc-4ade-88cf-3ad103b2398d" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d3950a88-2e1b-4a4f-a0da-62c1a5c4c324" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="42e9660c-8a18-4ada-8d2b-93f297bff575" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP" id="66eb08b7-d62d-4175-ab66-972bfa83e24c">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA email is received
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//Get the locator of viewDetails with current dossierID
def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
log.info seleniumHandle.clickObject(byViewDetails);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="b208b085-8ee7-417f-afd4-b2a3940bfc87">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Completed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>f</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5d1906d9-833e-4c0e-a60e-6f721ded678c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="56855021-e6b3-4880-bb44-935b70e01aa8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="9522087d-47b9-4f57-a36e-06f3b8b0df6e" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b24c1feb-ec92-4aee-9de4-b47e6a8845da" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="b7fba9ca-43ab-4ba6-b4c2-245603ba7171" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="4dcb12a3-87d3-41ad-bb32-0f39a0536d0b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="836d44cf-beaa-49c2-8a5e-5cf16be2ea85" name="NotContains: Not Contains" disabled="true">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ad98d404-ebdd-4338-b29a-fe44c6ecf63d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="696ffc21-ade8-4452-b52b-b09a6c4243f6" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="0e7fd775-036e-47f0-8a46-d0df3e1805de">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 200.seconds
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "15-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.9 CTR-CTRA ok-CTCH-CTCHA ok - CTP buffering" searchProperties="true" id="4a5ad8fd-210e-4c0c-9b22-492d7faa80d6" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="7402f3f5-b616-466f-a776-3c9f34895066">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="31e1e355-f63a-46d2-bc9b-36a6d5c5a544">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b7b10cf0-300d-425c-8ded-dd2cb727eae1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="e284ff54-d73b-42b2-b04c-c0c167ee6007">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="60348e37-1b59-4849-ab8f-f57a02cfe3b4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1ddbebef-b947-472d-8443-9ac362f81cea" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="4d224414-00c3-451b-aac0-86f68fc78888" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="fd69e299-8fea-4a54-a8c6-bd463924969e">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="c7e65512-c69c-4d77-92c0-2ae829d45604">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c5c8756-e9aa-4892-8267-8ad1bf31000b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ec56e512-26de-4288-89c0-dd70c6cafd4f" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a12447e1-4d81-4b63-b2a8-092e7fb9afc7" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="0bd483f3-dc4a-46c5-8e28-15dc5f3b4099">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 1" id="fd800468-d961-41ef-b64b-844a6a532513">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="454ac95c-2a55-4dd6-922f-dd4c2477ff41" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="68e3ff1f-7c58-45c9-9f44-9a7c36f61642" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="80bd2ff6-2153-40b5-8c14-fed816f1e3d9">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="40baf328-fadc-4ec4-a3cc-f64f4baf19ae">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6adb7f19-1129-474d-aff6-2983ec84b8d8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="981c2467-1bbf-4897-99b6-4397706e7a41" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="68035c82-d307-4cc5-91d0-5be3c75bf2b8" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e1e6148b-582b-4931-b476-b18361b2cec0" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="958cda28-ce56-4a79-a9be-9346d5ea2d89">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="841bf7f8-1f7b-4a8c-bb3a-94f70d8d8304">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="25caea45-cd2b-4695-af19-cc1e96a5a326" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5066797c-85d5-452e-8616-bf59d9408ff9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="1b13c64f-9890-4d3a-bb22-6a2181f37275" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="b34e9510-e1b7-4be2-a723-4bc028973130">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7f0cc596-3a89-4ba2-9a43-98ea2cc22eb0" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="257a03b5-8ba2-41ce-a053-ac315f8ef1c5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fecee2f4-6018-4cb9-9ba5-bc26713382b2" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="287ae4e2-f3eb-416c-aaab-3f7e866ac58a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="79147a31-d4bf-40fb-a58e-5310e4367ab8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="574bc501-120a-4908-b010-f6f094dc7005" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="20c16b54-a94b-400d-8744-51d40c1c6d1a" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="97782226-2718-41bd-bc69-45eb12f43446" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="386b4d78-1f12-49eb-999e-fc847bd92731">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="345c8d54-3f0f-447f-8ca2-5af03cc4be00">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="23f1d523-a83e-4d11-a6f5-b17c0a2f39bd" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="798e9f12-c593-49b2-b7bd-05393eaef0fc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="7e92cff6-0f17-4ebf-ab0d-8ce065b96b6a">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="0bdc1b9c-bee2-4068-a0f7-642e530cd0a0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7e970475-02b9-4c7f-a1f3-665169a6076f" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14be091-b057-4eb0-a004-040d372ea524" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f7fb5af1-2779-4a59-8941-cffbd64b24fb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="def6ca78-fe7c-4d6c-860f-9b97884d291e">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="726d7154-ba50-4476-88f3-1165e8d6bedb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e6a6376-47e8-4488-a3e3-4295890430ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="0a9b5695-2ca9-409c-a672-cf640284655e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="b1916a4a-a3c0-4040-b443-6708be1bb1be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="033ac466-4ed7-4863-b79f-7526f9547964" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="32cd04b4-72c1-4c6e-9698-55c341c7edec" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="668287ef-69e7-4676-a6fb-fc397af3394d">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH1")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 3" id="ba88dbe0-b49a-4c3b-b0c0-4455dcb6e7d4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="727baafa-d3ca-4849-9627-f1217698c6c1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="0dea60f8-da53-4610-94a7-11da378cfb28">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName("CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 4" id="6245cb27-e5d0-476e-ab75-2970070b9c85">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c945630f-2975-46e8-a81e-8c5b768e8af3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="76226e45-1105-4df1-aecd-8531fcf01410" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA" id="a2feb54d-3ac5-4a2f-bc48-fdc4ad05c186">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="58733819-123f-4552-84b5-7ec7d9dba8a4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f6c05a55-b26f-4bd9-b303-56461538a8a2" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="74a35f65-5182-4f24-98a9-1e5e0391bbd2" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b2830046-1c9f-48e7-8767-c86370a584e3" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b6f9264b-b68d-4956-a328-72471efe5330" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="d5fd449b-ff9a-48d3-8eb4-d8dec07e8f1e">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="7092a7a4-e05a-47e1-a4be-790b162ab1fb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d0e1985e-6e3e-45cb-b8b0-b45a21f9a2bd" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="fad17aaa-1f6a-4473-b040-bdb4a0c1356f" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="ce90fd53-2783-4de1-96c8-6f713a4898ce" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="477d4162-a1c7-4ac3-b2c2-1b22aee360b1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="bd859157-dcc5-4ef6-9e3c-d9b4efb1f01c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3bfa1660-fe50-402f-a10c-6d5b008036a2" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="9a4a4652-16f8-43c2-a648-f60b990770d7" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP" id="1c9f54d8-c135-4c50-958d-1364dbcaf40c">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA and CTCHA(2x)  emails are received
//verify for ${#TestSuite#donor} that hte CTR and CTCH (2x) emails are received.  
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//Get the locator of viewDetails with current dossierID
def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
log.info seleniumHandle.clickObject(byViewDetails);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="d3873139-0134-4d2f-b469-12d5f32a9cfb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="496451e3-821f-45dd-99e0-c700a09fe438" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="48123d98-0b94-40bf-a29e-65a7d9598e1e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="1469bcd0-8b34-4249-aded-953adddb4f3c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="393ad4d9-5c51-48d4-8a9e-752482727737" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="92f245af-b10a-4cc1-b271-0578175f2e23" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="4a0f6f57-e4c7-4eee-8801-c9ab96e5a784">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cd7e1363-f59a-4d4b-aba5-2539c517c9b7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
import java.util.Random
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.days
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "14-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.10 CTR-CTRA ok-CTCH-CTCHA ok-CTC" searchProperties="true" id="958407ee-cced-465f-87fc-2907867d6043" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="c2cd828e-2ee6-4428-98e1-4220e50c4ed2">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="087b8b2a-1100-4380-b73c-2dc33365fbf5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="19026b41-ccca-4883-97c3-823163e38824" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="6d233258-3c7b-4af9-a5c4-037fec6ece49">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="5cb6bed4-aa52-4dfc-bd1e-09609461ec9b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="76d0e1de-3219-4be6-8f83-b26f751c5f31" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="548eb697-989f-4ba9-80e5-47db91d2614c" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="5295a574-9924-4e42-af11-f9c6bf1f57ca">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="cdc9f2bf-16c7-430a-bc8a-68916166088f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3ccbb5f8-44c9-4b03-b8f6-53810791432b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ec149c4f-2d75-4b3b-a5fb-66d71dedab94" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6e0b600f-caf3-458e-b3ff-d4e6b3cb5a87" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="3afa2ccc-01da-4536-9af8-2f2ef942722a">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 1" id="20f20e24-3fcd-44b7-b385-35902da91dc6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="79ddb734-e96d-44bc-897c-fb57b90350ca" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b59bf65a-290f-4cd1-acea-88560508a0ed" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="5fb86d0d-2130-4e0d-b547-22d075fdd991">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-01</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="25c2ed49-e6f3-49a8-8c1e-635ababda0db">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="86d3842b-e5b8-4f08-b99b-b02e24cf2fc4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9ca130cd-0141-4911-925b-c46958e26441" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="718d1492-f757-4043-8ab0-2ffbf41bede6" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7f701631-99c8-4eab-84e0-75d46a798fcc" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="9c88170b-b7a4-47ad-be17-d27d4fd2d8fe">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="017fdaa2-e3f8-4f22-b443-53570a25a386">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e2858a53-2e03-4a40-b0d8-7053e232d1b1" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="3e60cf15-7e20-4bde-b967-e26879ff51af" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c36578fd-9f17-4069-b1f1-bd14fa513c58" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="0c289743-99f3-48dc-92c2-0d68cc15759a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="917d7c50-c8b6-4d99-b6bc-1e5cc45d366c" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="dd8c8bd8-c7fb-4a21-b59a-03f7e8e5595f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="56d4b1e0-5f6c-4284-8d93-a944881fab9d" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="37415c83-92e9-4120-8e8c-9a3df3c52998">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="150530f7-1461-41ac-a6ba-d3784260b12e" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="a3708109-8254-4704-a509-a126754e4bca" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4ef82ba8-98e7-4010-a967-623d025cf810" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="96ad2a62-b719-46b6-82ad-7784edd7e955" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="1c04caa3-53d3-449b-87f0-73162f02c759">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="3914931f-7923-403c-a213-c1de8d978f26">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8ee3c61a-edc3-4f5d-a6e5-52a1f94a3d46" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="09b22ae1-8f88-48ec-acbd-a7d490b3aff0" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="f146d5a1-7c59-4374-bd34-6ef22db8ca9a">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="fd218be3-22e3-4578-a823-1b347de3db10">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="JDBC Status" id="14bf4c96-3f27-4539-b785-19d738670e67" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="481154a3-7680-47d7-8834-1d82386eb844" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="141fcfcb-835b-4e65-820d-3f0f381e405e">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 3.5" id="e32a0d44-1062-420b-bed1-bf2fe2bf82fb">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="97cd85ec-a639-4198-b777-f616d106f516">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3fdace08-47bc-4a9c-bea3-eedf47960e5e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="b1ecbd6f-e360-402b-8cec-6069d2351d83">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="ad681b60-0b08-414f-bf9e-288a1e48c297" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="84b4c2dc-7113-4ec1-b441-f7e4e2d94bc8" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="3994489e-42c3-49fa-8da7-da4573aadccb" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="08f86c92-c5de-49ac-8ff4-0c2ecb3c4b6f">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH1")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 3" id="79827afa-7f0c-4a11-b471-3539860523f6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c700e7f-2fe8-4f40-875c-ce91c2e56070" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="63bd78bc-0f01-4252-be04-ae7402caa00a">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 4" id="2ea6947f-5e2e-4fe1-8285-2a14d4b3b2d9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="92c5b2ef-5b3a-45cd-a52f-18a256b11942" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4eda4b2e-a5ed-45a8-9529-701acae315e7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="aab7d5f7-b394-4c73-ac14-11e1fed193b3">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA-ok" id="352388d2-d27c-4f9a-8a88-c03670af34e7">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="9e0153f5-8b40-4b49-9e75-e88e9252d46a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6ee43c8a-8179-4b8b-99de-a54cad403eea" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ef4fbbec-1996-4949-9882-fda763dcf75b" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="86353aff-c597-49d4-97aa-7f4e6c726ceb" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4d795ad0-f3d1-461c-940d-6fb3388e3857" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 5" id="e15882e9-4e0b-4dd0-8c84-fa189bfc0c2d">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="723c3aec-4e3a-4f47-8229-5b5ab72623a4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3d01c165-e789-4b28-b4ba-3f174e134d4e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="cab7d794-090a-4ffe-b5a2-87a907b3d1e9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="c3187f36-a87e-4d67-b276-21ac6f07ff04" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e9f9ae01-979f-45c3-bdaf-c7474bc9e5da" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f96b5173-25d3-4567-b17a-1306d3ce24b9" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA" id="48a28e3c-4586-4ca4-bc2e-1719cfd7330d">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 5" id="0ea1bacc-5e05-4ce9-8b94-2ff4299023d0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>N&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: wishdatetime">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no proposedatetime">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ccfc2241-1cdb-4dff-bb24-778613b0f6b6" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b5ee25f5-203e-4bb4-ae9f-1868afb6b0c9" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA" id="9e7693cd-0a48-4ca2-b06e-741576a01e38">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA" id="3d50e2a2-546f-4409-b1d2-7340dc1bf66d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="c2706c6f-8d75-4352-8ef1-2ab778814a86" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6384b2e5-d4b6-456b-b24c-48276ee22caa" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="52bc65c0-4c74-4be2-9ede-a621fecefa81" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTC" id="1779d336-317d-423b-b76b-527e8fa5a764">
        <con:settings/>
        <con:config>
          <script>//Please send Cancel for ${#TestCase#switchId}
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//GetDossierLocator
def switchidLocator =  seleniumHandle.byLocator("HomePage","CancelRequestDossierID", switchId);
//Click On DossierRecord
log.info seleniumHandle.clickObject(switchidLocator);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","CancelRequestCancelNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","CancelRequestCancelNoteButton")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 6" id="04c2c337-c6a4-435e-89d7-2f043cea6cb8">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTC" id="e44f8981-32ba-4da2-858d-e8d6773ca58b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=11 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="1846bd70-ede9-4406-b758-7f23241ac3aa" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="919accb3-19d5-4041-8be7-18b35421a74b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="2bbf75df-e6d1-4386-a370-a564dbd28ffb" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTC" id="3f078f69-6211-41e4-a203-e6b41cca4bb0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Cancelled</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e5674e64-b285-4e2d-b343-7a640c978165" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTC" id="18f6c29e-87a1-486a-a70b-d97072c1f617">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
	testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTC" id="20558bcc-74c4-4ca6-91f9-207c9fde5516">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3e6d13cd-db91-453a-b133-3482c556c87c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="11ea6756-4d66-4e9b-8fdd-1174a9ba181b" name="Xpath: soap verson">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14f60c8-81d7-41d5-b77f-79114ea85e64" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b3bb5a3c-6664-4d19-bf4c-3acea9c8ba09" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTC 1" id="c8759666-ef76-41ca-b5a2-417b9faef3ca" disabled="true">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="4880fe0a-4e68-405d-a3eb-797bbd832eb2" name="NotContains: no rows">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="02a2c5a8-0d80-4f36-88de-c5ad753114a5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "15-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.11 CTR-CTRA ok-CTCH-CTCHA blocking-CTP direct" searchProperties="true" id="4851da7d-408d-4783-92b4-ef8764f948d6" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="aa4e1dcd-2a84-4fb9-b802-95f44430becd">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="e77fa77f-6620-4654-87f6-05919ff33d53">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b7b10cf0-300d-425c-8ded-dd2cb727eae1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="817f47b3-37a8-46d8-8b85-5620bb8c8396">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="60348e37-1b59-4849-ab8f-f57a02cfe3b4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4c7bf302-fd52-4d7e-8e01-35d32d18bb6f" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c751236a-4a04-497c-8575-8f08d0f4f2aa" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="9e0cfd60-a6b3-45b5-8c84-b269e49baa14">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="5651d4f8-3d9c-445e-b9b0-1429754a399f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c5c8756-e9aa-4892-8267-8ad1bf31000b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ec56e512-26de-4288-89c0-dd70c6cafd4f" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a12447e1-4d81-4b63-b2a8-092e7fb9afc7" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="ecacb6e6-c73c-45bb-9599-e5422c477340">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 1" id="956cd70a-f7e3-4a94-8092-04042a3edb28">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="454ac95c-2a55-4dd6-922f-dd4c2477ff41" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="68e3ff1f-7c58-45c9-9f44-9a7c36f61642" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="7945fdd6-f368-4fb8-99e1-f72574f37fd2">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="f7e5d8f9-a10c-48e3-b2b4-9ac2e6ba11de">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6adb7f19-1129-474d-aff6-2983ec84b8d8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="981c2467-1bbf-4897-99b6-4397706e7a41" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="68035c82-d307-4cc5-91d0-5be3c75bf2b8" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e1e6148b-582b-4931-b476-b18361b2cec0" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="08f65b03-5f51-4292-b216-f1d24c0cace3">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="ad0a1fae-8b5d-41fe-b6f9-5b161580fa9a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="25caea45-cd2b-4695-af19-cc1e96a5a326" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5066797c-85d5-452e-8616-bf59d9408ff9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="74efcc61-1c5c-4dc0-b6e8-fc1269175f70" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="f713f7d5-b2b2-4865-b92e-f30999520958">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7f0cc596-3a89-4ba2-9a43-98ea2cc22eb0" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="9a0e563f-9886-4a4b-a39f-e40d44aee4be">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fecee2f4-6018-4cb9-9ba5-bc26713382b2" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="598202cd-ff6d-4f7b-b2e4-b098bb4c8d19">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="79147a31-d4bf-40fb-a58e-5310e4367ab8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="574bc501-120a-4908-b010-f6f094dc7005" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fd8a9eec-cb62-4f98-8d28-2599045ad154" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0126a1df-55fb-409f-bc71-e8aeecacb886" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="150c5556-b547-4f14-805c-4e86a894f247">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="dcdb97c4-cd85-4a30-81be-fcd15e390e08">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="23f1d523-a83e-4d11-a6f5-b17c0a2f39bd" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="798e9f12-c593-49b2-b7bd-05393eaef0fc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="2626abd4-b1ab-4c35-b045-b6408e065a7e">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="5d2d7a00-b7a8-45ae-9fb1-afc30f33e039">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7e970475-02b9-4c7f-a1f3-665169a6076f" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14be091-b057-4eb0-a004-040d372ea524" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f7fb5af1-2779-4a59-8941-cffbd64b24fb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="1a64c77d-a132-4354-aa11-e1088b488c57">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="e1f783a3-0582-4de4-ba96-36e73de12099">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e6a6376-47e8-4488-a3e3-4295890430ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="a8287b8c-5dc0-421a-b444-1d8465a8f5db">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="b1916a4a-a3c0-4040-b443-6708be1bb1be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="61d4ea0c-b36f-484c-a222-ce8b81c14a1c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="773fb912-9032-44c5-9692-d57cc85f92d4" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="f46f2b48-d958-447f-b202-4d1b5cc4aab3">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTCH1")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 3" id="62f1b007-8fdc-4e8e-a5ce-467a298368bf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="727baafa-d3ca-4849-9627-f1217698c6c1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="908a75f3-3718-418d-89bf-64d7d987afa0">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 4" id="a76d1801-7991-42c3-949f-271f726f2f1a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c945630f-2975-46e8-a81e-8c5b768e8af3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="76226e45-1105-4df1-aecd-8531fcf01410" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA-blocking" id="f4379db4-2252-4c35-95d7-d2d16b00c73a">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-004</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>Y</blocking>
<proposeddatetime>${#TestCase#wishDate}</proposeddatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} blocking, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="bec84f41-567e-4950-aa92-ccd9f074f601">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c051cf6d-afc2-4039-8e66-648d8eae1e2b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9ce08446-0831-48a3-abf3-cfe93b64ac2f" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f442ad9c-8a22-4ed2-a38b-3d63b12e0235" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d3219ad6-9af7-47eb-a24d-452f21db3519" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="db1dfe35-0bf6-468a-b05e-842950766220">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA 1" id="09018b33-af33-48ff-9d8a-2eddb0362dc7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="25caea45-cd2b-4695-af19-cc1e96a5a326" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5066797c-85d5-452e-8616-bf59d9408ff9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="99a6c15d-5641-4000-9dbd-f113f2eac55e" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="2ed4fd62-915c-43f7-bb29-d7284b0eb8be">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="173b2343-5c06-4cfa-ada1-b0f7af150d8b" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA" id="6b964d2a-108b-4eb7-80dc-09ae3d507edb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiWishDate} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiWishDate} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="12e59763-3074-41e8-9fc3-0009bbab64bd" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="8a72d122-c660-40a6-968c-c6440cbc565e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="313515c5-1a9a-4730-88d9-6e36c03d36e6" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9dcc672d-4a1d-42ce-9bd8-8d4785c3f067" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8af885d0-1fc9-4a77-81fd-040e0e16ca01" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP" id="d038d0cc-aaf4-4df9-a9f0-79e37a1bdccc">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA email is received
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//Get the locator of viewDetails with current dossierID
def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
log.info seleniumHandle.clickObject(byViewDetails);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="7ded4498-e874-4327-8b0f-ed98f538cfb4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Completed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>f</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cf0db72b-5d72-4c33-8f3c-9814dac4f61c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="fd07d58c-7749-46e8-9228-4ead38116632">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="e900d3d1-d077-4a27-a503-b214634440dd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e4e59874-57c1-4bc8-b724-a06bd9653bba" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d60d9377-2495-4b6a-ab93-5d75a19f7efc" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="cf3ea55b-ec70-4ceb-bf1f-35d9cbbe9783" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTP" id="42719226-f5ca-409e-8fa2-8a429807e19e">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="32368713-4cad-414f-83d2-d8c9d41a636c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7277aa2f-e8ea-44db-b706-7f978734f32d" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bb0084c-3b0b-49e2-a89a-df1a103997ed" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="da51d5ec-f8cf-4d2b-85c1-78acb9c6cf14" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTP" id="e148661c-8fa5-44e1-9d98-3825531c89f6">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP 1" id="bc99c302-8e5e-48f0-87a1-2183e1c591ed">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="95891cd3-f574-42e6-a17b-4a71fc7bf43b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="d4c9ddf3-ad14-453a-a92f-0e87f0321546">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 200.seconds
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "15-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.12 CTR-CTRA ok-CTCH-CTCHA blocking-CTP buffering" searchProperties="true" id="a239903d-63f1-4e32-b809-571dadb1305a" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="a2d8512c-5e81-4a93-aeda-e52ccccb24af">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="453d1e39-1670-43f4-a985-98076c6e847c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e4415146-698e-4844-be0a-cf0f5018f1ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="bad0ef1e-51a9-447d-8b3d-131ca4fbe811">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="f116fa6a-8895-4986-b1aa-446d9e201909" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="aca0adf0-394d-419d-b52e-ee7534d0fe5d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9b01afcb-d8d9-47ca-b408-3ab3d4a20da0" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f23f0399-fe65-4920-a3d8-dca25730d2c7" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="5fe60475-5a09-43fa-b967-111b9b9af7a9">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "Wait For send Poller")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="ba9b2039-921a-4e54-8a8c-b0e79066be8a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac0e5b22-e677-48b9-afc6-8f2331fc9f07" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="bc6cefa8-7aa6-4de5-afef-8bcdc506f545" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e38526ad-5bf0-4755-8b82-90ec10384a13" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="aa03f489-c91f-4bb4-8933-cc04ca4043ca">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For send Poller" id="99959570-c243-48f2-b7eb-aef8854cc133">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 1" id="12088bb1-7d65-4b2c-abe1-08ce19fe66f0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="454ac95c-2a55-4dd6-922f-dd4c2477ff41" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="68e3ff1f-7c58-45c9-9f44-9a7c36f61642" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA ok" id="ef648603-1fce-4790-b373-1f7d7161a542">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer blocking ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="75d78ed0-8829-4cc6-a419-c4924bda5604">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0dee71a3-a935-4b06-b972-c813e5f4ada7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="87a46e1b-6abd-40e9-93d7-879cd5d80622" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fe92eb90-8575-4ba4-8bb8-62355e7b99e1" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="62a39dc6-77ee-41a5-89bb-452f2cf60f3b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="1f6b6094-0ccd-4b65-b914-5ad8a5bdb78b">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="4f94ec88-b5f4-48e2-a485-b41a27ed2e70">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4d48a085-3f43-46c6-8810-e8e94ec93ff3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b58743e7-0a55-4986-8e86-afa8533ab867" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0d073439-f05c-4be6-aba5-87a644cc615e" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="ccf06497-10e8-4d1f-87a0-735cfffecb2a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="de7dd802-8f79-48c8-911b-6b11ee6d662f" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="f411cf5c-f486-44c4-8c2c-e58b41718815">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be12c6b7-e826-4a58-b4c4-a5ec955b7f46" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="25f360c3-9b9d-41c3-b783-ac228cca9227">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="da663a2e-7feb-471a-9c29-84be65f04692" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="212ef293-cfa9-4a8b-b970-711abd7fd3ab" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a3446daf-f821-42b8-8669-c099c58b414b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="cec20c10-6be0-471c-81cd-f46d21400a2f" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="f80d3809-a97b-4dfe-af86-d282ef536a4c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="3ee213f5-fd8c-4865-95c9-f9fae0b451d4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1f3a2336-d8af-4fcc-a5e5-e834c9de3bb1" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="15efa522-b0f6-499f-9adf-dd1f09fb7588" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="4e6dd3ee-75da-4714-8a7d-7bbff51c147e">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="421a923f-6d96-4cfa-bf87-9e8a0885478f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7c2ead04-db2e-4ede-b16b-85c280699784" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7a60508b-5cbc-4994-8350-5538bcf33f7b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e3c9580b-5332-4fe1-8f7a-98def76fd3d3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="7ecffd36-c1e3-4a9e-ba0b-b758b23e3362">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="8176e4c4-9a46-4fa3-87f8-9139e561d02c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e6a6376-47e8-4488-a3e3-4295890430ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="062b3f1d-e89d-4d17-887b-e770f8dd1b77">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="b1916a4a-a3c0-4040-b443-6708be1bb1be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="74915307-1cee-47f9-8caf-134254dc495d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="46f2a3b9-052d-4626-a7f6-8952dd088512" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="bc50f8a7-8509-4919-97b4-89f896503e45" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="1617e99a-0c81-4d4d-b154-39192de27494">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH1")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 3" id="7b75acd7-8d1d-4576-9c8a-7d035852acc0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="727baafa-d3ca-4849-9627-f1217698c6c1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="27df68b2-6bfb-4e74-a1cd-027b21dc64cd">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 4" id="3f9ea829-a5f2-4db2-9822-0ba71a09fcf4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c945630f-2975-46e8-a81e-8c5b768e8af3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="76226e45-1105-4df1-aecd-8531fcf01410" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA-blocking" id="b9317dba-b1a0-45c2-a1b3-3604ae65c561">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-004</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>Y</blocking>
<proposeddatetime>${#TestCase#wishDate}</proposeddatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} blocking, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="1748eee4-d9fb-4209-9e23-11824de3b9df">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c051cf6d-afc2-4039-8e66-648d8eae1e2b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9ce08446-0831-48a3-abf3-cfe93b64ac2f" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f442ad9c-8a22-4ed2-a38b-3d63b12e0235" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d3219ad6-9af7-47eb-a24d-452f21db3519" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="981f7179-0438-4e8a-a463-8af9058879ab">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="1dfa2cb3-b9bb-4f5f-b156-ca0b588952b8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4d48a085-3f43-46c6-8810-e8e94ec93ff3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b58743e7-0a55-4986-8e86-afa8533ab867" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="9b3261da-de68-44c8-aebc-ea10b5c1afaf" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="72569f8b-a3d0-4122-b32e-53efca1aaebf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="173b2343-5c06-4cfa-ada1-b0f7af150d8b" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA" id="95172d09-c384-420c-bc47-b14c6ee0b78c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiWishDate} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiWishDate} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="12e59763-3074-41e8-9fc3-0009bbab64bd" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="4af3d48e-b1c3-4495-88cd-5e1e2535ac51">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="313515c5-1a9a-4730-88d9-6e36c03d36e6" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="20084d7d-7b02-473e-9177-49d9c15450a4" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="92c3d45e-87d8-4cff-b397-87a7599b81f7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d648dc0a-c17e-4a8b-ac8d-043f0602dffd" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA" id="c5cab5f2-d960-4967-80ac-390ffd32d7ef">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 5" id="ab58fee0-2b8b-460c-8948-4e1968ccf8a6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>Y&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: proposeddate">
            <con:configuration>
              <token>${#TestCase#wishDate}&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no wishdate">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="dff4fa17-890d-4153-b5e5-76f059c87ba4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="123f9eb9-653c-45ea-803e-38bb1265911f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA" id="5ace8fb8-9266-4e14-9f63-145a1dbd4fb9">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA" id="af3a425d-5755-4df5-a058-e10d6d4a1e55">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="79e5921c-1cc3-4b96-94e5-27becdb749c3" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="2a2c3c04-c4b6-420d-a414-d1a9e338e034" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5fca7117-65fa-493e-a6e6-e32493a04a2a" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP" id="64be0ee5-509f-451e-9961-7b4c82bd709c">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA and CTCHA(2x)  emails are received
//verify for ${#TestSuite#donor} that hte CTR and CTCH (2x) emails are received.  
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//Get the locator of viewDetails with current dossierID
def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
log.info seleniumHandle.clickObject(byViewDetails);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="b22c2aa0-35d5-49c9-9ce2-bb5fd0d3f5df">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="496451e3-821f-45dd-99e0-c700a09fe438" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="bdfe9cbd-ee33-4292-a7c1-06b8f84d131b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="1469bcd0-8b34-4249-aded-953adddb4f3c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="53b75b24-8373-4da5-a53c-eccb74fbbfff" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1afce8b-7b02-47ec-830a-e480ad8ec6e7" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="4c2a2124-dc30-470e-bdfc-1d11b55af63b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cd7e1363-f59a-4d4b-aba5-2539c517c9b7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
import java.util.Random
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.days
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "14-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.13 CTR-CTRA ok-CTCH-CTCHA blocking-CTC Direct" searchProperties="true" id="3e689588-f026-4daf-9591-fb5ac941db3e" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="3dba0d0b-1a28-4863-b7d1-df2274e5ee4f">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="c86f5ef8-fac5-46eb-86e2-7cf0fb60b4c1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e4415146-698e-4844-be0a-cf0f5018f1ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="0d7b234f-82c9-4da4-a592-e80cb2b50bfa">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="f116fa6a-8895-4986-b1aa-446d9e201909" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="aca0adf0-394d-419d-b52e-ee7534d0fe5d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2edc8121-a98d-4d25-9b84-6a6575ba7521" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0eebc70c-9d4f-40f1-bd5b-1611d5502fd2" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="9d6dff2d-59c3-4bf5-b338-9cc699d3031b">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "Wait For send Poller")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="47091fff-a8c9-46b2-8df1-48e578b6b72c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac0e5b22-e677-48b9-afc6-8f2331fc9f07" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e38526ad-5bf0-4755-8b82-90ec10384a13" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="110428aa-5e87-4984-919c-341a4873ef00">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For send Poller" id="02de24d9-7738-47a7-88ab-d2f9bc351864">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_NoSend" id="a879886b-4ba3-49e3-bb0d-796a35af7949">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and st_message like '%${#TestCase#switchId}%'</con:query>
          <con:assertion type="JDBC Status" id="cc45d6ef-2316-4378-b582-f321b46f2cc1" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="9dc2a7bb-7c16-4bd1-980b-734fceb80acc" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA ok" id="fa697f9d-d069-4ece-a230-6a3f4e971a8d">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer blocking ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="454cca6a-0a93-4377-b3b8-59a9007271af">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0dee71a3-a935-4b06-b972-c813e5f4ada7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="87a46e1b-6abd-40e9-93d7-879cd5d80622" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fe92eb90-8575-4ba4-8bb8-62355e7b99e1" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="62a39dc6-77ee-41a5-89bb-452f2cf60f3b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="f4adec4b-8580-410d-ab23-46e4d35d0165">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="cc8df352-243c-4b48-9fc5-52f8e5aebfe9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4d48a085-3f43-46c6-8810-e8e94ec93ff3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b58743e7-0a55-4986-8e86-afa8533ab867" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e2004768-9fa4-47a6-9271-cca49b2df4c2" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="8b2a3f9a-06b8-4bec-93b0-868fc0fc3717">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="de7dd802-8f79-48c8-911b-6b11ee6d662f" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="16d5550a-6494-43d9-8636-7f53a06297cc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be12c6b7-e826-4a58-b4c4-a5ec955b7f46" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="1b5e518d-8b88-4a4d-95e0-091110e5381d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="da663a2e-7feb-471a-9c29-84be65f04692" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="212ef293-cfa9-4a8b-b970-711abd7fd3ab" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7d1d96db-0418-4c94-8065-696361560bbd" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="9bfdb433-2df8-4cdf-9d74-e20c947693ab" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="459a1474-e9a9-446f-a1d8-e2ec8c59aa86">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 1" id="9b0ecf90-4cde-4d41-bd20-e74f6aa7aaef">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1f3a2336-d8af-4fcc-a5e5-e834c9de3bb1" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="15efa522-b0f6-499f-9adf-dd1f09fb7588" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="464bca69-0b8b-4b20-ba6b-7e3e91f05fa6">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="08e6ed7c-1e30-4e81-8a92-8b76a9afded3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7c2ead04-db2e-4ede-b16b-85c280699784" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7a60508b-5cbc-4994-8350-5538bcf33f7b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e3c9580b-5332-4fe1-8f7a-98def76fd3d3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="93e5740a-b944-4e71-817e-64371cf7fb37">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="2809dc4e-6a57-4b0f-8b22-802e500b80f5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e6a6376-47e8-4488-a3e3-4295890430ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="992d7cd5-99c2-454d-87c0-e61418b6a23d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="b1916a4a-a3c0-4040-b443-6708be1bb1be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="74915307-1cee-47f9-8caf-134254dc495d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="303878be-3146-4dc6-a368-6e19a21bcf01" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="2ba93611-d100-428f-8418-803e18bd0ad5" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="3c732796-d056-4861-ae91-d7ed15ff3074">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH1")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="52627f35-7d06-44db-812c-57aae8a40b39">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="727baafa-d3ca-4849-9627-f1217698c6c1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="2998db1a-6124-4994-90d8-1366e8eb7611">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 3" id="8f6ed0e6-8bb9-43b7-82b9-6ceb51c5e28e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c945630f-2975-46e8-a81e-8c5b768e8af3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="76226e45-1105-4df1-aecd-8531fcf01410" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA-blocking" id="9f16e57e-05c0-494e-893d-57725b05c949">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-004</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>Y</blocking>
<proposeddatetime>${#TestCase#wishDate}</proposeddatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} blocking, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="a66b5e07-ef91-4098-8485-02ebfd172707">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c051cf6d-afc2-4039-8e66-648d8eae1e2b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9ce08446-0831-48a3-abf3-cfe93b64ac2f" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f442ad9c-8a22-4ed2-a38b-3d63b12e0235" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d3219ad6-9af7-47eb-a24d-452f21db3519" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="e6948ea2-7823-46ec-928a-960dd86208e8">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="eae9a9da-5f7a-4e42-b1c8-03ca8b0cd908">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4d48a085-3f43-46c6-8810-e8e94ec93ff3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b58743e7-0a55-4986-8e86-afa8533ab867" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="c6e5d301-cf91-4980-8757-53239aae0337" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="69945173-5bc6-46c7-9764-cb5fa01bde93">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="173b2343-5c06-4cfa-ada1-b0f7af150d8b" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA" id="a3336cdc-b229-4abb-a3ca-169e179832e8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiWishDate} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiWishDate} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="12e59763-3074-41e8-9fc3-0009bbab64bd" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="fe582613-8946-42f5-a414-d8888c613f70">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="313515c5-1a9a-4730-88d9-6e36c03d36e6" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="20084d7d-7b02-473e-9177-49d9c15450a4" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="01dc97ef-6729-453e-92d9-22a118e38290" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="434d1264-8796-44d9-9f88-bb85d7bf559c" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA" id="c6adb2d3-a276-4cd8-9bc2-76cf735427b4">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 4" id="5e45cad1-091d-49f5-8e2e-99622c1f271a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>Y&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: proposeddate">
            <con:configuration>
              <token>${#TestCase#wishDate}&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no wishdate">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="dff4fa17-890d-4153-b5e5-76f059c87ba4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="123f9eb9-653c-45ea-803e-38bb1265911f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA" id="6a2b3bf1-93c6-4201-904a-80d8bbd5d8be">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA" id="ceeba551-addf-4ebf-a283-f20a856ab84e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="79e5921c-1cc3-4b96-94e5-27becdb749c3" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="2a2c3c04-c4b6-420d-a414-d1a9e338e034" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5fca7117-65fa-493e-a6e6-e32493a04a2a" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTC" id="dd8517d8-e968-469f-989f-03aeceeb0ad1">
        <con:settings/>
        <con:config>
          <script>//Please send Cancel for ${#TestCase#switchId}
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//GetDossierLocator
def switchidLocator =  seleniumHandle.byLocator("HomePage","CancelRequestDossierID", switchId);
//Click On DossierRecord
log.info seleniumHandle.clickObject(switchidLocator);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","CancelRequestCancelNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","CancelRequestCancelNoteButton")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTC" id="15e0e176-1430-4838-8c86-97b809452d9b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=11 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="1846bd70-ede9-4406-b758-7f23241ac3aa" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cf8ad48f-3ba2-4aa8-a7fd-542a67868dda" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6005dcba-735e-4a86-84ee-5b2d0bf3e021" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="b9d7191a-b880-4fdb-aae1-bc7a636eec01" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTC" id="8e8c96b4-1bd1-49b7-848c-48dcef46f32b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Cancelled</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e5674e64-b285-4e2d-b343-7a640c978165" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTC" id="ddeb9a8f-7be5-426c-8e10-06cb253599be">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
	testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTC" id="022c3587-6994-47ab-806d-deaf0bc808d6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3e6d13cd-db91-453a-b133-3482c556c87c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="11ea6756-4d66-4e9b-8fdd-1174a9ba181b" name="Xpath: soap verson">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14f60c8-81d7-41d5-b77f-79114ea85e64" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b3bb5a3c-6664-4d19-bf4c-3acea9c8ba09" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTC" id="eca26ab4-120b-48b8-8a16-ca9481c0bb9e">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTC 1" id="6b9d3341-4d36-4d48-96a8-70599b570ca1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="4880fe0a-4e68-405d-a3eb-797bbd832eb2" name="NotContains: no rows">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="02a2c5a8-0d80-4f36-88de-c5ad753114a5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="38174a04-efb2-4440-86d8-e38d9062d980">
        <con:settings/>
        <con:config>
          <delay>0</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 200.seconds
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "15-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.14 CTR-CTRA ok-CTCH-CTCHA blocking-CTCH-CTCHA ok - CTP buffering" searchProperties="true" id="25fed44a-c491-40dc-bf56-97dc83965c0e" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="e7d1f193-0886-43e4-88b6-c799b255d077">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="fe8c55ba-6885-4beb-8b1d-4f283c99c941">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b7b10cf0-300d-425c-8ded-dd2cb727eae1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="aaf0dab8-0ab0-4cec-bec3-8b702cfc2cc4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="60348e37-1b59-4849-ab8f-f57a02cfe3b4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="2d31cf79-1269-4413-b333-5d7e1759df56" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="ac9398c8-b742-40f1-9407-009678263f57" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="3679fc6f-8c56-4c61-a3c7-9fc6876fa0d4">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="d7b36a99-b9d2-4e78-9eb7-e5e47b7e40aa">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c5c8756-e9aa-4892-8267-8ad1bf31000b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ec56e512-26de-4288-89c0-dd70c6cafd4f" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a12447e1-4d81-4b63-b2a8-092e7fb9afc7" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="c5531ad2-3b5f-41c9-b3b1-724984105ee0">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 1" id="b7c5793c-d0bd-4dfe-99b0-b8d1eb2696b9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="454ac95c-2a55-4dd6-922f-dd4c2477ff41" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="68e3ff1f-7c58-45c9-9f44-9a7c36f61642" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="29988eeb-aeff-4a52-b860-c396852d8f0f">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="035d19c7-3a20-498d-be3c-856f025f843c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6adb7f19-1129-474d-aff6-2983ec84b8d8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="981c2467-1bbf-4897-99b6-4397706e7a41" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="68035c82-d307-4cc5-91d0-5be3c75bf2b8" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e1e6148b-582b-4931-b476-b18361b2cec0" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="25e68812-88be-4320-8b49-1364cb6049ac">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="c9e3b83b-0612-411a-ab79-f413430ed6ed">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="25caea45-cd2b-4695-af19-cc1e96a5a326" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5066797c-85d5-452e-8616-bf59d9408ff9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="9e67c5df-99a7-4301-94b1-9fcdf00f7fda" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="bb851ddf-822c-4f1a-a7be-4559ccaec080">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7f0cc596-3a89-4ba2-9a43-98ea2cc22eb0" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="cc1d9239-d84f-485b-ac80-9a5a75b29fe2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fecee2f4-6018-4cb9-9ba5-bc26713382b2" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="15092794-6528-40b7-84b1-994c1db8aad5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="79147a31-d4bf-40fb-a58e-5310e4367ab8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="574bc501-120a-4908-b010-f6f094dc7005" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="055e443d-0692-4c75-98f1-2f695ba1011f" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="3d59f13d-83aa-43b8-bf61-6541d8ff22e2" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="dfef571f-a74b-4ed9-9947-9bf9d670d59b">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="039edffa-b78f-4335-bbf5-61a4e50d2079">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="23f1d523-a83e-4d11-a6f5-b17c0a2f39bd" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="798e9f12-c593-49b2-b7bd-05393eaef0fc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="bb9cae24-fb54-4356-a2a1-d8e077806a38">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="ae7cd63d-130c-4e04-88dd-88d7e2b62c1c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7e970475-02b9-4c7f-a1f3-665169a6076f" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14be091-b057-4eb0-a004-040d372ea524" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f7fb5af1-2779-4a59-8941-cffbd64b24fb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="1eee49ef-9922-4a45-95ad-f87875273fec">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="5c2a6b76-bfb6-466d-87f4-ed94efc355a0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e6a6376-47e8-4488-a3e3-4295890430ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="718da52d-9eca-4d3a-bd7b-05a67fc4e571">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="b1916a4a-a3c0-4040-b443-6708be1bb1be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="17f20f8d-2ccf-4828-b860-5a5d9403a584" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a8db75ec-6e26-47ef-abc7-4c6da0d79bbe" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="c42d75f2-6059-4193-9f29-14829b38108f">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTCH1")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 3" id="27bce0bc-7dca-45c1-bd17-dc46e0d1f626">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="727baafa-d3ca-4849-9627-f1217698c6c1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="42616816-568d-4ba9-8f3e-562f4a3b93a2">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 4" id="729542d0-a12f-4ce7-a075-b7ab0372445f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c945630f-2975-46e8-a81e-8c5b768e8af3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="76226e45-1105-4df1-aecd-8531fcf01410" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA-blocking" id="fab16def-8fcb-4f39-bc48-a57461bd371d">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-004</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>Y</blocking>
<proposeddatetime>${#TestCase#wishDate}</proposeddatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} blocking, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="bf1bc951-94ec-40ee-9287-6dc07ff161ca">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c051cf6d-afc2-4039-8e66-648d8eae1e2b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9ce08446-0831-48a3-abf3-cfe93b64ac2f" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f442ad9c-8a22-4ed2-a38b-3d63b12e0235" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d3219ad6-9af7-47eb-a24d-452f21db3519" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="1dcf5a7f-d9f1-43df-9fc6-0d8605cb36bc">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="f5565121-897d-403b-95c3-32dd714363d1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="25caea45-cd2b-4695-af19-cc1e96a5a326" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5066797c-85d5-452e-8616-bf59d9408ff9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8a562dc1-ec45-400a-832f-5d73f5015440" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="effee652-d490-467f-91f2-278c3c872ec3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="173b2343-5c06-4cfa-ada1-b0f7af150d8b" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA" id="e3024599-7d5a-4cc1-9d83-c337d03f47b9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiWishDate} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiWishDate} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="12e59763-3074-41e8-9fc3-0009bbab64bd" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="68ec906a-f535-4ee9-aaca-ee621e4f32a0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="313515c5-1a9a-4730-88d9-6e36c03d36e6" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b2b99683-5776-4af5-b816-2207e4517cf8" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="319e2fe7-0c68-42f8-9d1f-ee04ce7d6583" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA" id="c0032d11-73a4-47e5-a844-ad8ece7ae35b">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 5" id="71af0664-9e2c-45a5-a55c-022c74acbcd2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>Y&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: proposeddate">
            <con:configuration>
              <token>${#TestCase#wishDate}&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no wishdate">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="dff4fa17-890d-4153-b5e5-76f059c87ba4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="123f9eb9-653c-45ea-803e-38bb1265911f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA" id="f35e66b2-3fcd-4e6c-8208-d02680357bc1">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA" id="d8d717c3-eb77-4ef4-be51-69ae66e7be91">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="79e5921c-1cc3-4b96-94e5-27becdb749c3" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="2a2c3c04-c4b6-420d-a414-d1a9e338e034" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5fca7117-65fa-493e-a6e6-e32493a04a2a" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH2" id="acc27e0c-7d93-48ae-b712-b5d350047c97">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh2Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH2" id="97bc5652-b12a-48b7-bff5-6e2dba6f76f9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#guiCh2Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="969d51b6-e10e-47f7-80a9-4ed0833de28c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH2" id="8fae688f-1fd8-4a2f-8d95-1be944f55171">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="GroovyScriptAssertion" id="ce6c722a-7076-4bbf-a7e8-f434bb00aec5" name="Script: get wishdate" disabled="true">
            <con:configuration>
              <scriptText>import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ch2wishdate = holder.getNodeValue("//Results[1]/ResultSet[1]/Row[1]/MESSAGE_TYPE.DM_DATETIME[1]")
def string = ch2wishdate.replace(' ', 'T')
messageExchange.modelItem.testStep.testCase.setPropertyValue("ch2Wishdate",string)</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fa439ceb-dddd-40a6-bcac-30cfea11f6e4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="823a99ae-eff6-4f7c-8065-cf05a4360dee" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8ef32768-1008-4c44-b77f-525b36eb3337" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH2" id="12935b53-2106-4d41-b632-722162e8deb4">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH2" id="2b80edc6-91d2-4947-aa6c-1e2f5ba4247c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="67905e7c-7c88-42a7-8f5c-cacce2609f38" name="Xpath: Change">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4888e5ec-704e-4f7e-8bbe-ab7f5ddfa202" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH2" id="eaffbaf8-d2e4-4a01-80dd-d77a13ca4ccd">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH2 1" id="eb2de8b9-bfd5-4757-9d22-61f25ce00839">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="b2979c73-8fbf-4655-9423-8c570376a288" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="65d58701-8f00-4f33-b5a2-eda542e8bda2" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA ok" id="97b780a4-f47f-4166-b3c4-f9bde41ffcb4">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-05</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#ctch2ProposedDate}</wishdatetime>
<note>Change Answer blocking ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcha2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA2" id="78fceaea-7387-448b-a508-ed57d4254de6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcha2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bbbb335-14d0-4529-9e7b-f4ca94e25914" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e7b19e97-c6d5-4be6-89d2-cdb9a58b9bf8" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="52fa79d6-e46b-4ceb-9f70-2b9509257f01" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f87345af-1216-491b-b562-1a005a348a5e" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="496f6862-dfe2-43c7-ab5d-b02761aabb5b" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcha2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 6" id="643cff09-dedd-416c-ab1d-38a93a59f553">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA2" id="3fb7bebf-2d93-4e1f-b0fa-95edffa9aaad">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcha2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="67a50163-9088-4468-b56c-92f6a123a3cb" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="dbbceb38-6519-4fc9-8a16-860f1dc19242" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e46227f2-fc7f-49c1-be1c-d6328ddd4a0b" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA2" id="fc0aae79-bb32-475e-b879-5cae2cd7af10">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5d28564c-1c11-4f78-916d-90a5eb8a9710" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcha2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="be069abf-2fcf-4601-a03c-46a16254b170">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh2Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_CTCHA_PROPOSEDDATETIME</path>
              <content>${#TestCase#cWishDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be6b44b5-bcd8-4658-8de5-4de9ee37436e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA2" id="1244ce99-7e25-43b5-9310-9dda98987f9e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="37ea867d-1a4f-4b6d-9464-8e6b2e1afddc" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8119b3b8-ab91-4412-a48a-be01cbbaf9da" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="40928453-d67c-4f15-885d-a00fd6667610" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA2" id="7ea3fb5b-a1d9-48ad-8383-ecec462c863b">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no scm CTCHA2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 6" id="ed60d991-cd21-401e-8204-9882f053e4d7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>N&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: wishdatetime">
            <con:configuration>
              <token>${#TestCase#ch2Wishdate}&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no proposedatetime">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0016db61-53fc-4bc3-b8ee-00a2fa007ea7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="033e93d6-8260-4704-96f7-c8e16c1555dc" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA2" id="453d719c-a067-4626-8e17-ca1ab3c61c36">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA2" id="7eeb3dc2-2d75-4f32-9400-635448631869">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="5defa40a-3301-4fe5-8096-3618f6fca592" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4567d945-ad97-4022-8313-51f4cdec1f23" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8618002a-d92c-489f-a000-0680d2ca4be3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP" id="cfbb9258-1e37-4b09-a725-0a222c40a4eb">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA and CTCHA(2x)  emails are received
//verify for ${#TestSuite#donor} that hte CTR and CTCH (2x) emails are received.  
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//Get the locator of viewDetails with current dossierID
def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
log.info seleniumHandle.clickObject(byViewDetails);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="e32af78b-24c8-4584-a842-71df3df3be10">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="496451e3-821f-45dd-99e0-c700a09fe438" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="8777e24f-cee5-4abe-9137-f4921b341bd8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="1469bcd0-8b34-4249-aded-953adddb4f3c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ae056ff4-b6a1-43de-aac1-4e872070a376" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="ee1403f1-ad48-4c06-9df7-c2e779bf7b5d" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="61217a97-11b6-4b64-a62c-f1a39c59fe34">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cd7e1363-f59a-4d4b-aba5-2539c517c9b7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
import java.util.Random
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.days
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "14-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.15  CTR-CTRA ok-CTCH-CTCHA blocking-CTCH-CTCHA ok-CTP direct" searchProperties="true" id="bda5bf7d-bad9-4745-a8eb-0d0156e792fa" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="3cdfb9d8-e9ee-4989-a172-bcfcfdbb0f5e">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="76646f4d-8ed1-4f7e-9ae6-fe1ab31c3270">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");
def switchid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CTD_SWITCHID[1]", "switchId");
log.info("Testcase 3-15 dossierid "+ switchid)</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bd3a759-d9e5-4881-bf60-afe26ef43240" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="1cf4f2ea-9bfe-4786-a804-8efef3a3649b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="898f6ddd-45b6-47d5-ba8c-ea06c797ad4c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="bd661332-3dae-4120-9dd5-428cf0ce2cf7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="54f6806c-98ce-4034-acc6-0748b4d7ee67" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="69c53860-04f5-4488-99e5-1db1311d1dd3">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="f288fe4d-c7b7-45fe-a714-5d8159bc7139">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="55292669-7170-47d8-b025-dea1e40f7cf8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1630b40c-aa45-469c-a2c7-f76420c38f65" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="dd9c4da1-a0ab-47fb-972c-9d3ec348a654" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="5d7e43e1-bc83-4f28-b2ae-14ed7f173a00">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 1" id="066f8d47-49ea-428c-9aa3-fa259aee5459">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="d33e6e2b-8790-4e68-983a-14454ffacd04" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cadeb218-6880-4036-b9ff-119d6845cf0b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="30a9d938-049c-4efa-af4c-cadda815cce6">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="b644ea3b-045b-4ae0-b53b-ed5cb8ba775c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3e5cf6ba-1450-4a0b-ac13-ba6254df54a2" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5ce8f27c-2cdd-4557-b472-221431b64f94" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3cdd08d2-6052-4fe0-96dc-4d739821eba3" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2e18e5ea-acf9-4d6a-bbd1-71f1c077944c" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="29a4eb20-85b2-4afd-9bdb-46ca0af89952">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="2c51f33a-2736-49e7-ac9c-7829ecdecb04">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8f1a622a-bac0-4897-a2c8-77c0cb43ed83" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="7728515e-9fed-4058-b7cc-ec934c705dae" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d30a251a-9f0a-4972-977e-b11ad427a342" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="7905d08a-e674-4466-83f5-71a06508494b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="220eec1c-2f13-4bb6-9d84-3dcb4782a61c" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="911d150b-8fe0-405e-a59b-f046284de313">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="888a79b2-df05-4da0-9e76-cc16a09e6603" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="40a5b96c-30dc-46d7-8c4c-598742815ff1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="48be8767-63dd-4b97-bd2e-6b148712f734" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9c3f665-02fd-417f-a931-4bae5ef4f761" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="320bcfd8-e47c-4442-9f5f-a35950c10fec" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="9ff5cf88-763c-4d81-8933-cf351dc8f5b0" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="009dc1b7-adf9-47e8-8e0f-d96e980e0771">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="9254e6e6-37b6-4b83-b1ab-b453564293be">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Request answer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ed038b67-62f6-4aa2-8b95-f2381a9cc282" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3d127954-12ef-4302-8988-68c72fac206b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="c9a35529-83a2-4be8-bdf0-5b2198c6d8c4">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="e33ff078-8fa3-4941-940d-106245697afb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="b0f6f224-4149-48c4-8e93-5fe0362dd8c4" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d4fccf19-3ee8-4122-a391-3c06892f6893" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3c574ea0-7a28-4f5d-bdd7-a72962ca91f9" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="0c3852a9-5159-44ed-bb3c-8c8043d437ca">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="5d36c6e7-6075-4043-b2bf-7f9c3e11ae1e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3fdace08-47bc-4a9c-bea3-eedf47960e5e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="a069d0ee-f94d-4846-9b31-aeefd0769b6e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="ad681b60-0b08-414f-bf9e-288a1e48c297" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="70c15d91-f69d-4c98-8d26-f6b31d76a279" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="bd7fdaa7-4b21-41fd-8f90-50b0c40940e9" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="35de1ca9-f829-42fd-b08d-b03ce400e8f0" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="a99dfa77-3e88-4841-9017-e825602a46b6">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTCH1")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 3" id="c676f5d7-f4c5-46f3-aea9-c30b81b5d5ed">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c700e7f-2fe8-4f40-875c-ce91c2e56070" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="aeaec876-a46d-4874-be68-368f82db4a36">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 4" id="6d20c6b8-06e9-49b4-9fa8-f4dfd8184a54">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="92c5b2ef-5b3a-45cd-a52f-18a256b11942" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4eda4b2e-a5ed-45a8-9529-701acae315e7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA-ok" id="4e167a7a-c158-4fd7-ad97-2117dcb25a89">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="a6bec572-fe3c-4e6d-8a8f-1a9b490651d2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6ee43c8a-8179-4b8b-99de-a54cad403eea" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ef4fbbec-1996-4949-9882-fda763dcf75b" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="86353aff-c597-49d4-97aa-7f4e6c726ceb" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4d795ad0-f3d1-461c-940d-6fb3388e3857" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="e8db8149-d871-4f22-bf2d-bf43150599d4">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="56660de0-c6d2-43ce-b836-b70dfb1510bd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="caf0182a-d390-4e84-9360-2bdaacba9e7f" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="ee61ff35-317b-4b00-a8ec-8e19c47ba8e2" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f5d93ccb-8eaa-442b-abcb-cabdc637e755" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="d0852b2e-1606-4fee-a4a9-654690133dfc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="24432d32-d608-4ada-b297-d55c09095bf9" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="973e334b-c795-4909-b690-04eefa32eacb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3d01c165-e789-4b28-b4ba-3f174e134d4e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="4cc35efc-0568-461a-8794-8187e0d06236">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="c3187f36-a87e-4d67-b276-21ac6f07ff04" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7023682e-e313-433f-8e5b-c4501b985455" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d50165da-7a1e-414b-9341-4e0f34b530f8" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA" id="4da2ca86-719f-4d62-871b-92970b181f1a">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 5" id="3c1f1a2c-1894-40ff-b679-cab622135415">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>N&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: wishdatetime">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no proposedatetime">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ccfc2241-1cdb-4dff-bb24-778613b0f6b6" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b5ee25f5-203e-4bb4-ae9f-1868afb6b0c9" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA" id="7fb642c0-35ef-439e-800e-480f13ee2b5b">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA" id="05cde234-ae33-4c24-b8f8-4f6bc44b2875">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="c2706c6f-8d75-4352-8ef1-2ab778814a86" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6384b2e5-d4b6-456b-b24c-48276ee22caa" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="52bc65c0-4c74-4be2-9ede-a621fecefa81" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH2" id="2a1dc9b0-4e36-4c01-a24b-b6ea10b93906">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh2Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH2" id="a24fd1cb-a66a-41bb-b7af-d20fe946b258">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#guiCh2Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="29b2f9c6-d45e-4755-a0ce-eac4d2021236" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH2" id="d59cc797-1ad1-4361-abe4-90cc859b181d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="97ddf65e-f65f-4de4-9a43-6ca72a0d7fc7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4ed027a8-3277-4315-84a3-001a5200aeef" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e6f1b011-ed0a-4013-aad4-fa1a2749acdc" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH2" id="cea13571-8a09-4a62-bd6d-273b7ddc7e3f">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH2" id="616c300b-636d-4a4b-982f-6f836e2057d1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[2]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3068ab63-afe9-4668-849c-2b936393418f" name="Xpath: change 2nd message">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[2]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e1162bd6-7f6d-425b-a169-4abd878fe6e3" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH2" id="ea90f96d-dc87-4378-b79f-3a023d623a5c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH2 1" id="34ecb0b5-5928-40d9-8a12-8b249d5e9185">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="6f54d1fc-caab-456b-bb0d-12c15a47f12c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="611ee388-def1-4af1-b7cb-f1679d9cedc7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA blocking" id="e88f999e-bfb9-435f-b4d8-18c2c5832bf6">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-05</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>Y</blocking>
<proposeddatetime>${#TestCase#ctcha2ProposedDate}</proposeddatetime>
<note>Change Answer blocking ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcha2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA2" id="fbc94853-2dba-4abe-9b9d-7fadd4147e4d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcha2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4a47a2ab-b9cb-45b9-9295-7c5e50ef9532" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="bd5345ce-6d26-4ec6-9cab-d9c771438a34" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcha2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="db0fa649-c5aa-4291-ba67-5ae76297110c" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="bc4af8c2-0b2d-4e1d-af90-aa8fe5f93ab9" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c61cf3cc-d5b8-4867-825e-dff4bb60de11" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 6" id="df130a6a-8631-4ea5-ac23-5c9fd7275c0a">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA2" id="47874f02-be52-49f0-87f7-36a1fb4ca329">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcha2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9e1160c0-68c4-412d-b2de-e51868d40f3e" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="a99e150d-76e6-4663-bdf0-0a1f9e71f3c3" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8ce31285-0c8d-46fb-9b43-e2f8a4fd1cf7" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA2" id="658665be-3257-4015-92cd-cf0dd016e5f8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="37ed1e90-fb8d-43e4-8bb7-fa93af1395db" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcha2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-blocking" id="1cea569e-4ddf-4972-a580-2bf6429dad4e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_CTCHA_PROPOSEDDATETIME</path>
              <content>${#TestCase#ctcha2PropDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5bf5d462-d42e-4eb7-a1db-d438551c84f7" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA2" id="e7fb8632-3b36-4cbf-81b3-49fc95115651">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="fd9fe429-e598-406e-a449-645a82bf7f2c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="761caca2-c369-4497-bec8-5d115af7d1c0" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="407b5908-7049-4acd-9b25-a99f9ebd3f00" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="6180794e-9152-4a3e-883f-7a79beba9042" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA2" id="5ecd164c-fe76-4b73-b4e6-27bd061c6aa5">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no scm CTCHA2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 6" id="b525c475-43bc-4c67-b5f5-f8cdc464c0cd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>Y&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: proposeddate">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no wishdate">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ed02927b-cd35-4694-891f-74f51ff49406" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ed9a6255-0416-47bd-9390-4f424c82386c" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA2" id="20e65723-2b01-4d5a-994e-43686a2ecadc">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA2" id="e2729fcf-6ef3-4f6d-9251-4ccb951653a2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="f588bb43-2adc-4520-af08-5327ed857d7b" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="22a4a2f9-6528-4394-a330-8c2d5fb501ea" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="96103092-365e-4741-b166-11107ddf58dd" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP" id="068aeaf4-3103-4ded-8b76-2f78b103e98a">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA email is received
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//Get the locator of viewDetails with current dossierID
def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
log.info seleniumHandle.clickObject(byViewDetails);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="9ebf1723-ab92-49a8-b499-380df993cf36">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Completed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>f</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cf0db72b-5d72-4c33-8f3c-9814dac4f61c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="c06c11f4-29c0-47ba-bf19-7643d1796509">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="e900d3d1-d077-4a27-a503-b214634440dd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="67734ef3-cbd9-4e3f-9bd4-0b79167a9f3e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a819beb5-741b-40a3-b85e-a050f73c2069" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTP" id="ba9d6dcc-9d43-4345-89da-e89170038bf3">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="480b5ecc-0386-4848-aea0-b6c5569cda3e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7277aa2f-e8ea-44db-b706-7f978734f32d" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bb0084c-3b0b-49e2-a89a-df1a103997ed" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="da51d5ec-f8cf-4d2b-85c1-78acb9c6cf14" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTP" id="33e8bf11-792c-40fb-acff-5694e2879bfe">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP 1" id="d2d22264-92f8-4e64-9f40-79a192589b26">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="95891cd3-f574-42e6-a17b-4a71fc7bf43b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="CheckMail" id="f7917406-0626-43df-b58b-e28883fd344e" disabled="true">
        <con:description>Check for ${#TestSuite#donor}  ${#TestCase#switchId} 
if emaisl for CTR, CTCH (2x) and CTP have arrived.</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="4a4aff36-110c-47f4-a84b-8422206f6205">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 200.seconds
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "15-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.16 CTR-CTRA ok-CTCH-CTCHA blocking-CTCH-CTCHA ok - CTC" searchProperties="true" id="83f8194f-9c67-46cb-b9e1-9c8d5ddd11e6" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="5aa05aad-c70f-4c13-97b2-4c51860b5f47">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="29aea888-f9be-4bf3-b1b0-5a96105300ab">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b7b10cf0-300d-425c-8ded-dd2cb727eae1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="213cc7e1-16de-4c39-88da-ff50f51cf1ba">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="60348e37-1b59-4849-ab8f-f57a02cfe3b4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f38f0b3c-54f7-4982-a729-8e6fedea06bc" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d8d5483a-4989-4757-9da6-c80631b33333" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="badb89ce-118e-485c-a99c-fe1002d5424b">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="7c6183e5-54dd-436e-94e9-58da5965d44b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c5c8756-e9aa-4892-8267-8ad1bf31000b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ec56e512-26de-4288-89c0-dd70c6cafd4f" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a12447e1-4d81-4b63-b2a8-092e7fb9afc7" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="2f00941f-e476-408c-8ef8-f7216a2e7596">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 1" id="e7f6aa2e-6339-446b-a744-a8e137881287">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="454ac95c-2a55-4dd6-922f-dd4c2477ff41" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="68e3ff1f-7c58-45c9-9f44-9a7c36f61642" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="7e4208b6-890c-4e33-bdf1-5db99f30d112">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="e67f47c4-7694-46cd-bfec-ea5741ebe437">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6adb7f19-1129-474d-aff6-2983ec84b8d8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="981c2467-1bbf-4897-99b6-4397706e7a41" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="68035c82-d307-4cc5-91d0-5be3c75bf2b8" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e1e6148b-582b-4931-b476-b18361b2cec0" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="277da91a-ff54-4a97-91a3-5878b9c5d48e">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="119eb008-b030-4a32-9990-403eddd69568">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="25caea45-cd2b-4695-af19-cc1e96a5a326" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5066797c-85d5-452e-8616-bf59d9408ff9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="5c96a915-ec82-4873-b8af-84eebc473b98" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="aeb6d62e-72b1-40cf-9aea-c0ebf2af7eab">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7f0cc596-3a89-4ba2-9a43-98ea2cc22eb0" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="f5bf9764-3db6-42bf-8a3b-a72e053e5145">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fecee2f4-6018-4cb9-9ba5-bc26713382b2" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="3e77e643-10b7-43f6-acc9-2dd0c5475392">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="79147a31-d4bf-40fb-a58e-5310e4367ab8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="574bc501-120a-4908-b010-f6f094dc7005" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fa347aee-ac21-49c7-83b4-6ea49795058e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="cd4453df-060c-4fec-8756-52d42dadcda6" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="1347a2be-4248-4e57-890b-cb30bd01859f">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="54120b06-3464-4951-8526-d5efec987cda">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="23f1d523-a83e-4d11-a6f5-b17c0a2f39bd" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="798e9f12-c593-49b2-b7bd-05393eaef0fc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="4b781175-473d-4fc1-adff-5bc7e97f2438">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="42cda00b-4c7c-4181-8d92-ee9849900933">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7e970475-02b9-4c7f-a1f3-665169a6076f" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14be091-b057-4eb0-a004-040d372ea524" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f7fb5af1-2779-4a59-8941-cffbd64b24fb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="4105b1c1-b734-4db7-87bb-e8da096607b4">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="d1ff0dd4-0924-43cc-8538-bda1b754a93b">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="cab933d8-0201-4d50-93e3-74e994dc2854">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e6a6376-47e8-4488-a3e3-4295890430ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="3bed0359-11e2-43ec-bff8-ca64c543b9c6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="b1916a4a-a3c0-4040-b443-6708be1bb1be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="972ea720-db94-4455-bce7-99dfb3e43a2c" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="65c44a0e-e0b3-4ef1-be6a-9b5776f328a0" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="44958116-824e-4fb6-a620-f3667b491390">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTCH1")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 3" id="ee6d7901-33f1-4cc5-96cf-a4b930df7266">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="727baafa-d3ca-4849-9627-f1217698c6c1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="cca86778-2602-4e5a-b1cf-9944a0ad3f23">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 4" id="1d607b06-fc4c-4839-920f-cd74d30f0279">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c945630f-2975-46e8-a81e-8c5b768e8af3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="76226e45-1105-4df1-aecd-8531fcf01410" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA-blocking" id="e70ffc93-f814-4a39-9e5b-0358b3d49de7">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-004</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>Y</blocking>
<proposeddatetime>${#TestCase#wishDate}</proposeddatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} blocking, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="b77a39ab-6836-4570-8e28-11bd03fb95c3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="c051cf6d-afc2-4039-8e66-648d8eae1e2b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9ce08446-0831-48a3-abf3-cfe93b64ac2f" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f442ad9c-8a22-4ed2-a38b-3d63b12e0235" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="d3219ad6-9af7-47eb-a24d-452f21db3519" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="dde74ce1-2b57-4790-b16b-1def91471481">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="e849a6a6-6957-47b0-8f38-5aa7fd3a2780">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="25caea45-cd2b-4695-af19-cc1e96a5a326" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5066797c-85d5-452e-8616-bf59d9408ff9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="b911ee37-22c4-41f3-92bd-9ad9d826db9d" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="d003867d-3b80-4515-b39a-1039bcea2c19">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="173b2343-5c06-4cfa-ada1-b0f7af150d8b" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA" id="1ac6a340-eff0-47a2-b5a5-d5456d10d568">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiWishDate} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiWishDate} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="12e59763-3074-41e8-9fc3-0009bbab64bd" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="0757a2a7-a5a3-4c33-96e9-ea3a5e23fa6d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="313515c5-1a9a-4730-88d9-6e36c03d36e6" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0f474c72-7653-413a-9154-061f5d815be6" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="fab6dac3-d57c-4f19-a1aa-bcff4d70680c" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA" id="d63afd2f-fd94-4200-8095-282f416bbb77">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 5" id="77c388e4-7ce6-4d0e-913b-bca7d39abacb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>Y&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: proposeddate">
            <con:configuration>
              <token>${#TestCase#wishDate}&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no wishdate">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="dff4fa17-890d-4153-b5e5-76f059c87ba4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="123f9eb9-653c-45ea-803e-38bb1265911f" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA" id="0a67032c-00c7-49ac-b9c1-d36dccbe1754">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA" id="d7ef3a62-afdc-4eee-a06b-add3a5aacf1f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="79e5921c-1cc3-4b96-94e5-27becdb749c3" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="2a2c3c04-c4b6-420d-a414-d1a9e338e034" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5fca7117-65fa-493e-a6e6-e32493a04a2a" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH2" id="0bfa6b30-8813-4f7d-b22e-a6918d4ae355">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh2Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 6" id="6088fe6a-4011-4724-b812-fadce06a5f89">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH2" id="607b7c3e-2f45-426e-a2c8-e26e18d3a665">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#guiCh2Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="969d51b6-e10e-47f7-80a9-4ed0833de28c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH2" id="c74d0d1b-247e-4ce8-bf5f-0ecf462f57f0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="GroovyScriptAssertion" id="ce6c722a-7076-4bbf-a7e8-f434bb00aec5" name="Script: get wishdate" disabled="true">
            <con:configuration>
              <scriptText>import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ch2wishdate = holder.getNodeValue("//Results[1]/ResultSet[1]/Row[1]/MESSAGE_TYPE.DM_DATETIME[1]")
def string = ch2wishdate.replace(' ', 'T')
messageExchange.modelItem.testStep.testCase.setPropertyValue("ch2Wishdate",string)</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fa439ceb-dddd-40a6-bcac-30cfea11f6e4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ace73d19-7ce9-4b9e-a82a-6ab5f6378ff2" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="9bfbe069-9d53-4c8f-9197-f73c80d04497" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH2" id="8bd869f2-8582-4b66-8d4b-681c5aae7c2e">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH2" id="b5a6624e-339a-4cd8-9262-1256e3d4bcfb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="67905e7c-7c88-42a7-8f5c-cacce2609f38" name="Xpath: Change">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4888e5ec-704e-4f7e-8bbe-ab7f5ddfa202" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH2" id="ce5cb6b7-f618-42d4-8e5f-b71b01ec3ea4">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH2 1" id="833e6eae-2d89-4800-bd95-1cc17cf96997">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="b2979c73-8fbf-4655-9423-8c570376a288" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="65d58701-8f00-4f33-b5a2-eda542e8bda2" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA ok" id="be673d74-886a-4b88-9ad1-03eb6fffd160">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-05</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#ctch2ProposedDate}</wishdatetime>
<note>Change Answer blocking ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcha2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA2" id="be51ccb8-99e9-457a-a598-1bb59e0f0b32">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcha2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bbbb335-14d0-4529-9e7b-f4ca94e25914" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e7b19e97-c6d5-4be6-89d2-cdb9a58b9bf8" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="52fa79d6-e46b-4ceb-9f70-2b9509257f01" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f87345af-1216-491b-b562-1a005a348a5e" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="3486ad27-7df9-42d5-9d9d-e205b211fa24" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcha2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 7" id="77631879-9224-455c-9915-d952b8aad519">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA2" id="cc945e52-b087-4a3f-934b-22e0087c511b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcha2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="67a50163-9088-4468-b56c-92f6a123a3cb" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="dbbceb38-6519-4fc9-8a16-860f1dc19242" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="05c3e214-9579-44a0-9fb0-683e444063af" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA2" id="c9a21a21-d7e6-48b8-8eac-1011c13cd802">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5d28564c-1c11-4f78-916d-90a5eb8a9710" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcha2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="70ef3aa8-8ac9-4f02-beda-cd90704d9422">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh2Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_CTCHA_PROPOSEDDATETIME</path>
              <content>${#TestCase#cWishDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be6b44b5-bcd8-4658-8de5-4de9ee37436e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA2" id="e487c2cf-2474-499f-bbf8-1d936e5f7cd6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="37ea867d-1a4f-4b6d-9464-8e6b2e1afddc" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="60aeb9e2-e7be-46aa-a6da-1335dae293c7" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b23c82b3-8922-430d-a7cb-382f17a737e6" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="60ceb261-8472-4bc1-bf61-abf75e54b29d" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA2" id="78aacb0e-8128-44f7-8581-7f2b3ba5e1e1">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no scm CTCHA2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 6" id="56cf7414-1606-430a-8c52-dfa183be1ed9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>N&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: wishdatetime">
            <con:configuration>
              <token>${#TestCase#ch2Wishdate}&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no proposedatetime">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0016db61-53fc-4bc3-b8ee-00a2fa007ea7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="033e93d6-8260-4704-96f7-c8e16c1555dc" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA2" id="29018c44-5790-4622-a1fb-ebd419fb1265">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA2" id="0432b77c-7658-433c-9ff4-1c10eca912ca">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="5defa40a-3301-4fe5-8096-3618f6fca592" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4567d945-ad97-4022-8313-51f4cdec1f23" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8618002a-d92c-489f-a000-0680d2ca4be3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTC" id="b869fdde-1281-452d-aed3-a32338309bfd">
        <con:settings/>
        <con:config>
          <script>//Please send Cancel for ${#TestCase#switchId}
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//GetDossierLocator
def switchidLocator =  seleniumHandle.byLocator("HomePage","CancelRequestDossierID", switchId);
//Click On DossierRecord
log.info seleniumHandle.clickObject(switchidLocator);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","CancelRequestCancelNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","CancelRequestCancelNoteButton")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTC" id="fa7282ae-bce6-4966-812d-34b289a67f9b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=11 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="1846bd70-ede9-4406-b758-7f23241ac3aa" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4cbeb364-0e9e-4740-bf0a-adea817c6133" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="4e4473ad-482b-4d6a-a529-7d5008f0df32" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTC" id="1a16651f-532e-4020-ba8e-6f8e3e1b578d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Cancelled</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e5674e64-b285-4e2d-b343-7a640c978165" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTC" id="cd16171a-5fe8-488b-87fb-c968a0c6c547">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
	testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTC" id="c4877d35-af0a-4429-bd3c-4a7c3d7dac4c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3e6d13cd-db91-453a-b133-3482c556c87c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="11ea6756-4d66-4e9b-8fdd-1174a9ba181b" name="Xpath: soap verson">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14f60c8-81d7-41d5-b77f-79114ea85e64" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTC" id="0dfcc57b-5f2b-40a3-b880-1152480786fc">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="CheckMail" id="652532d4-80d1-4815-a4b5-9b464043b26f" disabled="true">
        <con:description>Check for ${#TestSuite#donor}  ${#TestCase#switchId} 
if emails for CTR and CTC have arrived.</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTC 1" id="2b5237a3-6747-4551-86cf-627adee4c46b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="4880fe0a-4e68-405d-a3eb-797bbd832eb2" name="NotContains: no rows">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="02a2c5a8-0d80-4f36-88de-c5ad753114a5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="03367ca8-5f0d-47d3-949f-f89e9636607a">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 200.seconds
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "15-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.17 CTR-CTRA ok-CTCH-CTCHA ok-CTCH-CTCHA blocking - CTP buffering" searchProperties="true" id="1980cda9-31d4-40c5-a7e3-629ae0623e32" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="d32b0e62-7056-4b15-8670-a42156a23202">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="acfdf528-5a27-4d9f-8dbb-892a83050c10">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b7b10cf0-300d-425c-8ded-dd2cb727eae1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="e3c7bb94-478c-4200-824c-912ec7078915">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="60348e37-1b59-4849-ab8f-f57a02cfe3b4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="36acc925-ae53-41f6-b033-ddf3927aa085" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="42575b26-ef7c-41c8-9925-3c006e4c723e" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="24580337-a14b-4985-8171-6c78e386471c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="af91f304-2421-4a2d-82cd-579ecf11ef36">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c5c8756-e9aa-4892-8267-8ad1bf31000b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ec56e512-26de-4288-89c0-dd70c6cafd4f" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a12447e1-4d81-4b63-b2a8-092e7fb9afc7" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="55a11c50-ad58-4305-8395-486947920753">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 1" id="8f1167ae-6b2a-4af9-8750-013c05ce6a77">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="454ac95c-2a55-4dd6-922f-dd4c2477ff41" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="68e3ff1f-7c58-45c9-9f44-9a7c36f61642" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="03895dd5-5702-4ade-86e9-632c0da66715">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="8afaac97-25c8-4eaa-8ac0-405b19066f33">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6adb7f19-1129-474d-aff6-2983ec84b8d8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="981c2467-1bbf-4897-99b6-4397706e7a41" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="68035c82-d307-4cc5-91d0-5be3c75bf2b8" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e1e6148b-582b-4931-b476-b18361b2cec0" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="7672ad25-e2a7-49c0-adb7-e349913aec24">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="784e1e0c-9907-4ae5-a6a5-a66162efd736">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="25caea45-cd2b-4695-af19-cc1e96a5a326" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5066797c-85d5-452e-8616-bf59d9408ff9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0642b0a0-b522-47ed-9349-09fd9d6fe568" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="89827fec-1d8d-4ad4-82b8-71c134768aef">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7f0cc596-3a89-4ba2-9a43-98ea2cc22eb0" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="0048d833-80cc-4adf-95c0-cb73af06595c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fecee2f4-6018-4cb9-9ba5-bc26713382b2" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="8de59ff2-cc0b-4228-9959-3d26731181b4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="79147a31-d4bf-40fb-a58e-5310e4367ab8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="574bc501-120a-4908-b010-f6f094dc7005" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="bbbd071f-362d-4898-98f0-8b4fb3b3b340" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0e4c1b5d-0738-4d68-87ec-d3b041ff2fae" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="0171a180-4bd9-4ee7-991a-75ad258d1470">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="64bcad23-494c-434b-95fd-29c0459203c9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="23f1d523-a83e-4d11-a6f5-b17c0a2f39bd" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="798e9f12-c593-49b2-b7bd-05393eaef0fc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="228520d0-7b6b-4367-9aed-d08fd51a47f8">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="e81c645c-d745-4ef0-96b3-192651db97ea">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7e970475-02b9-4c7f-a1f3-665169a6076f" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14be091-b057-4eb0-a004-040d372ea524" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f7fb5af1-2779-4a59-8941-cffbd64b24fb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="61ae0252-1bb4-4b9a-84d8-b9ba85c48cb7">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="c39db341-637d-4dad-a31b-ec382c1a9dc0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e6a6376-47e8-4488-a3e3-4295890430ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="b7cda20c-c77b-44a0-9e98-13fde4f741fe">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="b1916a4a-a3c0-4040-b443-6708be1bb1be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="fa895580-a042-4151-bdef-15a97879a34b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d72ce0ce-cf70-45d3-aa8c-5b1eb25cefa4" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="2580c79e-0478-44fa-a15c-b3854ba60be6">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH1")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 3" id="d125fdf9-b7df-4527-9a3e-f9b9c0225aca">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="727baafa-d3ca-4849-9627-f1217698c6c1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="55b8fb65-45c5-4f56-83f4-179d92b63ad5">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 4" id="f13bea3e-66e9-4199-ba1d-0dc605e4d17f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c945630f-2975-46e8-a81e-8c5b768e8af3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="76226e45-1105-4df1-aecd-8531fcf01410" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA" id="773a50e7-86a6-4de4-b358-b1125516430c">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="3756cecd-6e6b-4e48-b492-4c317bd2b9fb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f6c05a55-b26f-4bd9-b303-56461538a8a2" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="74a35f65-5182-4f24-98a9-1e5e0391bbd2" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b2830046-1c9f-48e7-8767-c86370a584e3" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b6f9264b-b68d-4956-a328-72471efe5330" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="169fe098-5a12-497c-8ad7-5eb93fe6f3fa">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="8ae9b27b-4632-469a-8d71-b4a0860d125c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d0e1985e-6e3e-45cb-b8b0-b45a21f9a2bd" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="fad17aaa-1f6a-4473-b040-bdb4a0c1356f" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="2dcc95fb-7af3-457d-839b-6b2081814a40" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="efaf8a45-f206-402f-a7ca-2cded23f66cb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="64a67ad5-82d2-4b22-9a8d-02b9ead1c738" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2fb6578c-865a-470f-aeea-249ec110fc48" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="c826c916-3832-42fb-9fce-994615001119">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="bd859157-dcc5-4ef6-9e3c-d9b4efb1f01c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="de91e77e-0020-46b9-a955-938aa046ff7d" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0515100c-fa35-4209-aa19-884c56bf0bf4" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH2" id="668b22eb-d6ff-4517-ac14-1a2a9012e386">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh2Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH2" id="4f5e6190-9462-45db-af73-486af0108eed">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#guiCh2Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="969d51b6-e10e-47f7-80a9-4ed0833de28c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH2" id="f91452f9-6638-4261-83cb-f51a73d22a4c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="GroovyScriptAssertion" id="ce6c722a-7076-4bbf-a7e8-f434bb00aec5" name="Script: get wishdate" disabled="true">
            <con:configuration>
              <scriptText>import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ch2wishdate = holder.getNodeValue("//Results[1]/ResultSet[1]/Row[1]/MESSAGE_TYPE.DM_DATETIME[1]")
def string = ch2wishdate.replace(' ', 'T')
messageExchange.modelItem.testStep.testCase.setPropertyValue("ch2Wishdate",string)</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fa439ceb-dddd-40a6-bcac-30cfea11f6e4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8baf3bf8-8689-4d2f-810f-9c0b21a226ce" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="68f47fb2-48d4-4416-8bc6-89a4de6367de" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH2" id="681bd344-ce22-48c2-b60a-17c264dc68ee">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH2" id="ec62bab0-9ddc-45e3-ae76-42f6e00ca0f2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="67905e7c-7c88-42a7-8f5c-cacce2609f38" name="Xpath: Change">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4888e5ec-704e-4f7e-8bbe-ab7f5ddfa202" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH2" id="71d914f3-f7d3-4a06-9353-ffb223749e84">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH2 1" id="356feefd-5ec0-49b7-b8a5-1a55641b44f5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="b2979c73-8fbf-4655-9423-8c570376a288" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="65d58701-8f00-4f33-b5a2-eda542e8bda2" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA blocking" id="5e413112-db0e-401a-aae1-f147bff9c386">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-05</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#ctch2ProposedDate}</wishdatetime>
<note>Change Answer blocking ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcha2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA2" id="a34bdd04-82ef-4a07-9631-3cfdcccbd919">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcha2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bbbb335-14d0-4529-9e7b-f4ca94e25914" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e7b19e97-c6d5-4be6-89d2-cdb9a58b9bf8" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="52fa79d6-e46b-4ceb-9f70-2b9509257f01" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f87345af-1216-491b-b562-1a005a348a5e" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="1ce00a4c-3f73-4fe5-8d56-c2d3d58f63a9" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcha2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 6" id="fdd5da73-e7be-4874-8963-b3b71136d0e4">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA2" id="943ec143-b34a-433b-bf40-4d290e133bf5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcha2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="67a50163-9088-4468-b56c-92f6a123a3cb" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="dbbceb38-6519-4fc9-8a16-860f1dc19242" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="bee60e69-6f03-436f-a2c6-061ce1a7ef2f" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA2" id="d32e717a-a932-4280-a606-d4d7454a9b89">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5d28564c-1c11-4f78-916d-90a5eb8a9710" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcha2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="cacfb5fd-f424-4c1c-9260-4904899fb882">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh2Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate" disabled="true">
            <con:configuration>
              <path>//CTD_CTCHA_PROPOSEDDATETIME</path>
              <content>${#TestCase#cWishDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be6b44b5-bcd8-4658-8de5-4de9ee37436e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA2" id="35a0c7c7-8223-4242-9531-a6f531f9c75b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="37ea867d-1a4f-4b6d-9464-8e6b2e1afddc" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="636b1475-c47f-4ba4-843f-97ea036bfca7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="fc13c446-d6bc-480a-997a-df52e0f05bd5" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA2" id="1ae213d9-8fa3-4197-a006-750b59c4b33d">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no scm CTCHA2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 5" id="fb3b80bd-7a7f-42e6-8185-39a737aa387d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>N&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9" disabled="true">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: wishdatetime" disabled="true">
            <con:configuration>
              <token>${#TestCase#ch2Wishdate}&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no proposedatetime">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0016db61-53fc-4bc3-b8ee-00a2fa007ea7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="033e93d6-8260-4704-96f7-c8e16c1555dc" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA2" id="bc07f230-edc3-4030-bf09-c164108c87a0">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA2" id="233e19c1-4e30-4260-b9a7-7d1bf4d9e707">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="5defa40a-3301-4fe5-8096-3618f6fca592" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4567d945-ad97-4022-8313-51f4cdec1f23" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8618002a-d92c-489f-a000-0680d2ca4be3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP" id="f6999980-aa9c-4cb6-9ba2-069de113f0a3">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA and CTCHA(2x)  emails are received
//verify for ${#TestSuite#donor} that hte CTR and CTCH (2x) emails are received.  
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//Get the locator of viewDetails with current dossierID
def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
log.info seleniumHandle.clickObject(byViewDetails);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="382f0628-a907-4d26-b8c4-cc16da45460e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="496451e3-821f-45dd-99e0-c700a09fe438" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="d8966697-5d70-4f32-b980-7c6d35f5e1e4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="1469bcd0-8b34-4249-aded-953adddb4f3c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4e03423e-9d10-42d5-b0c6-926926c1c8ea" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="9627c8a8-6308-4790-98d4-f0fcbaaa7a2d" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="55902213-0edb-4577-b915-7173cc9bcdda">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cd7e1363-f59a-4d4b-aba5-2539c517c9b7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
import java.util.Random
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.days
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "14-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.18  CTR-CTRA ok-CTCH-CTCHA ok-CTCH-CTCHA blocking-CTP direct" searchProperties="true" id="59c6ee2e-ca21-4857-a1bf-0ba2c31e9ca5" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="dff14026-7410-44ea-92f3-7eae36cf4b1c">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="dd6473fc-f006-4285-aa13-fd540db73af2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");
def switchid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CTD_SWITCHID[1]", "switchId");
log.info("Testcase 3-15 dossierid "+ switchid)</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bd3a759-d9e5-4881-bf60-afe26ef43240" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="e8995244-9b5d-401a-9bd6-7376b00f9c1d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="898f6ddd-45b6-47d5-ba8c-ea06c797ad4c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1f5ec702-17a8-4bc0-9e2e-cb1cc4c0647b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="63efb191-9153-4ed1-a7fd-8b1b7b6c8e65" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="e84b0155-5a74-4c1d-8ec5-8c1df5c6776f">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="565919da-1f67-4d3c-bd61-ae74cf028939">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="55292669-7170-47d8-b025-dea1e40f7cf8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="1630b40c-aa45-469c-a2c7-f76420c38f65" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="dd9c4da1-a0ab-47fb-972c-9d3ec348a654" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="76c8b0d7-cd0e-496b-9aa0-6687f76c4487">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 1" id="fd36b9da-17bc-4265-b2a4-87ffd1c8fa5a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="d33e6e2b-8790-4e68-983a-14454ffacd04" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="cadeb218-6880-4036-b9ff-119d6845cf0b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="f036e147-ccbc-41f9-b779-0aa550d6c18a">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="219a2c71-b882-4eb0-9564-15a8185b9175">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3e5cf6ba-1450-4a0b-ac13-ba6254df54a2" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5ce8f27c-2cdd-4557-b472-221431b64f94" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3cdd08d2-6052-4fe0-96dc-4d739821eba3" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2e18e5ea-acf9-4d6a-bbd1-71f1c077944c" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="b474fe9c-7cfa-4c38-b941-7274c09550dc">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="b275938c-e255-400b-a2b2-1b29bf48342d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8f1a622a-bac0-4897-a2c8-77c0cb43ed83" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="7728515e-9fed-4058-b7cc-ec934c705dae" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f0122e57-e70e-4c91-8cf5-b011ed222510" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="09f9cd94-8ff3-4bd5-b0f8-8b7b6975768c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="220eec1c-2f13-4bb6-9d84-3dcb4782a61c" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="98623e35-1bfb-40fb-9f51-4bf1f189d39c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="888a79b2-df05-4da0-9e76-cc16a09e6603" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="626cc2a6-1725-47f2-8082-be2e34dfb61f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="48be8767-63dd-4b97-bd2e-6b148712f734" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="c9c3f665-02fd-417f-a931-4bae5ef4f761" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b01810f-f835-4f3c-a27f-300efab058aa" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="84877d3c-9b98-49b0-a8a1-22dd943a2bab" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="a9a35b74-4293-4f34-89e3-c928d28b7a55">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="2653ff48-76ff-4fed-abf2-f8ad8ab0a6ab">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Request answer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ed038b67-62f6-4aa2-8b95-f2381a9cc282" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3d127954-12ef-4302-8988-68c72fac206b" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="cf435ef9-3a83-43ac-a6e3-f590db2bd5fa">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="f807f6cc-63e6-473c-b3c0-0d9f73d3e40c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="b0f6f224-4149-48c4-8e93-5fe0362dd8c4" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d4fccf19-3ee8-4122-a391-3c06892f6893" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="3c574ea0-7a28-4f5d-bdd7-a72962ca91f9" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="7e90f565-fced-40da-a0bc-25a2abaac6df">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="09d85c87-b45b-4e9f-8f16-e049988ce534">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3fdace08-47bc-4a9c-bea3-eedf47960e5e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="76fe9c4e-0657-457d-8879-fc63d1b40981">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="ad681b60-0b08-414f-bf9e-288a1e48c297" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b5456586-c432-453b-a69f-e3b44c1545f5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d540113c-ebdf-4ae3-b2f4-27d98208f07b" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="eef4d8c7-2c32-43d1-807d-7301faa9e267">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTCH1")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 3" id="720ec015-2ba5-4cd4-ba2d-0557c83e8f0e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c700e7f-2fe8-4f40-875c-ce91c2e56070" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="94988f7a-7270-44fe-989e-59038fc6f458">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 4" id="bea068d1-9799-48fa-a3db-53584d3476e5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="92c5b2ef-5b3a-45cd-a52f-18a256b11942" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="4eda4b2e-a5ed-45a8-9529-701acae315e7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA-ok" id="6ee2e603-dd00-493e-9181-046b3ba54423">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="308cfcc5-35fa-4fb3-a7fe-e770f1330165">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6ee43c8a-8179-4b8b-99de-a54cad403eea" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ef4fbbec-1996-4949-9882-fda763dcf75b" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="86353aff-c597-49d4-97aa-7f4e6c726ceb" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4d795ad0-f3d1-461c-940d-6fb3388e3857" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="1361ddb1-639a-42ef-8dee-6920d0dd983d">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="b15a575c-e8d3-439e-b1b7-4c7e5eb90043">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="caf0182a-d390-4e84-9360-2bdaacba9e7f" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="ee61ff35-317b-4b00-a8ec-8e19c47ba8e2" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="76186c00-f619-4d8e-85ca-7ca473252c96" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="617fb952-80c4-42ca-8adf-3d963e949bde">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="24432d32-d608-4ada-b297-d55c09095bf9" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="d4e40d30-ef41-4a8b-83e7-2232fc1590e8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3d01c165-e789-4b28-b4ba-3f174e134d4e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="abcde562-4715-4f0b-84b7-04c6e7b06fa8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="c3187f36-a87e-4d67-b276-21ac6f07ff04" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d68c5481-0fc7-4df6-80b8-b4ffd725d1ef" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8e9cd68e-4cc5-4c9f-be8f-33c7d5ab5068" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="801aa34a-6634-43a8-8a93-857905fc3ea8" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA" id="467edafa-8a6c-4c0b-9166-42e69d02220a">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCHA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 5" id="8b658df6-3089-4875-81c3-51bb9552be0d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>N&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: wishdatetime">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no proposedatetime">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ccfc2241-1cdb-4dff-bb24-778613b0f6b6" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b5ee25f5-203e-4bb4-ae9f-1868afb6b0c9" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA" id="5b779b43-d78e-41a4-9fb3-2b4905f9052b">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA" id="bed6d680-28af-4094-83f9-beaf357008c0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="c2706c6f-8d75-4352-8ef1-2ab778814a86" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6384b2e5-d4b6-456b-b24c-48276ee22caa" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="52bc65c0-4c74-4be2-9ede-a621fecefa81" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH2" id="2f9b266f-f5e7-4b9e-b38e-e30d6583e48f">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh2Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH2" id="af755716-861f-45a1-b758-3241f45b9b1d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#guiCh2Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="29b2f9c6-d45e-4755-a0ce-eac4d2021236" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH2" id="30c218f6-cd6e-4676-98fe-02643693f502">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="97ddf65e-f65f-4de4-9a43-6ca72a0d7fc7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="89440c0f-a5bc-4ed4-bec7-38aff57cafec" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e57124f0-3e05-4c9d-b290-1416d9d2e780" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="765926bf-9b3e-4df3-adae-496de429d30b" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH2" id="0c26d59a-02e2-47c0-bfb9-e1c33df9fbbd">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH2" id="ed13f812-c635-4b2b-a507-cb8f1b541c56">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'
order by id asc</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[2]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3068ab63-afe9-4668-849c-2b936393418f" name="Xpath: change 2nd message">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[2]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e1162bd6-7f6d-425b-a169-4abd878fe6e3" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH2" id="9aba2935-e128-40f1-9be7-e79c8375ae0c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH2 1" id="61d5390c-500c-4833-86c2-b479452ac375">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="6f54d1fc-caab-456b-bb0d-12c15a47f12c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="611ee388-def1-4af1-b7cb-f1679d9cedc7" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA blocking" id="2370269e-469f-4293-8dfc-06db3ac4150b">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-05</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>Y</blocking>
<proposeddatetime>${#TestCase#ctcha2ProposedDate}</proposeddatetime>
<note>Change Answer blocking ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcha2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA2" id="c0828f32-6024-405a-8857-dabe3afb0e09">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcha2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4a47a2ab-b9cb-45b9-9295-7c5e50ef9532" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="bd5345ce-6d26-4ec6-9cab-d9c771438a34" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcha2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="db0fa649-c5aa-4291-ba67-5ae76297110c" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="bc4af8c2-0b2d-4e1d-af90-aa8fe5f93ab9" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c61cf3cc-d5b8-4867-825e-dff4bb60de11" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 6" id="0a49154e-eef1-4324-b28d-bd58db5f2781">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA2" id="80c0754f-a2b5-4a9d-af35-45a02d97ec07">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcha2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9e1160c0-68c4-412d-b2de-e51868d40f3e" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="a99e150d-76e6-4663-bdf0-0a1f9e71f3c3" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="80c2c7f0-6718-48cf-8614-cd36d6541e2f" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA2" id="7877fcf0-8d25-48d3-8220-10ff7dbaecdd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="37ed1e90-fb8d-43e4-8bb7-fa93af1395db" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcha2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-blocking" id="898ffd9c-00bf-4980-9b53-8c83f9a30ee8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate">
            <con:configuration>
              <path>//CTD_CTCHA_PROPOSEDDATETIME</path>
              <content>${#TestCase#ctcha2PropDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="5bf5d462-d42e-4eb7-a1db-d438551c84f7" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA2" id="3f2e2e6a-8d70-49bc-8a2f-1d96e8d4d879">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="fd9fe429-e598-406e-a449-645a82bf7f2c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="761caca2-c369-4497-bec8-5d115af7d1c0" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c1a9faba-9790-4eeb-809c-2a55dcac588d" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="40ab28d1-3734-40cd-a1db-4dc0ddf64aa0" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA2" id="b07ba878-1bfc-4a7b-8582-db85ac45f256">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no scm CTCHA2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 6" id="237d7954-17e6-47e4-bff9-7ba82d798fbe">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>Y&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: proposeddate">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no wishdate">
            <con:configuration>
              <token>&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ed02927b-cd35-4694-891f-74f51ff49406" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ed9a6255-0416-47bd-9390-4f424c82386c" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA2" id="aea5624a-6c0e-4e25-9e3e-45765fa6f9ba">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA2" id="f35d9291-1aee-42d2-b9ab-897d40e5326e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="f588bb43-2adc-4520-af08-5327ed857d7b" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="22a4a2f9-6528-4394-a330-8c2d5fb501ea" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="96103092-365e-4741-b166-11107ddf58dd" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP" id="30b7442b-fa42-4099-8432-49795293019f">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA email is received
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//Get the locator of viewDetails with current dossierID
def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
log.info seleniumHandle.clickObject(byViewDetails);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="433eedec-50d1-43a8-9ce2-67d03b3ca5d7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Completed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>f</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="cf0db72b-5d72-4c33-8f3c-9814dac4f61c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="a6ec5598-b638-4418-91d8-0a69207928a5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="e900d3d1-d077-4a27-a503-b214634440dd" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e4e59874-57c1-4bc8-b724-a06bd9653bba" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e8a964ae-fb25-4728-89ea-8f34fa51a15f" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="82ccff54-f1f3-4838-abbc-c3e144d816a7" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTP" id="b50339c8-61b0-4890-94da-94b14dac7b71">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="cc19c486-6001-4be3-b642-2b666f3882de">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7277aa2f-e8ea-44db-b706-7f978734f32d" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bb0084c-3b0b-49e2-a89a-df1a103997ed" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="da51d5ec-f8cf-4d2b-85c1-78acb9c6cf14" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTP" id="87a7da1f-830d-42a5-ae59-772f17bbd801">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP 1" id="afb58dea-b43e-4299-a5a1-2930b10e8957">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="95891cd3-f574-42e6-a17b-4a71fc7bf43b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="CheckMail" id="d9f77fcc-96e0-48ac-a563-c4a14b9ac231" disabled="true">
        <con:description>Check for ${#TestSuite#donor}  ${#TestCase#switchId} 
if emaisl for CTR, CTCH (2x) and CTP have arrived.</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="55740181-9dca-4a19-b5ff-b8c137461508">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 200.seconds
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "15-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="C3.19 CTR-CTRA ok-CTCH-CTCHA ok-CTCH-CTCHA blocking -CTC" searchProperties="true" id="c18adf14-8458-4c48-b975-bf5d3d87f9a6" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="cc66cea8-775a-43d6-8fbc-4a39d2b84f23">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="e1c5a465-b4e3-4d8b-a284-f3ba3900a515">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="b7b10cf0-300d-425c-8ded-dd2cb727eae1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="657534c0-48fb-49eb-aecb-c97fd588a936">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="60348e37-1b59-4849-ab8f-f57a02cfe3b4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="32e35a05-c586-4bea-bd37-e3f17d186c3e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="950bc43c-8af9-43af-9f33-631b5fe95c12" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="3b7a8b2e-6420-4eca-aaf3-6293d516002c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="3797da0f-7fdc-41b0-a27d-58edd9e0b237">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6c5c8756-e9aa-4892-8267-8ad1bf31000b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ec56e512-26de-4288-89c0-dd70c6cafd4f" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="a12447e1-4d81-4b63-b2a8-092e7fb9afc7" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="f4e00ea4-46fa-431c-a5a6-bf9cace3cf9b">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 1" id="2927d8e4-f290-4d0f-b89b-9c06e655be03">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="454ac95c-2a55-4dd6-922f-dd4c2477ff41" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="68e3ff1f-7c58-45c9-9f44-9a7c36f61642" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="ab50cec8-f9ba-4811-b158-fb4f28bfb41c">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="cf5b8271-af52-4d54-a29f-53becdafb149">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="6adb7f19-1129-474d-aff6-2983ec84b8d8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="981c2467-1bbf-4897-99b6-4397706e7a41" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="68035c82-d307-4cc5-91d0-5be3c75bf2b8" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e1e6148b-582b-4931-b476-b18361b2cec0" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="65377001-6950-447f-8880-f05b982f9390">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="9e4b944b-5a56-48e8-9917-692202113949">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="25caea45-cd2b-4695-af19-cc1e96a5a326" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="5066797c-85d5-452e-8616-bf59d9408ff9" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="41dcd039-2f12-47cb-a2fb-d5687426838b" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="76750f91-19b3-4043-8d7b-697a2dc5a2a7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7f0cc596-3a89-4ba2-9a43-98ea2cc22eb0" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="7c210848-484d-4fcd-bef6-04a72133d8dd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>t</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fecee2f4-6018-4cb9-9ba5-bc26713382b2" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="1bfb716c-8fdb-48e0-a12c-caf7a6235b35">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="79147a31-d4bf-40fb-a58e-5310e4367ab8" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="574bc501-120a-4908-b010-f6f094dc7005" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ec6e7081-2a16-4468-afb0-a088dc132617" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="90ee8133-bea3-41be-9c67-1fe046d0f981" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="7705e8a8-28eb-48a9-a658-20b33cb0c17e">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 2" id="fe82ffa9-5578-41da-b336-41b3f00c2ac8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="23f1d523-a83e-4d11-a6f5-b17c0a2f39bd" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="798e9f12-c593-49b2-b7bd-05393eaef0fc" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="e81e0878-dd5d-4463-9daa-2f6e684ee827">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTCH")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="2d78b9c8-7f5a-40fb-b9ed-941810bf94fd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7e970475-02b9-4c7f-a1f3-665169a6076f" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14be091-b057-4eb0-a004-040d372ea524" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="f7fb5af1-2779-4a59-8941-cffbd64b24fb" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH" id="5209e66a-f5d0-419c-baae-8f15d0485840">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh1Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 1" id="ed2b6b83-74cf-48bc-a5ed-44234fc6cf2b">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH" id="960583c8-824a-443a-a606-b1471a39a973">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e267842d-3ff9-4b57-8933-f4543db26940" name="Xpath: CTCH_wishdatetime">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTCH_WISHDATETIME[1]</path>
              <content>${#TestCase#guiCh1Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e6a6376-47e8-4488-a3e3-4295890430ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH" id="f4b20391-a92b-4682-b7b3-981204061267">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=7 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="b1916a4a-a3c0-4040-b443-6708be1bb1be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="fc01f4f8-4e58-4a1a-be25-4101c9ad7094" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="5d6f4e16-c5b3-4a40-82d2-7877b998f266" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH" id="022dbee0-64cd-4b96-9acf-89de7848defb">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no sxm CTCH1")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 3" id="8f81dbd7-f615-4787-8d38-4d54585278b7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: Verify soapversion">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="727baafa-d3ca-4849-9627-f1217698c6c1" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH" id="068cdf7c-7471-4f74-b1f9-ab2793fc6c02">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTR 4" id="861635e4-afc9-4ddd-8721-79bc3e0110e2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c945630f-2975-46e8-a81e-8c5b768e8af3" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="76226e45-1105-4df1-aecd-8531fcf01410" name="Xpath: assert RowCount" disabled="true">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA" id="82cf5eda-5713-4002-ade9-9fb84d5943cf">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#proposedDate}</wishdatetime>
<note>Change Answer sent ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctchaTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 3" id="26382328-c234-4d90-9c47-174c846a948c">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA" id="e566489e-1822-463c-b391-5e326b95ecec">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctchaTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctchaId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f6c05a55-b26f-4bd9-b303-56461538a8a2" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="74a35f65-5182-4f24-98a9-1e5e0391bbd2" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b2830046-1c9f-48e7-8767-c86370a584e3" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b6f9264b-b68d-4956-a328-72471efe5330" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA" id="06663b82-501f-4dfc-a4c0-d0ef821662d8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctchaId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="d0e1985e-6e3e-45cb-b8b0-b45a21f9a2bd" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="fad17aaa-1f6a-4473-b040-bdb4a0c1356f" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="ef40fc78-3f16-48b0-b4bd-96cab5eef295" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA" id="4503f33a-26e0-4ba1-99dd-e3e6a87b5744">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctchaTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="64a67ad5-82d2-4b22-9a8d-02b9ead1c738" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="2fb6578c-865a-470f-aeea-249ec110fc48" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctchaId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 4" id="04d1e0f4-d0c7-42fd-a19f-8e76f2eb4dd9">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA" id="cad47665-ba47-4fcd-bf5c-a5595141b439">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="bd859157-dcc5-4ef6-9e3c-d9b4efb1f01c" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7a0a25ac-22bc-4ade-88cf-3ad103b2398d" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="61dc9e5f-3ad7-4e98-9f5f-8b0dccd9996f" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8b24ceb9-527e-4d95-9878-851d8ce899f8" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctchaDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTCH2" id="e2358a1b-89a9-4b30-95dd-04be099d534b">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser");
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient");
def dossierID = testRunner.testCase.getPropertyValue("switchId");
def proposeddate = testRunner.testCase.getPropertyValue("guiCh2Wd");

def projectName = testRunner.testCase.testSuite.project.name;
def testSuiteName = testRunner.testCase.testSuite.name;
def testCaseName = testRunner.testCase.name;
def testStepName = context.getCurrentStep().getLabel();

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName);

try {
	funcHandle.sendCTCH(seleniumHandle, javaHandle, browser, guiUrl, recipient, dossierID, proposeddate+"T00:00:00");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 8" id="b2d697a8-0f56-47a4-9efa-9b5cdd719639">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCH2" id="168b6028-28bf-45ac-aafd-cc6bf35f7ad3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c735671-36ae-48e4-8841-34f83e3f1b4e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//CTD_CTCH_WISHDATETIME</path>
              <content>${#TestCase#guiCh2Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="969d51b6-e10e-47f7-80a9-4ed0833de28c" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCH2" id="ef0845f5-d7fb-4349-a413-8440b00eec72">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="GroovyScriptAssertion" id="ce6c722a-7076-4bbf-a7e8-f434bb00aec5" name="Script: get wishdate" disabled="true">
            <con:configuration>
              <scriptText>import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ch2wishdate = holder.getNodeValue("//Results[1]/ResultSet[1]/Row[1]/MESSAGE_TYPE.DM_DATETIME[1]")
def string = ch2wishdate.replace(' ', 'T')
messageExchange.modelItem.testStep.testCase.setPropertyValue("ch2Wishdate",string)</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="fa439ceb-dddd-40a6-bcac-30cfea11f6e4" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="7945c8a6-3b24-4cf0-a2fe-39737e6c663e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="ac5c2b3b-a47f-4035-b793-172e3d4164de" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCH2" id="8289b8c3-ad11-4f0a-8032-ca3fa46b3bba">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTCH2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTCH2" id="a6c9dbd4-2e7b-4bbc-aaf2-eb4909285242">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="67905e7c-7c88-42a7-8f5c-cacce2609f38" name="Xpath: Change">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE_TYPE[1]</path>
              <content>Change</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4888e5ec-704e-4f7e-8bbe-ab7f5ddfa202" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCH2" id="0e2742e7-f200-4dbf-910f-95dc338682c7">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTCHA blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCH2 1" id="0267d48c-3a24-4510-bbbb-b16d2d4a5bf6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="b2979c73-8fbf-4655-9423-8c570376a288" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="65d58701-8f00-4f33-b5a2-eda542e8bda2" name="Xpath: assert RowCount" disabled="true">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTCHA blocking" id="982b0556-b3f4-4ff1-98cb-23eb18d9cbf4">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTCHA blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<messageid>${#TestSuite#donor}-${#TestCase#contractid}-05</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<changeanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
<blocking>N</blocking>
<wishdatetime>${#TestCase#ctch2ProposedDate}</wishdatetime>
<note>Change Answer blocking ${#TestSuit#donorSoapVersion} OK, expected ${#TestSuite#soapVersion} </note>
</${#TestSuite#donorSoapVersion}>
</changeanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="GroovyScriptAssertion" id="facd78c0-f429-4837-9e4e-fa25b476d712" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctcha2TransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTCHA2" id="df77e8eb-abf3-4e2a-9737-a6a3c2fee68f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctcha2TransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>change</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0bbbb335-14d0-4529-9e7b-f4ca94e25914" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e7b19e97-c6d5-4be6-89d2-cdb9a58b9bf8" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="52fa79d6-e46b-4ceb-9f70-2b9509257f01" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f87345af-1216-491b-b562-1a005a348a5e" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="0ff54f8d-a597-48d6-aecd-31ff5aadeaa0" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctcha2Id");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 6" id="a615dcf6-2245-4d86-a7a7-43e7115c9d21">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTCHA2" id="4cce24d1-2a70-4f32-b481-99a54183b736">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctcha2Id}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="67a50163-9088-4468-b56c-92f6a123a3cb" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="dbbceb38-6519-4fc9-8a16-860f1dc19242" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="efca98f8-6a7d-433b-a407-6923ea2469ea" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTCHA2" id="2d1d7aa1-9111-4ad8-8d21-2cf114a38948">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctcha2TransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="5d28564c-1c11-4f78-916d-90a5eb8a9710" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctcha2Id}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTCHA-ok" id="e363fe34-5899-4ee7-9b32-6907e853cc88">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Change Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="4af92388-a37c-4a65-85cf-74ead546b477" name="Xpath: ctcha proposedatetime">
            <con:configuration>
              <path>//CTD_REQUESTEDDATETIME</path>
              <content>${#TestCase#guiCh2Wd} 00:00:00</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6b9caffd-e000-4ab7-8e99-008e377ec8e9" name="Xpath: requestedate" disabled="true">
            <con:configuration>
              <path>//CTD_CTCHA_PROPOSEDDATETIME</path>
              <content>${#TestCase#cWishDate}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be6b44b5-bcd8-4658-8de5-4de9ee37436e" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTCHA2" id="8461a462-9b41-4fec-98c3-d051e0401c5d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=9 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="37ea867d-1a4f-4b6d-9464-8e6b2e1afddc" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="60aeb9e2-e7be-46aa-a6da-1335dae293c7" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="77429694-6e22-4aa7-86b4-8588ef0ecabe" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="cb1782c7-da24-4d34-90ac-8bcc815503c2" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTCHA2" id="5c4cdf99-2110-4f93-a52c-ba9c9f2f3566">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC Request-check no scm CTCHA2")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 5" id="43b06e97-cc97-4841-adbd-c666639d03a4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where 
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%&lt;blocking>N&lt;/blocking>%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="639000c6-458a-49b5-99b6-0384c7173b2a" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="d469bbc6-672b-4bb0-b643-aba122a2e2c8" name="Contains: wishdatetime">
            <con:configuration>
              <token>${#TestCase#ch2Wishdate}&amp;lt;/wishdatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="5cfb22ae-1b02-4152-96f0-ff18cd894bca" name="NotContains: no proposedatetime">
            <con:configuration>
              <token>&amp;lt;/proposeddatetime&amp;gt;</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0016db61-53fc-4bc3-b8ee-00a2fa007ea7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="033e93d6-8260-4704-96f7-c8e16c1555dc" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTCHA2" id="25e7297b-488e-4355-b7c7-88881b2c0a98">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTCHA2" id="848936d7-fe58-4707-8899-14085ae50c6e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Change answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="Simple NotContains" id="5defa40a-3301-4fe5-8096-3618f6fca592" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4567d945-ad97-4022-8313-51f4cdec1f23" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="8618002a-d92c-489f-a000-0680d2ca4be3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTC" id="8d95314e-c31e-4b39-abb9-cfcd4e6533db">
        <con:settings/>
        <con:config>
          <script>//Please send Cancel for ${#TestCase#switchId}
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
log.info seleniumHandle.clickObject("HomePage","CancelMenu");
//GetDossierLocator
def switchidLocator =  seleniumHandle.byLocator("HomePage","CancelRequestDossierID", switchId);
//Click On DossierRecord
log.info seleniumHandle.clickObject(switchidLocator);
//Enter performed note
log.info seleniumHandle.enterData("HomePage","CancelRequestCancelNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","CancelRequestCancelNoteButton")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 7" id="cba992db-6a84-4e22-9bdb-c6c99f4fa262">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTC" id="88b9f4a9-07b9-40d2-b5ce-c84610144de9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=11 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="1846bd70-ede9-4406-b758-7f23241ac3aa" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="220906d2-3bba-40b3-ac2c-0b13952d085e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e5c7b0de-db95-4f7e-a428-5e4d7c6dcc33" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctcDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTC" id="5a9bb6c4-1610-4f58-bed0-085cfc957cad">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Cancel</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Cancelled</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e5674e64-b285-4e2d-b343-7a640c978165" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTC" id="3815c6d9-ef08-4b3d-81b6-ca92e0c36c8a">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
	testRunner.gotoStepByName( "JDBC _SXM Table_NoRecord CTC")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTC" id="354aa02c-d8d1-4214-be7e-7f29c76ab508">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3e6d13cd-db91-453a-b133-3482c556c87c" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="11ea6756-4d66-4e9b-8fdd-1174a9ba181b" name="Xpath: soap verson">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f14f60c8-81d7-41d5-b77f-79114ea85e64" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="b3bb5a3c-6664-4d19-bf4c-3acea9c8ba09" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTC" id="73dfdd13-41bc-469c-96fc-64ff38233335">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTC 1" id="c135a378-d9d0-4f24-b946-1e83b95a1927">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Cancel'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="d71d4bce-938f-48bf-ba21-93c08b8f00cf" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;SXM_XML_MESSAGE_TYPE>Performed&lt;/SXM_XML_MESSAGE_TYPE></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple NotContains" id="4880fe0a-4e68-405d-a3eb-797bbd832eb2" name="NotContains: no rows">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="02a2c5a8-0d80-4f36-88de-c5ad753114a5" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="50e66542-7ffa-4357-83c7-2e181a88c4ea">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
import java.util.Random
def today = new Date() 
def now = today.format("yyyy-MM-dd'T'HH:mm:ss")
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.days
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def cwishdatestr = wishdate.format("yyyy-MM-dd' 'HH:mm:ss")
def guiwishdate = wishdate.format("yyyy-MM-dd")
//ctch wish date
def proposeddate = today
use(TimeCategory) {
	   proposeddate = proposeddate + 2.days
}
def proposeddatestr = proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def propdatestr = proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich1wd = proposeddate.format("yyy-MM-dd")
// chch2 proposeddate for OK
def ctch2proposeddate = today
use(TimeCategory) {
	   ctch2proposeddate = ctch2proposeddate + 3.days
}
def ctch2proposeddatestr = ctch2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctch2propdatestr = ctch2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
def guich2wd = ctch2proposeddate.format("yyyy-MM-dd")
// ctcha2 proposeddate for blocking
def ctcha2proposeddate = today
use(TimeCategory) {
	   ctcha2proposeddate = ctcha2proposeddate + 4.days
}
def ctcha2proposeddatestr = ctcha2proposeddate.format("yyyy-MM-dd'T'HH:mm:ss")
def ctcha2propdatestr = ctcha2proposeddate.format("yyyy-MM-dd' 'HH:mm:ss")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("cwishDate",cwishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdate)
testRunner.testCase.setPropertyValue("ctcha2ProposedDate",ctcha2proposeddatestr)
testRunner.testCase.setPropertyValue("ctcha2PropDate",ctcha2propdatestr)
testRunner.testCase.setPropertyValue("proposedDate",proposeddatestr)
testRunner.testCase.setPropertyValue("propDate",propdatestr)
testRunner.testCase.setPropertyValue("guiCh1Wd",guich1wd)
testRunner.testCase.setPropertyValue("ctch2ProposedDate",ctch2proposeddatestr)
testRunner.testCase.setPropertyValue("ctch2PropDate",ctch2propdatestr)
testRunner.testCase.setPropertyValue("guiCh2Wd",guich2wd)
String contractId = funcHandle.getRandomString(9, "14-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:properties>
      <con:property>
        <con:name>PollTime</con:name>
        <con:value>2000</con:value>
      </con:property>
      <con:property>
        <con:name>TimestampNOW</con:name>
        <con:value>${=String.format('%tFT%&lt;tT', new Date())}</con:value>
      </con:property>
      <con:property>
        <con:name>maxDays</con:name>
        <con:value>90</con:value>
      </con:property>
      <con:property>
        <con:name>maxBusinessDays</con:name>
        <con:value>120</con:value>
      </con:property>
      <con:property>
        <con:name>lineNumber</con:name>
        <con:value>0</con:value>
      </con:property>
      <con:property>
        <con:name>testdatafile</con:name>
        <con:value>testrecipientgui.csv</con:value>
      </con:property>
      <con:property>
        <con:name>browser</con:name>
        <con:value>firefox</con:value>
      </con:property>
    </con:properties>
    <con:setupScript>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
import org.apache.commons.lang.RandomStringUtils
import groovy.time.TimeCategory
import nl.coin.Selenium.*;
def directory = groovyUtils.projectPath + "/"
System.setProperty("projectfiledir", directory)
def seleniumHandle = new SeleniumActions();
def funcHandle = new ReadymadeFunctions();
def Line = funcHandle.getTestDataAndIncreaseLinenumber(testSuite, directory);
//Split the first line into a string array and assign the array elements to various test case properties
String[] propData = Line.split(";")
funcHandle.setRecipientAndDonorSoapCredentials(seleniumHandle, testSuite, directory, propData[0], propData[1]);
testSuite.setPropertyValue("soapVersion",propData[2])
testSuite.setPropertyValue("dossierType",propData[3])
testSuite.setPropertyValue("compensationOK",propData[4])
testSuite.setPropertyValue("recSoap",propData[5])
import groovy.sql.Sql;
def  con = funcHandle.createDBConObject(testSuite);
def recepientDetails = funcHandle.setProperty4mDB(testSuite, con, "select spr_code, it_interface_type,business_gui_only from overstappen.service_provider inner join overstappen.interface_type on service_provider.spr_request_it_id = interface_type.id where service_provider.spr_code = '"+ propData[0]+"'", ["business_gui_only", "it_interface_type"] as String[], ["recipientbgo", "recipientif"] as String[]);
def donorDetails = funcHandle.setProperty4mDB(testSuite, con, "select spr_code, it_interface_type,business_gui_only from overstappen.service_provider inner join overstappen.interface_type on service_provider.spr_request_it_id = interface_type.id where service_provider.spr_code = '"+ propData[1]+"'", ["business_gui_only", "it_interface_type"] as String[], ["donorbgo", "donorif"] as String[]);
testSuite.setPropertyValue( "recBusGuiOnly" , recepientDetails[0])
testSuite.setPropertyValue( "businessGuiOnly" , donorDetails[0])
def donorsoap = funcHandle.getDonorSoapVersionS2SAndSetProperty(testSuite, donorDetails[1], propData[3], "donorSoapVersion");
def donorbusiness = funcHandle.getDonorDossierTypeS2SAndSetProperty(testSuite, donorDetails[1], propData[3], "donorDossierType");
def donorMessage = funcHandle.getMessageTypeAndSetProperty(testSuite, donorDetails[1], propData[3], donorDetails[0], "donorMessage");
def recmsg = funcHandle.getMessageTypeAndSetProperty(testSuite, recepientDetails[1], propData[3], recepientDetails[0], "recipientMessage");
funcHandle.setProperty4mDB(testSuite, con, "select id from overstappen.service_provider where spr_code='"+ propData[0]+"'", "id", "recipientId")
funcHandle.setProperty4mDB(testSuite, con, "select id from overstappen.service_provider where spr_code='"+ propData[1]+"'", "id", "donorId");
funcHandle.getOutgoingMsgTypeAndSetProperty(testSuite, propData[3], recepientDetails[0], recepientDetails[1], "donorOutMsg");
funcHandle.getOutgoingMsgTypeAndSetProperty(testSuite, propData[3], donorDetails[0], donorDetails[1], "recipientOutMsg");
con.close()</con:setupScript>
    <con:tearDownScript/>
    <con:reportParameters/>
  </con:testSuite>
  <con:testSuite name="3.3.3_Testing_Settings_GUI_Recipient" id="3e2213ec-160f-4190-9e5c-5ec65300293a">
    <con:description>Sequential</con:description>
    <con:settings>
      <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
      <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">true</con:setting>
    </con:settings>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CTR-CTRA blocking 99_SetValidationTrue" searchProperties="true" id="0bbf874b-7532-4edb-a7f3-f4e7be7619d0" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR_NumberSeriesValidationCheck" id="27a76c10-819a-4dac-9b41-a2b766b33e7f">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

def verification = false;
try {
	verification = funcHandle.sendFailCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, null, null, null, null, null, null, false, null, null, null, null, "123", "123", "Numberseries doesn't match to the regex format");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}

assert verification == true</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="d6a8206f-f8c6-453b-a04f-b6a6f56baa63">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, dossierType, "COIN", "1389SS", "99999", null, false, contractId, null, wishDate, null, "0173112233", "0173112233");

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="c565de6e-547e-48cd-a48b-9f2444cce60a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e4415146-698e-4844-be0a-cf0f5018f1ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="bc8a0027-0dcb-4a47-aff9-94bd7c19524c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="f116fa6a-8895-4986-b1aa-446d9e201909" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="aca0adf0-394d-419d-b52e-ee7534d0fe5d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3edf1d17-e757-4a84-8b10-b4ef7741fe2b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="2a6c4580-9127-4582-bdb7-f5082ef3ba6a" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="57c1f55e-1aa0-4056-8545-2964672e2c8c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "Wait For send Poller")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="ac8670bf-6a9f-4110-bf7d-e81846ca742c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac0e5b22-e677-48b9-afc6-8f2331fc9f07" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="bc6cefa8-7aa6-4de5-afef-8bcdc506f545" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e38526ad-5bf0-4755-8b82-90ec10384a13" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="80d98f9a-893d-43e3-a2fe-c58eed310915">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For send Poller" id="af977647-d7a5-47d0-b870-43f63609d7e7">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_NoSend" id="ccfc93b6-e02a-4ed5-b092-b518aefa3c38">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and st_message like '%${#TestCase#switchId}%'</con:query>
          <con:assertion type="JDBC Status" id="cc45d6ef-2316-4378-b582-f321b46f2cc1" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="9dc2a7bb-7c16-4bd1-980b-734fceb80acc" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-blocking" id="8b55c02d-53f4-47c0-b44d-54b35660c1fc">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>Y</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>99</blockingcode>
<note>Request Answer blocking ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="580600ce-eb97-4335-b4ce-76df079cf292">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0dee71a3-a935-4b06-b972-c813e5f4ada7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="87a46e1b-6abd-40e9-93d7-879cd5d80622" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fe92eb90-8575-4ba4-8bb8-62355e7b99e1" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="62a39dc6-77ee-41a5-89bb-452f2cf60f3b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="dc76ca81-36be-4ead-9624-ba31bf916b6c">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="1bda3a5e-a6df-4a2b-8763-ec4af99f283b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4d48a085-3f43-46c6-8810-e8e94ec93ff3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b58743e7-0a55-4986-8e86-afa8533ab867" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="84fa466a-fcf7-4c5c-a3bf-4bca18969fee" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="9e2c6b68-9d77-4ae5-986f-53d0905eaec5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="de7dd802-8f79-48c8-911b-6b11ee6d662f" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="c786d52a-60e0-4e6b-9918-5db068da268c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Blocked</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be12c6b7-e826-4a58-b4c4-a5ec955b7f46" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="9950f8da-648d-4d26-b0d5-6280d7fcc819">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="da663a2e-7feb-471a-9c29-84be65f04692" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="212ef293-cfa9-4a8b-b970-711abd7fd3ab" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="84f76fa6-6ab3-44b4-8ffb-39b6ccec0034" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="80fe0543-d681-45eb-91ea-2fd20c982023" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="bd0b65b8-108a-4b15-80db-9d291a1e89f9">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 1" id="7bd74008-8f7d-43fd-9eec-ec4b21a03e4f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1f3a2336-d8af-4fcc-a5e5-e834c9de3bb1" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="15efa522-b0f6-499f-9adf-dd1f09fb7588" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="faffb173-5f54-435b-8948-d208ec7b174c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="f8f0bb59-5654-49ba-be84-7232c274fa7f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7c2ead04-db2e-4ede-b16b-85c280699784" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7a60508b-5cbc-4994-8350-5538bcf33f7b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e3c9580b-5332-4fe1-8f7a-98def76fd3d3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="check CTRA email" id="50b5db3c-24b6-4fa5-a00e-bf2b79d2ca78" disabled="true">
        <con:description>Please check for ${#TestSuite#recipient} that the CTRA email is received
for ${#TestCase#switchId}</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="68b1a4a7-2fde-4a84-8a21-c3c0af43a1d5">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def guiwishdatestr = wishdate.format("yyyy-MM-dd")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdatestr)
String contractId = funcHandle.getRandomString(9, "1-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CTR-CTRA blocking 99_SetValidationFalse" searchProperties="true" id="824bbf75-70f6-4d2f-91b4-d721b2f1b242" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR_NumberSeriesValidationCheck" id="97125a56-b623-47b9-9353-699fdcc5a765">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

def verification = false;
try {
	verification = funcHandle.sendFailCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, null, null, null, null, null, null, false, null, null, null, null, "123", "123", "Numberseries doesn't match to the regex format");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}

assert verification == true</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="ea073872-d2b5-45dd-8bbe-bcbb6b9e35df">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, dossierType, "COIN", "1389SS", "99999", null, false, contractId, null, wishDate, null, "123", "123");

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="30d57b44-8a77-407b-83fe-e934ef58b946">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e4415146-698e-4844-be0a-cf0f5018f1ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="e4e8910d-e1f2-4100-8376-3bd8c725eb49">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="f116fa6a-8895-4986-b1aa-446d9e201909" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="aca0adf0-394d-419d-b52e-ee7534d0fe5d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3270f354-9720-466b-aad6-c7843c9731a0" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="2e05b924-dac3-4750-a887-b652dd63bb2a" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="64cdce34-bea3-4323-9f00-61688614153d">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "Wait For send Poller")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="4b858143-07f3-4eee-a969-327aefe90020">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac0e5b22-e677-48b9-afc6-8f2331fc9f07" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="bc6cefa8-7aa6-4de5-afef-8bcdc506f545" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e38526ad-5bf0-4755-8b82-90ec10384a13" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="01067b22-5a20-4889-bb2b-f2cbc82cca77">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For send Poller" id="6794631e-d3f3-4487-a2e0-b9d3836519b9">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_NoSend" id="f7105a46-f74b-48fa-afa0-d3264a454e27">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and st_message like '%${#TestCase#switchId}%'</con:query>
          <con:assertion type="JDBC Status" id="cc45d6ef-2316-4378-b582-f321b46f2cc1" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="9dc2a7bb-7c16-4bd1-980b-734fceb80acc" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-blocking" id="743d18df-b144-454a-a9b8-cf3b9aa76825">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>Y</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>99</blockingcode>
<note>Request Answer blocking ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="cddc64a5-bd13-4249-b9d8-0089a664143c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0dee71a3-a935-4b06-b972-c813e5f4ada7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="87a46e1b-6abd-40e9-93d7-879cd5d80622" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fe92eb90-8575-4ba4-8bb8-62355e7b99e1" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="62a39dc6-77ee-41a5-89bb-452f2cf60f3b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="f234237d-aaeb-4508-9910-93c67b717866">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="ad284915-bc07-440b-b94f-4e9e3b8f7363">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4d48a085-3f43-46c6-8810-e8e94ec93ff3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b58743e7-0a55-4986-8e86-afa8533ab867" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8d3dd667-499c-471e-92a0-c9304647b3f4" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="f415f875-817f-4b85-8790-ace4adb443d8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="de7dd802-8f79-48c8-911b-6b11ee6d662f" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="3cff4b9c-0fbc-4f17-8224-28e29ec6dd5a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Blocked</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be12c6b7-e826-4a58-b4c4-a5ec955b7f46" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="68143943-f8a3-4f60-b1c5-55a77a1de185">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="da663a2e-7feb-471a-9c29-84be65f04692" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="212ef293-cfa9-4a8b-b970-711abd7fd3ab" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="426c2486-38c8-40a4-996f-879c325b3271" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="4a77d99c-d08e-4a60-8ac4-bd8ac79dedd1" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="a6a23f66-3e49-41be-9879-9d05e647d2ac">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 1" id="518aec18-3ae6-4d91-973b-0fc30b1004f4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1f3a2336-d8af-4fcc-a5e5-e834c9de3bb1" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="15efa522-b0f6-499f-9adf-dd1f09fb7588" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="e4bb7a74-e8d8-4b9e-ba14-733ae952de68">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="26a94828-aec8-491f-9d29-9cf8a40decf1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7c2ead04-db2e-4ede-b16b-85c280699784" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7a60508b-5cbc-4994-8350-5538bcf33f7b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e3c9580b-5332-4fe1-8f7a-98def76fd3d3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="check CTRA email" id="64de427b-51f9-4d38-b18f-447c7b59b632" disabled="true">
        <con:description>Please check for ${#TestSuite#recipient} that the CTRA email is received
for ${#TestCase#switchId}</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="555fe068-22c4-4653-9fb5-b2aad8b603c2">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
     wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def guiwishdatestr = wishdate.format("yyyy-MM-dd")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdatestr)
String contractId = funcHandle.getRandomString(9, "1-");
testRunner.testCase.setPropertyValue("contractId",contractId)
//Update contract id format for donor
import groovy.sql.Sql;
def  con = funcHandle.createDBConObject(testCase);
def query1 = con.execute("update overstappen.parameters set Par_numberrange_check=false")
log.info ("Query result: "+ query1)
con.close()</con:setupScript>
      <con:tearDownScript>//Update contract id format for donor
import nl.coin.Selenium.*;
import groovy.sql.Sql;
def funcHandle = new ReadymadeFunctions();
def  con = funcHandle.createDBConObject(testSuite);
def query1 = con.execute("update overstappen.parameters set Par_numberrange_check=true")
log.info ("Query result: "+ query1)
con.close()</con:tearDownScript>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CTR-CTRA blocking 99_SetValidationTrue_DiffFormat" searchProperties="true" id="b6afb117-61b5-43bf-854f-2058ec4aed8a" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR_NumberSeriesValidationCheck" id="bbc05259-8312-40a6-a950-dde9c1eec1c6">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

def verification = false;
try {
	verification = funcHandle.sendFailCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, null, null, null, null, null, null, false, null, null, null, null, "123", "123", "Numberseries doesn't match to the regex format");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}

assert verification == true</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="6231cc43-9bf3-4977-9e38-aaf949c04f23">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, dossierType, "COIN", "1389SS", "99999", null, false, contractId, null, wishDate, null, "12", "12");

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="d08c5c05-5824-4abd-9ff8-19d985b7c01f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e4415146-698e-4844-be0a-cf0f5018f1ae" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="9a94f546-0675-4d9c-8674-d90dc4a97b4f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="f116fa6a-8895-4986-b1aa-446d9e201909" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="aca0adf0-394d-419d-b52e-ee7534d0fe5d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ab0332d8-16dd-426a-9e61-1a39ee6684b1" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="6910aafd-0dc1-4406-8292-d58381ea656d" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="b418e24c-b37c-4983-932b-366060ffa488">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "Wait For send Poller")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="204c7d89-365c-4062-a751-f730283ee55d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac0e5b22-e677-48b9-afc6-8f2331fc9f07" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="bc6cefa8-7aa6-4de5-afef-8bcdc506f545" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e38526ad-5bf0-4755-8b82-90ec10384a13" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="f3cd6790-e769-441d-8d03-fe31d6f6839d">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For send Poller" id="d1447b38-6417-4b85-a0e8-84ce3693efb5">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_NoSend" id="39749c16-bad5-4b76-984d-878787d9bbf2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and st_message like '%${#TestCase#switchId}%'</con:query>
          <con:assertion type="JDBC Status" id="cc45d6ef-2316-4378-b582-f321b46f2cc1" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="9dc2a7bb-7c16-4bd1-980b-734fceb80acc" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-blocking" id="e8598958-e771-4f20-b2f3-d9716cfd57f5">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>Y</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>99</blockingcode>
<note>Request Answer blocking ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="df03822e-a2a5-4f10-a7e8-3b5c85742547">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0dee71a3-a935-4b06-b972-c813e5f4ada7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="87a46e1b-6abd-40e9-93d7-879cd5d80622" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fe92eb90-8575-4ba4-8bb8-62355e7b99e1" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="62a39dc6-77ee-41a5-89bb-452f2cf60f3b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="f6aaa415-5d6b-481f-8631-b9c1d613bd26">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="b4d6cc6d-4ecb-40ce-b449-213ca89fc26e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4d48a085-3f43-46c6-8810-e8e94ec93ff3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b58743e7-0a55-4986-8e86-afa8533ab867" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="33690132-62d7-48fc-857e-390ba436cb9d" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="c8d4afe7-2001-4379-8430-c7503571b1d8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="de7dd802-8f79-48c8-911b-6b11ee6d662f" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="fc3a52fd-06f9-49b4-9f14-7514058f9344">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Blocked</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be12c6b7-e826-4a58-b4c4-a5ec955b7f46" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="01c33ded-47b3-4c2f-b162-5089c40edb87">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="da663a2e-7feb-471a-9c29-84be65f04692" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="212ef293-cfa9-4a8b-b970-711abd7fd3ab" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3e62690d-d61e-4b7a-ad87-012fb92d5b04" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="5c7747d5-3a72-4e37-8130-83b0ad01f757" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="d05a69a7-ba18-448c-a5c5-63d4c5e4f9f6">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 1" id="5a4c1431-0832-4120-83b4-fec1a122c77e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1f3a2336-d8af-4fcc-a5e5-e834c9de3bb1" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="15efa522-b0f6-499f-9adf-dd1f09fb7588" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="083ad15a-0855-404c-b26e-a27ad99f9783">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="1a84639c-148c-4056-b303-9834018e7a35">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7c2ead04-db2e-4ede-b16b-85c280699784" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7a60508b-5cbc-4994-8350-5538bcf33f7b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e3c9580b-5332-4fe1-8f7a-98def76fd3d3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="check CTRA email" id="79e88a41-4e3f-4d62-bd36-f44370841069" disabled="true">
        <con:description>Please check for ${#TestSuite#recipient} that the CTRA email is received
for ${#TestCase#switchId}</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="ade7eeeb-edfe-4794-acc0-e5fadd0d51d6">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def guiwishdatestr = wishdate.format("yyyy-MM-dd")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdatestr)
String contractId = funcHandle.getRandomString(9, "1-");
testRunner.testCase.setPropertyValue("contractId",contractId)
//Update contract id format for donor
import groovy.sql.Sql;
def  con = funcHandle.createDBConObject(testCase);
def query1 = con.execute("update overstappen.parameters set Par_numberrange_check=true")
log.info ("Query result: "+ query1)
def query2 = con.execute("update overstappen.parameters set Par_numberrange_regex='\\d{0,2}+'")
log.info ("Query result: "+ query2)
con.close()</con:setupScript>
      <con:tearDownScript>//Update contract id format for donor
import nl.coin.Selenium.*;
import groovy.sql.Sql;
def funcHandle = new ReadymadeFunctions();
def  con = funcHandle.createDBConObject(testSuite);
def query1 = con.execute("update overstappen.parameters set Par_numberrange_check=true")
log.info ("Query result: "+ query1)
def query2 = con.execute("update overstappen.parameters set Par_numberrange_regex='(091\\d{7})|(0[8-9]\\d{9,10})|(0[1-8]\\d{8})|(0[1-9]\\d{6})'")
log.info ("Query result: "+ query2)
con.close()</con:tearDownScript>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CTR-CTRA ok-CTP buffering_ParCTPBufferingFALSE" searchProperties="true" id="ca400a6f-c315-40fc-8175-e78e309da9f4" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="17a9ecac-e763-4982-b567-660a1a2e317d">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="674285ee-139e-44f2-ac24-6d1055beac31">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="bc7d5e6d-e2ce-4678-961a-4bed06c24de5" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="ae443221-fcdc-4b73-a357-7ceb22bf37e1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="e16c88de-a3d8-4bbf-9708-469b40ddcde5" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ad2413a1-67a3-4611-97ac-8151f4b170d6" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="942c1761-b29b-464b-8965-6b619ff94ebf" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="0638d876-0578-4240-8a8a-9cbc26e62d47">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_ST Table_NoSend_CTR")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="5010629b-aa3c-45ad-8eb0-2080a7a03f6b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="58dd4262-1e01-4085-8f11-e8800c5d88be" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0e28d734-e392-4f26-9c0f-eb6f0b7d6abf" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9d984b35-fec5-4420-985a-d949389686fb" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="93c2f34d-103b-411b-aefa-16acd778a7f8">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-ok")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_NoSend_CTR" id="ce071079-8ff1-406f-ae78-590bd3588699">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and st_message like '%${#TestCase#switchId}%'</con:query>
          <con:assertion type="JDBC Status" id="cc45d6ef-2316-4378-b582-f321b46f2cc1" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="9dc2a7bb-7c16-4bd1-980b-734fceb80acc" name="NotContains: Not Contains" disabled="true">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-ok" id="2f667d28-9bd8-4aa4-ac4b-9933f6d6c4bb">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-ok" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#donor}-${#TestCase#ContractId}-02</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#SwitchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>N</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>0</blockingcode>
<note>Request Answer OK ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="b99da946-73f0-4cab-959c-642d8d68ce34">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="f768c42d-88e9-41c9-a0b2-8d05cd171719" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9155beb2-508d-4306-8bfd-4e9e85cdafb7" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ad16e040-b3cc-42da-b28e-88ef0a648479" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b12f671e-b338-4683-b415-be81a185763f" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="c69fc174-47ff-4366-8b34-bf3268d62338">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="69a48ce8-3b30-43af-8c89-52f6a5fb3329">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="9569e434-49ab-4e45-a050-80ba0e196e2b" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="cdb4ab0d-32f0-4676-9d1f-90b5597e6307" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="53c162f2-9435-42f8-bb58-99ef33b855a3" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="2c82f1a2-c5a2-4437-806b-ff7186a9f6eb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="0698abb2-b5fd-487f-b97c-78ded47ab78d" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="b64de7ba-ab71-4daa-a78e-aed05f0dc2fd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer OK</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/CONTRACT_TERMINATION_DOSSIER.MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f7e313a5-ef5e-4f86-9240-a10a978a2c21" name="Xpath: Verify ctp_buffering">
            <con:configuration>
              <path>//CTD_CTP_BUFFERING</path>
              <content>f</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e40439fd-a28d-447c-b44d-3fb2c6ef4dea" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="ad8c12b4-2577-4ade-aab8-d788e771eeb2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="aee83c84-1f40-4d13-a66d-1b6209582295" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="d53ba6f3-831f-4961-a4f2-a1f4e5790824" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="3eb274cd-719f-4958-ba31-db1d9349900b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="321209fa-635c-42fa-b135-aa9e5a38721e" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="53eaa23f-1c12-49f9-acb9-b7211b082f4c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTRA" id="5f16fa41-3409-434d-8c02-8bc10982c710">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9" disabled="true">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match" disabled="true">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="81ff77ff-f8eb-43aa-b40d-42cb951150d9" name="Xpath: soapversion" disabled="true">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="8e149e04-50b1-46af-b467-8b543fca4616" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="df0083ba-0e82-40a8-aca1-00a4c7a65d21">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="b64e0e93-4027-4fcd-98c0-1b56ca654157">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="b6d5ae98-57ce-4e00-9ffd-14dd43eb4e5f" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="043760f7-0e54-48ca-ac4e-540aefdf7d3b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="9e6eb0ac-6236-43c5-95f1-c9a11a24dd0d" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTP" id="900a3c04-eac7-4e31-90fa-79cf4e05dc36">
        <con:settings/>
        <con:config>
          <script>//Please send CTP for ${#TestCase#switchId}
//CTRA expected in ${#TestSuite#recipientMessage}, if GUI
//verify for ${#TestSuite#recipient} that the CTRA email is received
import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def switchId = testRunner.testCase.getPropertyValue("switchId")
def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()
log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)
//Open the browser
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def sampleArray = seleniumHandle.getCredentials(recipient)
log.info seleniumHandle.enterData("HomePage","userName", sampleArray[0]);
log.info seleniumHandle.enterData("HomePage","passWord", sampleArray[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");
log.info seleniumHandle.clickObject("HomePage","dossiers");
//Click on Performed menu
//log.info seleniumHandle.clickObject("HomePage","PerformedMenu");
//
//Get the locator of viewDetails with current dossierID
//def byViewDetails =  seleniumHandle.byLocator("HomePage","viewDetailsProper", switchId);
//Click on the view details button
//log.info seleniumHandle.clickObject(byViewDetails);
log.info seleniumHandle.clickObject("HomePage","SearchTab");
log.info seleniumHandle.enterData("HomePage","DossierID",switchId);
log.info seleniumHandle.clickObject("HomePage","SearchButton");
log.info seleniumHandle.clickObject("HomePage","ViewDetailsSearch");
//Enter performed note
log.info seleniumHandle.enterData("HomePage","PerformedNote",switchId);
//click on Send Performed button
log.info seleniumHandle.clickObjectAtLocation("HomePage","SendPerformed")
log.info seleniumHandle.getText("HomePage","resultMessage");
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTP" id="250cff85-543e-42f2-b238-4371522c124d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id = '${#TestCase#ctdId}'</con:query>
          <con:assertion type="JDBC Status" id="5d1906d9-833e-4c0e-a60e-6f721ded678c" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of CTD record" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Performed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Completed</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="57872de4-e3eb-4ac6-a875-9146689f119f" name="Xpath: Verify ctd_ctp_buffering">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_CTP_BUFFERING[1]</path>
              <content>f</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTP" id="a5c41f6c-a24f-4989-a7da-deb05b48930c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=5 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="9522087d-47b9-4f57-a36e-06f3b8b0df6e" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="14d4a8a7-5dff-4ba4-b054-e6503da3c01a" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="73efade5-187f-439e-8df9-a1ce737ca608" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctpDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTP" id="4d9c2c3b-a8a2-4e71-89c1-6cd0d069e5ca">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
	    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTP")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTP" id="42e9d27c-94d3-4ffa-9dfa-3efc1fd57f80">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="7277aa2f-e8ea-44db-b706-7f978734f32d" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="51fd96a3-4513-4cad-bcf6-d6992a32c31e" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="3e7cbf73-7d82-4df5-b08b-3731c5fee234" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="ba3f858d-dd6d-4c25-8181-f5a41e9e0882" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTP" id="04ae3c9d-6519-437f-a637-19d5f4dded4c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTP" id="44ec3f99-58e2-4027-882e-edf385f6b6b2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message like '%/${#TestSuite#donorSoapVersion}%'
and sxm_xml_message_type = 'Performed'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="JDBC Status" id="c475aacc-95de-4284-a9f8-4767c70e9910" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="395ced67-d7a4-4a45-b07e-276fbec0bf75" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="8ef0f7fc-2275-4279-8e5d-e2507b99e606">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
import java.util.Random
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
         wishdate = wishdate + 1.days	  
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def guiwishdatestr = wishdate.format("yyyy-MM-dd")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdatestr)
String contractId = funcHandle.getRandomString(9, "2-");
testRunner.testCase.setPropertyValue("contractId",contractId)
//Update contract id format for donor
import groovy.sql.Sql;
def  con = funcHandle.createDBConObject(testCase);
def query1 = con.execute("update overstappen.parameters set Par_ctp_buffering = false")
log.info ("Query result: "+ query1)
con.close()</con:setupScript>
      <con:tearDownScript>//Update contract id format for donor
import nl.coin.Selenium.*;
import groovy.sql.Sql;
def funcHandle = new ReadymadeFunctions();
def  con = funcHandle.createDBConObject(testSuite);
def query1 = con.execute("update overstappen.parameters set Par_ctp_buffering = true")
log.info ("Query result: "+ query1)
con.close()</con:tearDownScript>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:properties>
      <con:property>
        <con:name>PollTime</con:name>
        <con:value>5000</con:value>
      </con:property>
      <con:property>
        <con:name>TimestampNOW</con:name>
        <con:value>${=String.format('%tFT%&lt;tT', new Date())}</con:value>
      </con:property>
      <con:property>
        <con:name>maxDays</con:name>
        <con:value>90</con:value>
      </con:property>
      <con:property>
        <con:name>maxBusinessDays</con:name>
        <con:value>120</con:value>
      </con:property>
      <con:property>
        <con:name>lineNumber</con:name>
        <con:value>0</con:value>
      </con:property>
      <con:property>
        <con:name>testdatafile</con:name>
        <con:value>testrecipientgui.csv</con:value>
      </con:property>
      <con:property>
        <con:name>browser</con:name>
        <con:value>firefox</con:value>
      </con:property>
    </con:properties>
    <con:setupScript>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
import org.apache.commons.lang.RandomStringUtils
import groovy.time.TimeCategory
import nl.coin.Selenium.*;
def directory = groovyUtils.projectPath + "/"
System.setProperty("projectfiledir", directory)
def seleniumHandle = new SeleniumActions();
def funcHandle = new ReadymadeFunctions();
def Line = funcHandle.getTestDataAndIncreaseLinenumber(testSuite, directory);
//Split the first line into a string array and assign the array elements to various test case properties
String[] propData = Line.split(";")
funcHandle.setRecipientAndDonorSoapCredentials(seleniumHandle, testSuite, directory, propData[0], propData[1]);
testSuite.setPropertyValue("soapVersion",propData[2])
testSuite.setPropertyValue("dossierType",propData[3])
testSuite.setPropertyValue("compensationOK",propData[4])
testSuite.setPropertyValue("recSoap",propData[5])
import groovy.sql.Sql;
def  con = funcHandle.createDBConObject(testSuite);
def recepientDetails = funcHandle.setProperty4mDB(testSuite, con, "select spr_code, it_interface_type,business_gui_only from overstappen.service_provider inner join overstappen.interface_type on service_provider.spr_request_it_id = interface_type.id where service_provider.spr_code = '"+ propData[0]+"'", ["business_gui_only", "it_interface_type"] as String[], ["recipientbgo", "recipientif"] as String[]);
def donorDetails = funcHandle.setProperty4mDB(testSuite, con, "select spr_code, it_interface_type,business_gui_only from overstappen.service_provider inner join overstappen.interface_type on service_provider.spr_request_it_id = interface_type.id where service_provider.spr_code = '"+ propData[1]+"'", ["business_gui_only", "it_interface_type"] as String[], ["donorbgo", "donorif"] as String[]);
testSuite.setPropertyValue( "recBusGuiOnly" , recepientDetails[0])
testSuite.setPropertyValue( "businessGuiOnly" , donorDetails[0])
def donorsoap = funcHandle.getDonorSoapVersionS2SAndSetProperty(testSuite, donorDetails[1], propData[3], "donorSoapVersion");
def donorbusiness = funcHandle.getDonorDossierTypeS2SAndSetProperty(testSuite, donorDetails[1], propData[3], "donorDossierType");
def donorMessage = funcHandle.getMessageTypeAndSetProperty(testSuite, donorDetails[1], propData[3], donorDetails[0], "donorMessage");
def recmsg = funcHandle.getMessageTypeAndSetProperty(testSuite, recepientDetails[1], propData[3], recepientDetails[0], "recipientMessage");
funcHandle.setProperty4mDB(testSuite, con, "select id from overstappen.service_provider where spr_code='"+ propData[0]+"'", "id", "recipientId")
funcHandle.setProperty4mDB(testSuite, con, "select id from overstappen.service_provider where spr_code='"+ propData[1]+"'", "id", "donorId");
funcHandle.getOutgoingMsgTypeAndSetProperty(testSuite, propData[3], recepientDetails[0], recepientDetails[1], "donorOutMsg");
funcHandle.getOutgoingMsgTypeAndSetProperty(testSuite, propData[3], donorDetails[0], donorDetails[1], "recipientOutMsg");
con.close()</con:setupScript>
    <con:tearDownScript/>
    <con:reportParameters/>
  </con:testSuite>
  <con:testSuite name="3.3.1_ContractId_Validations_GUI" id="212db53b-1d51-482a-86f1-6e695b0b0684">
    <con:description>Sequential</con:description>
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CTR-CTRA blocking 99" searchProperties="true" id="b5f0954b-1559-4269-8565-c753195d3735" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="CTR_ContractID_WrongFormat" id="3668b0a2-1d57-4292-a7ba-b4c66b52d589">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def recipientCredentials = seleniumHandle.getCredentials(recipient)
def donorCredentials = seleniumHandle.getCredentials(donor)
log.info seleniumHandle.enterData("HomePage","userName", recipientCredentials[0]);
log.info seleniumHandle.enterData("HomePage","passWord", recipientCredentials[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");

//Click on Requests menu
log.info seleniumHandle.clickObject("HomePage","requests");

//Select donor value from the dropdown
log.info seleniumHandle.enterDataSelectDropDown("HomePage","CTRDonor", donorCredentials[2]);

//Select the dossier type value from the drop down
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
if (dossierType == "&lt;business>Y&lt;/business>"){
	log.info seleniumHandle.enterDataSelectDropDown("HomePage","CTRDossier", "Business");
} else {
	log.info seleniumHandle.enterDataSelectDropDown("HomePage","CTRDossier", "Consumer");
}

def DossierIdGui= seleniumHandle.getText("HomePage","CTRSwitchid");
testRunner.testCase.setPropertyValue("switchId",DossierIdGui+'-01');
//Enter name
log.info seleniumHandle.enterData("HomePage","CTRName","COIN");

//Enter ZipCode
log.info seleniumHandle.enterData("HomePage","CTRZipCode","1389SS");

//Enter House number
log.info seleniumHandle.enterData("HomePage","CTRHouseNumber","99999");

//Enter Contract ID
log.info seleniumHandle.enterData("HomePage","CTRContractID","123");

log.info seleniumHandle.clickObject("HomePage","CTRWishDateIcon");

def wishDate = testRunner.testCase.getPropertyValue("wishDate")
def onlyDate = javaHandle.getDateFromFormat(wishDate, "yyyy-MM-dd'T'HH:mm:ss")
log.info onlyDate
def monthYear = javaHandle.convertDateFormat(wishDate, "yyyy-MM-dd'T'HH:mm:ss", "MMMM yyyy")
log.info monthYear
//move calander to required month &amp; year
log.info seleniumHandle.moveCalenderToMonth("HomePage", "CTRWishDateRightIcon", "HomePage", "CTRWishDateCalHeader", monthYear)

//Click on the date
log.info seleniumHandle.clickObject("xpath","//form[@id='sendRequest']//legend[text()='Dossier Data']/following-sibling::div/div/p[label[text()='Wish Date']]/span/span//tbody//a[text()="+onlyDate+"]", true);

//Click on Send CTR button
log.info seleniumHandle.clickObject("HomePage","CTRSendRequest");

def verification = seleniumHandle.verifyText("HomePage","CTRcontractIDError","Contract-Id doesn't match the format(s) specified by the donor provider")
if(!verification) {
	testRunner.fail("Contract id validation not displayed correctly")
}
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="92eca34c-889e-4448-84bf-efab6682af58">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="71414850-8df0-4496-87c5-e8770daf36a6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="JDBC Status" id="e4415146-698e-4844-be0a-cf0f5018f1ae" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="7de10b62-2ef2-4d26-b1af-597063ab5e69">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="f116fa6a-8895-4986-b1aa-446d9e201909" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="aca0adf0-394d-419d-b52e-ee7534d0fe5d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="8c9f6485-3384-46b3-ad83-a0533cf80b56" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="6e9008a7-0466-44fa-959f-c8942c8d1b3c" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="b20740f0-a039-4c57-8f29-db094ec9154a">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "Wait For send Poller")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="18e68a08-d4e3-4885-abe9-395a1c47a8a0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac0e5b22-e677-48b9-afc6-8f2331fc9f07" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="bc6cefa8-7aa6-4de5-afef-8bcdc506f545" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e38526ad-5bf0-4755-8b82-90ec10384a13" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="55569874-6e2f-4635-bd7c-23673ef72753">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For send Poller" id="a5374008-cb25-4bc2-b21a-5d62c9b9e0bc">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_NoSend" id="5feb1f39-466a-403a-bde0-f968344606ed">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and st_message like '%${#TestCase#switchId}%'</con:query>
          <con:assertion type="JDBC Status" id="cc45d6ef-2316-4378-b582-f321b46f2cc1" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="9dc2a7bb-7c16-4bd1-980b-734fceb80acc" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-blocking" id="09cf808c-3f45-4e56-92d8-9747f84d7fd2">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>Y</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>99</blockingcode>
<note>Request Answer blocking ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="bd03505e-fd54-47f8-ab40-a2f9fe8c560e">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0dee71a3-a935-4b06-b972-c813e5f4ada7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="87a46e1b-6abd-40e9-93d7-879cd5d80622" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fe92eb90-8575-4ba4-8bb8-62355e7b99e1" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="62a39dc6-77ee-41a5-89bb-452f2cf60f3b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="0929754b-5e12-4d92-a601-fbed7adfd98b">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="cf714bb2-1442-48c2-84ab-5e510b2ba798">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4d48a085-3f43-46c6-8810-e8e94ec93ff3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b58743e7-0a55-4986-8e86-afa8533ab867" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e3926abc-9e09-45fb-bdcb-8c4cbac2c46e" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="413d2326-52d5-45ff-9617-5a6d6646a0cd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="de7dd802-8f79-48c8-911b-6b11ee6d662f" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="60778c4e-2c22-45d6-8b28-e1f5d0b4edc0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Blocked</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be12c6b7-e826-4a58-b4c4-a5ec955b7f46" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="224b0802-d0e1-41d9-b84e-f44b9e99b293">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="da663a2e-7feb-471a-9c29-84be65f04692" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="212ef293-cfa9-4a8b-b970-711abd7fd3ab" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="9e3ead69-694f-4aa4-85b6-7a66658389c6" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="96e24145-0daf-4eaa-bf7b-934fe223fa7f" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="02888f27-8e9f-470a-8b34-e140ad072aae">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 1" id="c5eae831-400e-4c96-994c-4d2941b589a0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1f3a2336-d8af-4fcc-a5e5-e834c9de3bb1" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#soapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="15efa522-b0f6-499f-9adf-dd1f09fb7588" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="fb0094ab-326c-4d83-aa8a-de51274ec412">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="e7b78a6c-49cd-4d15-8d63-eb59959d5ec6">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7c2ead04-db2e-4ede-b16b-85c280699784" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7a60508b-5cbc-4994-8350-5538bcf33f7b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e3c9580b-5332-4fe1-8f7a-98def76fd3d3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="check CTRA email" id="df06d947-9af8-4f7a-b3c7-cf3c4209e9b4" disabled="true">
        <con:description>Please check for ${#TestSuite#recipient} that the CTRA email is received
for ${#TestCase#switchId}</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="5cfd2a23-f364-469d-bcf7-7602248f1b81">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
      wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def guiwishdatestr = wishdate.format("yyyy-MM-dd")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdatestr)
String contractId = funcHandle.getRandomString(10, "");
testRunner.testCase.setPropertyValue("contractId",contractId)
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
//Update contract id format for donor
import groovy.sql.Sql;
def  con = funcHandle.createDBConObject(testCase);
def query1 = con.execute("update overstappen.service_provider set spr_contract_id_format = '[0-9A-Z]{10}' where spr_code='"+ donor +"'")
log.info ("Query result: "+ query1)
con.close()</con:setupScript>
      <con:tearDownScript>def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
//Update contract id format for donor
import nl.coin.Selenium.*;
import groovy.sql.Sql;
def funcHandle = new ReadymadeFunctions();
def  con = funcHandle.createDBConObject(testSuite);
def query1 = con.execute("update overstappen.service_provider set spr_contract_id_format = '.*' where spr_code='"+ donor +"'")
log.info ("Query result: "+ query1)
con.close()</con:tearDownScript>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CTR-CTRA blocking 99_MultipleCOntractIDFormat_1" searchProperties="true" id="eb8785fc-b853-4f5b-9c5e-cf7e8475abc8" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="741d8f49-f6e6-4827-a6ab-9a4989f64f8e">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="76f02f9c-acf5-4ef5-b821-18837d8048fe">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="JDBC Status" id="e4415146-698e-4844-be0a-cf0f5018f1ae" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="cdac9028-727c-44eb-b505-c018830650fd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="f116fa6a-8895-4986-b1aa-446d9e201909" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="aca0adf0-394d-419d-b52e-ee7534d0fe5d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="c62f537c-80e9-4924-937e-0a95478d4543" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e3bbb2c9-1920-485f-ab85-f41499b7f422" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="9a9010fe-cbfd-4128-9f68-6d2cbec6dd88">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "Wait For send Poller")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="068c7fb4-d57d-40f3-835b-6659b2c5ba09">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac0e5b22-e677-48b9-afc6-8f2331fc9f07" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="bc6cefa8-7aa6-4de5-afef-8bcdc506f545" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e38526ad-5bf0-4755-8b82-90ec10384a13" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="39646806-af72-4b74-b4e4-b365b6ddaf1c">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For send Poller" id="d32135c1-7a3a-4883-bed6-384ec78cf579">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_NoSend" id="2313de81-ecd4-42a9-8845-d92a824a995b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and st_message like '%${#TestCase#switchId}%'</con:query>
          <con:assertion type="JDBC Status" id="cc45d6ef-2316-4378-b582-f321b46f2cc1" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="9dc2a7bb-7c16-4bd1-980b-734fceb80acc" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-blocking" id="93358305-3a61-4617-a1c5-5363c7c4ff11">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>Y</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>99</blockingcode>
<note>Request Answer blocking ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="f91f930e-76be-420f-84a6-10fdad9183ee">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0dee71a3-a935-4b06-b972-c813e5f4ada7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="87a46e1b-6abd-40e9-93d7-879cd5d80622" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fe92eb90-8575-4ba4-8bb8-62355e7b99e1" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="62a39dc6-77ee-41a5-89bb-452f2cf60f3b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="c4c184ca-1f08-47f4-9222-fc1b457718cc">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="95b6a8ae-1a13-41bc-80a4-9e6cc10318c5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4d48a085-3f43-46c6-8810-e8e94ec93ff3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b58743e7-0a55-4986-8e86-afa8533ab867" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="8c9e879f-b1ec-4da7-b99e-ab3367593c4a" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="873cdff9-2cd6-454b-95eb-60996d919161">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="de7dd802-8f79-48c8-911b-6b11ee6d662f" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="a64a6046-2914-46f8-a7d0-64cb06080301">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Blocked</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be12c6b7-e826-4a58-b4c4-a5ec955b7f46" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="feeeb137-409b-4f36-8bfe-9a06ca164a96">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="da663a2e-7feb-471a-9c29-84be65f04692" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="212ef293-cfa9-4a8b-b970-711abd7fd3ab" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="606c8e18-4795-4d3f-8c21-0ea17a6ce7fc" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="a840d820-8810-4739-a4b6-1cb245dc5b8e" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="d570b598-8499-4a2e-8502-eb11ac69a194">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 1" id="ca0e871e-31f9-4681-ae30-25fc9ef4a4d0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1f3a2336-d8af-4fcc-a5e5-e834c9de3bb1" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#soapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="15efa522-b0f6-499f-9adf-dd1f09fb7588" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="a07bed72-a734-40be-bd93-bfd6cccf3386">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="01bb2642-cca1-43be-8b3c-e5e4aa4962fd">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7c2ead04-db2e-4ede-b16b-85c280699784" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7a60508b-5cbc-4994-8350-5538bcf33f7b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e3c9580b-5332-4fe1-8f7a-98def76fd3d3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="check CTRA email" id="8fc9c3dd-cadc-46aa-887b-eaff2e453fe3" disabled="true">
        <con:description>Please check for ${#TestSuite#recipient} that the CTRA email is received
for ${#TestCase#switchId}</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="be7e9eaa-93de-48e8-8b5c-98e38c077515">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
      wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def guiwishdatestr = wishdate.format("yyyy-MM-dd")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdatestr)
String contractId = funcHandle.getRandomString(10, "");
testRunner.testCase.setPropertyValue("contractId",contractId)
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
//Update contract id format for donor
import groovy.sql.Sql;
def  con = funcHandle.createDBConObject(testCase);
def query1 = con.execute("update overstappen.service_provider set spr_contract_id_format = '[0-9A-Z]{10}%[0-9A-Z]{11}' where spr_code='"+ donor +"'")
log.info ("Query result: "+ query1)
con.close()</con:setupScript>
      <con:tearDownScript>def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
//Update contract id format for donor
import nl.coin.Selenium.*;
import groovy.sql.Sql;
def funcHandle = new ReadymadeFunctions();
def  con = funcHandle.createDBConObject(testSuite);
def query1 = con.execute("update overstappen.service_provider set spr_contract_id_format = '.*' where spr_code='"+ donor +"'")
log.info ("Query result: "+ query1)
con.close()</con:tearDownScript>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CTR-CTRA blocking 99_MultipleCOntractIDFormat_2" searchProperties="true" id="be8a0ad5-1419-44b4-8b1c-dd6b49bbb63e" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="CTR_ContractID_WrongFormat" id="67090c70-5c65-40bc-b677-304fe3de118c">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.SampleTest;
import nl.coin.Selenium.SeleniumActions;
import nl.coin.Selenium.JavaActions;
def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def driver = seleniumHandle.openBrowser(browser);
//Login to application
log.info seleniumHandle.browseURL(guiUrl);
log.info(driver.getTitle());
def recipientCredentials = seleniumHandle.getCredentials(recipient)
def donorCredentials = seleniumHandle.getCredentials(donor)
log.info seleniumHandle.enterData("HomePage","userName", recipientCredentials[0]);
log.info seleniumHandle.enterData("HomePage","passWord", recipientCredentials[1]);
//log.info seleniumHandle.clickObject("HomePage","8HrsSession");
log.info seleniumHandle.clickObject("HomePage","login");

//Click on Requests menu
log.info seleniumHandle.clickObject("HomePage","requests");

//Select donor value from the dropdown
log.info seleniumHandle.enterDataSelectDropDown("HomePage","CTRDonor", donorCredentials[2]);

//Select the dossier type value from the drop down
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
if (dossierType == "&lt;business>Y&lt;/business>"){
	log.info seleniumHandle.enterDataSelectDropDown("HomePage","CTRDossier", "Business");
} else {
	log.info seleniumHandle.enterDataSelectDropDown("HomePage","CTRDossier", "Consumer");
}

def DossierIdGui= seleniumHandle.getText("HomePage","CTRSwitchid");
testRunner.testCase.setPropertyValue("switchId",DossierIdGui+'-01');
//Enter name
log.info seleniumHandle.enterData("HomePage","CTRName","COIN");

//Enter ZipCode
log.info seleniumHandle.enterData("HomePage","CTRZipCode","1389SS");

//Enter House number
log.info seleniumHandle.enterData("HomePage","CTRHouseNumber","99999");

//Enter Contract ID
log.info seleniumHandle.enterData("HomePage","CTRContractID","123");

log.info seleniumHandle.clickObject("HomePage","CTRWishDateIcon");

def wishDate = testRunner.testCase.getPropertyValue("wishDate")
def onlyDate = javaHandle.getDateFromFormat(wishDate, "yyyy-MM-dd'T'HH:mm:ss")
log.info onlyDate
def monthYear = javaHandle.convertDateFormat(wishDate, "yyyy-MM-dd'T'HH:mm:ss", "MMMM yyyy")
log.info monthYear
//move calander to required month &amp; year
log.info seleniumHandle.moveCalenderToMonth("HomePage", "CTRWishDateRightIcon", "HomePage", "CTRWishDateCalHeader", monthYear)

//Click on the date
log.info seleniumHandle.clickObject("xpath","//form[@id='sendRequest']//legend[text()='Dossier Data']/following-sibling::div/div/p[label[text()='Wish Date']]/span/span//tbody//a[text()="+onlyDate+"]", true);

//Click on Send CTR button
log.info seleniumHandle.clickObject("HomePage","CTRSendRequest");

def verification = seleniumHandle.verifyText("HomePage","CTRcontractIDError","Contract-Id doesn't match the format(s) specified by the donor provider")
if(!verification) {
	testRunner.fail("Contract id validation not displayed correctly")
}
log.info seleniumHandle.quitBrowser();</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="82ade269-6f12-4813-abbd-ee9b7bb3a5a3">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, contractId, dossierType, wishDate);

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="cb4528b2-4685-4edc-a7ba-51246b1624df">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="JDBC Status" id="e4415146-698e-4844-be0a-cf0f5018f1ae" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="f399479a-b25e-447e-a9e0-d6caa6df01b8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="f116fa6a-8895-4986-b1aa-446d9e201909" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="aca0adf0-394d-419d-b52e-ee7534d0fe5d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="0f5be3ef-cbfd-4d5f-90d7-7c7c372a7c6b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="9ebf8a44-adbc-4ea5-a472-c4aaf910cd2e" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="c72f13fb-ead0-427a-87de-5fc60c29e536">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "Wait For send Poller")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="5da33193-054f-49da-9b09-edb7c1cdc9b9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac0e5b22-e677-48b9-afc6-8f2331fc9f07" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="bc6cefa8-7aa6-4de5-afef-8bcdc506f545" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e38526ad-5bf0-4755-8b82-90ec10384a13" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="2354daa7-e782-49f2-ab02-18e2e9f5cc16">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For send Poller" id="48f112a6-4995-4c82-b7f1-95b9efd246a8">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_NoSend" id="dc2758e5-4dc1-4167-8871-21cd9d30d93f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and st_message like '%${#TestCase#switchId}%'</con:query>
          <con:assertion type="JDBC Status" id="cc45d6ef-2316-4378-b582-f321b46f2cc1" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="9dc2a7bb-7c16-4bd1-980b-734fceb80acc" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-blocking" id="1f590c0c-8564-4156-b62b-6c50a17756b2">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>Y</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>99</blockingcode>
<note>Request Answer blocking ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="0b50b836-bea1-4e50-b098-0296ad650608">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0dee71a3-a935-4b06-b972-c813e5f4ada7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="87a46e1b-6abd-40e9-93d7-879cd5d80622" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fe92eb90-8575-4ba4-8bb8-62355e7b99e1" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="62a39dc6-77ee-41a5-89bb-452f2cf60f3b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="a5d7b0a0-4368-41da-afd6-266fb50a0f74">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="67dbaadf-de49-435d-9b9f-16bbc3481164">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4d48a085-3f43-46c6-8810-e8e94ec93ff3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b58743e7-0a55-4986-8e86-afa8533ab867" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="b738dd9d-7302-426e-bac8-81b5b6c3e840" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="c52536ab-7db1-4b28-a934-5d4390c75d93">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="de7dd802-8f79-48c8-911b-6b11ee6d662f" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table 1" id="53e4f764-aaab-460d-bfa2-1d0357531a0a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Blocked</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be12c6b7-e826-4a58-b4c4-a5ec955b7f46" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="57a494a5-59b2-4ad9-b664-aadb71e83680">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="da663a2e-7feb-471a-9c29-84be65f04692" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="212ef293-cfa9-4a8b-b970-711abd7fd3ab" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e7ee6d90-2815-4be2-bd87-d9d56aa858a4" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="6142294a-741d-4f6d-88c2-7a611e9e71a9" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="8c8e25da-014b-41c8-888a-d3878076ff5f">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName("JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 1" id="998b47d7-742c-47b9-bf8e-5f382b570c07">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1f3a2336-d8af-4fcc-a5e5-e834c9de3bb1" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#soapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="15efa522-b0f6-499f-9adf-dd1f09fb7588" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="2d9654be-409d-424b-ad8d-3f269f4257a5">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="03662d8a-a43f-4806-afb1-ca7c26bb5faa">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7c2ead04-db2e-4ede-b16b-85c280699784" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7a60508b-5cbc-4994-8350-5538bcf33f7b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e3c9580b-5332-4fe1-8f7a-98def76fd3d3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="check CTRA email" id="8ddf7bc7-02ae-4408-b23b-8d4642997eb1" disabled="true">
        <con:description>Please check for ${#TestSuite#recipient} that the CTRA email is received
for ${#TestCase#switchId}</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="2ec41fb9-e2c5-4eea-af9e-ff5c5d43d952">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
      wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def guiwishdatestr = wishdate.format("yyyy-MM-dd")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdatestr)
String contractId = funcHandle.getRandomString(10, "");
testRunner.testCase.setPropertyValue("contractId",contractId)
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
//Update contract id format for donor
import groovy.sql.Sql;
def  con = funcHandle.createDBConObject(testCase);
def query1 = con.execute("update overstappen.service_provider set spr_contract_id_format = '[0-9A-Z]{10}%[0-9A-Z]{11}' where spr_code='"+ donor +"'")
log.info ("Query result: "+ query1)
con.close()</con:setupScript>
      <con:tearDownScript>def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
//Update contract id format for donor
import nl.coin.Selenium.*;
import groovy.sql.Sql;
def funcHandle = new ReadymadeFunctions();
def  con = funcHandle.createDBConObject(testSuite);
def query1 = con.execute("update overstappen.service_provider set spr_contract_id_format = '.*' where spr_code='"+ donor +"'")
log.info ("Query result: "+ query1)
con.close()</con:tearDownScript>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:properties>
      <con:property>
        <con:name>TimestampNOW</con:name>
        <con:value>${=String.format('%tFT%&lt;tT', new Date())}</con:value>
      </con:property>
      <con:property>
        <con:name>PollTime</con:name>
        <con:value>3000</con:value>
      </con:property>
      <con:property>
        <con:name>lineNumber</con:name>
        <con:value>0</con:value>
      </con:property>
      <con:property>
        <con:name>testdatafile</con:name>
        <con:value>soaptosoap.csv</con:value>
      </con:property>
      <con:property>
        <con:name>browser</con:name>
        <con:value>firefox</con:value>
      </con:property>
    </con:properties>
    <con:setupScript>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
import org.apache.commons.lang.RandomStringUtils
import groovy.time.TimeCategory
import nl.coin.Selenium.*;
def directory = groovyUtils.projectPath + "/"
System.setProperty("projectfiledir", directory)
def seleniumHandle = new SeleniumActions();
def funcHandle = new ReadymadeFunctions();
def Line = funcHandle.getTestDataAndIncreaseLinenumber(testSuite, directory);
String[] propData = Line.split(";")
funcHandle.setRecipientAndDonorSoapCredentials(seleniumHandle, testSuite, directory, propData[0], propData[1]);
testSuite.setPropertyValue("soapVersion",propData[2])
testSuite.setPropertyValue("dossierType",propData[3])
testSuite.setPropertyValue("compensationOK",propData[4])
import groovy.sql.Sql;
def  con = funcHandle.createDBConObject(testSuite);
def recepientDetails = funcHandle.setProperty4mDB(testSuite, con, "select spr_code, it_interface_type,business_gui_only from overstappen.service_provider inner join overstappen.interface_type on service_provider.spr_request_it_id = interface_type.id where service_provider.spr_code = '"+ propData[0]+"'", ["business_gui_only", "it_interface_type"] as String[], ["recipientbgo", "recipientif"] as String[]);
def donorDetails = funcHandle.setProperty4mDB(testSuite, con, "select spr_code, it_interface_type,business_gui_only from overstappen.service_provider inner join overstappen.interface_type on service_provider.spr_request_it_id = interface_type.id where service_provider.spr_code = '"+ propData[1]+"'", ["business_gui_only", "it_interface_type"] as String[], ["donorbgo", "donorif"] as String[]);
testSuite.setPropertyValue( "businessGuiOnly" , donorDetails[0])
def donorsoap = funcHandle.getDonorSoapVersionS2SAndSetProperty(testSuite, donorDetails[1], propData[3], "donorSoapVersion");
def donorbusiness = funcHandle.getDonorDossierTypeS2SAndSetProperty(testSuite, donorDetails[1], propData[3], "donorDossierType");
def donorMessage = funcHandle.getMessageTypeAndSetProperty(testSuite, donorDetails[1], propData[3], donorDetails[0], "donorMessage");
funcHandle.setProperty4mDB(testSuite, con, "select id from overstappen.service_provider where spr_code='"+ propData[0]+"'", "id", "recipientId")
funcHandle.setProperty4mDB(testSuite, con, "select id from overstappen.service_provider where spr_code='"+ propData[1]+"'", "id", "donorId");
funcHandle.getOutgoingMsgTypeAndSetProperty(testSuite, propData[3], recepientDetails[0], recepientDetails[1], "donorOutMsg");
funcHandle.getOutgoingMsgTypeAndSetProperty(testSuite, propData[3], donorDetails[0], donorDetails[1], "recipientOutMsg");
con.close()</con:setupScript>
    <con:tearDownScript/>
    <con:reportParameters/>
  </con:testSuite>
  <con:testSuite name="CDV537" id="7bc7ce3b-8869-48c0-9caf-c570e2d037d4">
    <con:description>CDV-703: Disabled C3.6 &amp; C3.12 test cases</con:description>
    <con:settings>
      <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
      <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">true</con:setting>
    </con:settings>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CTR-CTRA blocking 99" searchProperties="true" id="fd9aa59d-0a68-40a3-83e4-f73da108a083" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="402fd17c-8337-429f-b452-5b1595d58d88">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, dossierType, "COIN", "1389SS", "99999", "1", true, contractId, "123" , wishDate, "note", "0193281264", "0193281264");

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="b786b651-01bd-449e-9bfa-b4a026a0c41c">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="JDBC Status" id="e4415146-698e-4844-be0a-cf0f5018f1ae" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="80f82ac5-9cad-41a7-90fe-69fae319ebcf">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="f116fa6a-8895-4986-b1aa-446d9e201909" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="aca0adf0-394d-419d-b52e-ee7534d0fe5d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="be995ba5-2fcf-486e-ac34-3f990a418d88" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="18bb420b-5bdd-418c-bf7c-36629b766118" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For send Poller" id="fb9ae5ac-0622-4b02-bb15-51cdd679008a">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="73a841fa-7bd7-492e-894c-61a9cbe8e4b5">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_ST Table_NoSend")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="2c8097f8-ff9d-4ec9-8337-fb524f0802d1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac0e5b22-e677-48b9-afc6-8f2331fc9f07" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="bc6cefa8-7aa6-4de5-afef-8bcdc506f545" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e38526ad-5bf0-4755-8b82-90ec10384a13" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="e3f923cf-f1a3-4fb5-9673-f8b8b0fee369">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_NoSend" id="70fd38e7-68e6-44a6-baf2-127248abfdfb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and st_message like '%${#TestCase#switchId}%'</con:query>
          <con:assertion type="JDBC Status" id="cc45d6ef-2316-4378-b582-f321b46f2cc1" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="9dc2a7bb-7c16-4bd1-980b-734fceb80acc" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="83c14612-fdf3-4091-aa2e-c47585a325c3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f2d1c401-3a05-4fb3-a01b-96be86ae860e" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-blocking" id="493f562c-598a-4218-89ac-ec1488120098">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>Y</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>99</blockingcode>
<note>Request Answer blocking ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="684de0c8-f865-4091-9555-b9b35b0cd7eb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0dee71a3-a935-4b06-b972-c813e5f4ada7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="87a46e1b-6abd-40e9-93d7-879cd5d80622" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fe92eb90-8575-4ba4-8bb8-62355e7b99e1" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="62a39dc6-77ee-41a5-89bb-452f2cf60f3b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="783392a2-ee05-4eda-9571-d3be1bcee64e">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="9eb6f61d-7385-4962-8e89-793a46fd1efb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4d48a085-3f43-46c6-8810-e8e94ec93ff3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b58743e7-0a55-4986-8e86-afa8533ab867" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e4d825be-7227-4f24-8194-1cc92ba0e034" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="8e3c0071-41e5-4223-9f23-0b677f357b2b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="de7dd802-8f79-48c8-911b-6b11ee6d662f" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA" id="654e445e-6f9c-481e-a57b-927e61ed0f6b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Blocked</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be12c6b7-e826-4a58-b4c4-a5ec955b7f46" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="f0c63cb1-bcc8-4219-8500-c95b933d88c1">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="da663a2e-7feb-471a-9c29-84be65f04692" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="212ef293-cfa9-4a8b-b970-711abd7fd3ab" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="91fa86ed-2334-4f8d-8896-26ab4afdd35b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="70c8afac-caf0-471a-a14f-db2274d73d15" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="daff493f-ef16-461f-aa3a-e9f4ff9b5b4d">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 1" id="c3d2f1a9-05db-4ef2-b9a5-08572d324d8f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1f3a2336-d8af-4fcc-a5e5-e834c9de3bb1" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="15efa522-b0f6-499f-9adf-dd1f09fb7588" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="ac77c37a-9adf-4ce5-949a-7c66f46614ae">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTR_OldData")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="6dfbbbf3-d737-46bb-be50-08f1c5c0b4d5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7c2ead04-db2e-4ede-b16b-85c280699784" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7a60508b-5cbc-4994-8350-5538bcf33f7b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e3c9580b-5332-4fe1-8f7a-98def76fd3d3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="65c76b20-912f-4f82-a020-bffc2de96613">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctraDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ea7fbfb2-1301-4118-8a56-f51b60422322" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="check CTRA email" id="06cd5718-da89-4722-b9ea-b030192ce796" disabled="true">
        <con:description>Please check for ${#TestSuite#recipient} that the CTRA email is received
for ${#TestCase#switchId}</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR_OldData" id="c1a6e1e7-28d4-4311-af46-f8fa9d5800d2">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")
def switchId = testRunner.testCase.getPropertyValue("switchId")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

def verification = false;
try {
	verification = funcHandle.sendCTROldData(seleniumHandle, javaHandle, browser, guiUrl, recipient, switchId, donor, dossierType, "COIN", "1389SS", "99999", "1", true, contractId, "123" , wishDate, "note", "0193281264", "0193281264");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}

assert verification == true;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="d5c8db81-0352-474a-9376-197abf14fa74">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def guiwishdatestr = wishdate.format("yyyy-MM-dd")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdatestr)
String contractId = funcHandle.getRandomString(9, "1-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CTR-CTRA blocking 11_BusinessOnly" searchProperties="true" id="e88cee89-2947-4439-8a49-672d613e2b17" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Skip for Consumer requests" id="ee414360-f141-4cba-98f4-5852f9b9fb6f">
        <con:settings/>
        <con:config>
          <script>def dossiertype = testRunner.testCase.testSuite.getPropertyValue( "dossierType" )
if (!(dossiertype == '&lt;business>Y&lt;/business>')){
	testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="5114d869-33e8-4369-be2b-1b75dd493ac1">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, dossierType, "COIN", "1389SS", "99999", "1", true, contractId, "123" , wishDate, "note", "0193281264", "0193281264");

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="18733e9a-e21d-4284-9407-ec5e14dc2485">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="JDBC Status" id="e4415146-698e-4844-be0a-cf0f5018f1ae" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="4dd38633-a6a3-41a3-9211-213891fb0b65">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="f116fa6a-8895-4986-b1aa-446d9e201909" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="aca0adf0-394d-419d-b52e-ee7534d0fe5d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="be995ba5-2fcf-486e-ac34-3f990a418d88" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="18bb420b-5bdd-418c-bf7c-36629b766118" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For send Poller" id="5f43cc59-65c8-45f3-bfd4-e0d69b3e2363">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="d4e78884-a6c1-4f74-94b6-f365f0912256">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_ST Table_NoSend")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="90be16bb-3f53-4c31-9068-961831034d19">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac0e5b22-e677-48b9-afc6-8f2331fc9f07" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="bc6cefa8-7aa6-4de5-afef-8bcdc506f545" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e38526ad-5bf0-4755-8b82-90ec10384a13" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="da1dfbad-e463-4e68-ac6d-06e5f599367a">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_NoSend" id="d1a8d6b6-63ca-4940-8945-c6d40bbbc97d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and st_message like '%${#TestCase#switchId}%'</con:query>
          <con:assertion type="JDBC Status" id="cc45d6ef-2316-4378-b582-f321b46f2cc1" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="9dc2a7bb-7c16-4bd1-980b-734fceb80acc" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="7d0c6475-36fc-4400-8f8b-005c08fa2112">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f2d1c401-3a05-4fb3-a01b-96be86ae860e" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-blocking" id="f2572a3f-13a3-4244-b82d-76f14ac86320">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>Y</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>11</blockingcode>
<proposeddatetime>${#TestCase#wishdate}</proposeddatetime>
<note>Request Answer blocking ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="21bb3f41-1836-426a-9728-ffd84ea30b9b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0dee71a3-a935-4b06-b972-c813e5f4ada7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="87a46e1b-6abd-40e9-93d7-879cd5d80622" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fe92eb90-8575-4ba4-8bb8-62355e7b99e1" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="62a39dc6-77ee-41a5-89bb-452f2cf60f3b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="dfd730cc-849d-4060-973b-62a94d656f00">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="84e7575b-3b78-4911-8f0b-74576da99768">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4d48a085-3f43-46c6-8810-e8e94ec93ff3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b58743e7-0a55-4986-8e86-afa8533ab867" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e4d825be-7227-4f24-8194-1cc92ba0e034" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="7c559dca-cbe5-4f29-bc6b-3af4bb67d6a8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="de7dd802-8f79-48c8-911b-6b11ee6d662f" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA" id="49afcaa4-7ea6-4aa2-948d-f41635c7c3f3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Blocked</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be12c6b7-e826-4a58-b4c4-a5ec955b7f46" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="00e51872-b12e-4a28-863e-67487ab2be86">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="da663a2e-7feb-471a-9c29-84be65f04692" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="212ef293-cfa9-4a8b-b970-711abd7fd3ab" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="91fa86ed-2334-4f8d-8896-26ab4afdd35b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="70c8afac-caf0-471a-a14f-db2274d73d15" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="5a17466f-d7ef-4890-b7c8-1c1942f8fa9f">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 1" id="06993fba-ee11-4c32-a4ba-e5aef01b1954">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1f3a2336-d8af-4fcc-a5e5-e834c9de3bb1" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="15efa522-b0f6-499f-9adf-dd1f09fb7588" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="c8825767-47a8-4d04-9866-fce90867cd05">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTR_OldData")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="86f5bc96-e113-4ec1-a3f5-f170b46beaf9">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7c2ead04-db2e-4ede-b16b-85c280699784" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7a60508b-5cbc-4994-8350-5538bcf33f7b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e3c9580b-5332-4fe1-8f7a-98def76fd3d3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="18966954-1e90-4b1b-a825-067a5fcfa60f">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctraDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ea7fbfb2-1301-4118-8a56-f51b60422322" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="check CTRA email" id="3c4d601d-4b0c-47d5-a7dc-3adeb0ee7b48" disabled="true">
        <con:description>Please check for ${#TestSuite#recipient} that the CTRA email is received
for ${#TestCase#switchId}</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR_OldData" id="9a52faff-e99a-40ea-be27-53b8e4f56c94">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")
def switchId = testRunner.testCase.getPropertyValue("switchId")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

def verification = false;
try {
	verification = funcHandle.sendCTROldData(seleniumHandle, javaHandle, browser, guiUrl, recipient, switchId, donor, dossierType, "COIN", "1389SS", "99999", "1", true, contractId, "123" , wishDate, "note", "0193281264", "0193281264");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}

assert verification == true;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="460e147e-aa09-4287-b7b2-57588d014a60">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def guiwishdatestr = wishdate.format("yyyy-MM-dd")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdatestr)
String contractId = funcHandle.getRandomString(9, "1-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CTR-CTRA blocking 12_BusinessOnly_HalfBaked" searchProperties="true" id="394b4989-d8b8-4502-90ef-1f976c5694ea" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Skip for Consumer requests" id="ec93d26f-4dc5-4471-bb80-66d49d91eb57">
        <con:settings/>
        <con:config>
          <script>def dossiertype = testRunner.testCase.testSuite.getPropertyValue( "dossierType" )
if (!(dossiertype == '&lt;business>Y&lt;/business>')){
	testRunner.gotoStepByName( "Delay0")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR" id="8f1cf85e-e0b3-41d6-86a0-f5be2863b13e">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, dossierType, "COIN", "1389SS", "99999", "1", true, contractId, "123" , wishDate, "note", "0193281264", "0193281264");

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="ba9b99f9-9e7a-46a7-86c4-b1939fb7cbad">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="JDBC Status" id="e4415146-698e-4844-be0a-cf0f5018f1ae" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="2987e84c-b202-491e-8b47-2ae19844fa72">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="f116fa6a-8895-4986-b1aa-446d9e201909" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="aca0adf0-394d-419d-b52e-ee7534d0fe5d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="be995ba5-2fcf-486e-ac34-3f990a418d88" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="18bb420b-5bdd-418c-bf7c-36629b766118" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For send Poller" id="1f57ab99-3b43-4afe-8871-8a5348dc9a3c">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="dcd8b16b-530e-411c-8aab-453bc7498f3e">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_ST Table_NoSend")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="143e6b98-c403-44b4-b36e-d1f972cd7dc0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac0e5b22-e677-48b9-afc6-8f2331fc9f07" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="bc6cefa8-7aa6-4de5-afef-8bcdc506f545" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e38526ad-5bf0-4755-8b82-90ec10384a13" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="9315f67d-798c-4a6a-82b2-54ce90c3c9dc">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_NoSend" id="472c7187-fe43-4f37-b97f-fcddeff206b8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and st_message like '%${#TestCase#switchId}%'</con:query>
          <con:assertion type="JDBC Status" id="cc45d6ef-2316-4378-b582-f321b46f2cc1" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="9dc2a7bb-7c16-4bd1-980b-734fceb80acc" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="0d854427-a8d3-4d0e-9ba9-f42d8c26c666">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f2d1c401-3a05-4fb3-a01b-96be86ae860e" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-blocking" id="bd407615-be05-4375-83df-211d3415e2e1">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>Y</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>12</blockingcode>
<note>Request Answer blocking ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="32c84995-58ea-49f1-9d4c-048074ac5614">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0dee71a3-a935-4b06-b972-c813e5f4ada7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="87a46e1b-6abd-40e9-93d7-879cd5d80622" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fe92eb90-8575-4ba4-8bb8-62355e7b99e1" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="62a39dc6-77ee-41a5-89bb-452f2cf60f3b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="bc40064d-28e8-49c5-b444-44f27fed9819">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="9fbcd44a-4864-425e-af70-8871896a0e82">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4d48a085-3f43-46c6-8810-e8e94ec93ff3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b58743e7-0a55-4986-8e86-afa8533ab867" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e4d825be-7227-4f24-8194-1cc92ba0e034" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="c378d5ef-600f-4bd0-83be-4f5b5c72e1c5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="de7dd802-8f79-48c8-911b-6b11ee6d662f" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA" id="ff9f2144-570b-4174-8e5b-2011541421cb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Blocked</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be12c6b7-e826-4a58-b4c4-a5ec955b7f46" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="388c46c2-cb0d-4640-8ab2-70288912d7ce">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="da663a2e-7feb-471a-9c29-84be65f04692" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="212ef293-cfa9-4a8b-b970-711abd7fd3ab" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="91fa86ed-2334-4f8d-8896-26ab4afdd35b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="70c8afac-caf0-471a-a14f-db2274d73d15" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="697c6fbe-d7bb-40ab-a831-76fa2339a8fc">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 1" id="f3ce1494-4ff7-4d3e-a6ff-df016a1d90eb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1f3a2336-d8af-4fcc-a5e5-e834c9de3bb1" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="15efa522-b0f6-499f-9adf-dd1f09fb7588" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="2c0f3ae6-6ed4-43db-a358-f7542504ae5b">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTR_OldData")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="5989ba89-9d70-44e8-8773-7f1f06ba9f60">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7c2ead04-db2e-4ede-b16b-85c280699784" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7a60508b-5cbc-4994-8350-5538bcf33f7b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e3c9580b-5332-4fe1-8f7a-98def76fd3d3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="a9e883e7-ff6e-4e4d-a058-8e84bf449f25">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctraDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ea7fbfb2-1301-4118-8a56-f51b60422322" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="check CTRA email" id="92550097-1084-47ad-8432-f4569a423b0b" disabled="true">
        <con:description>Please check for ${#TestSuite#recipient} that the CTRA email is received
for ${#TestCase#switchId}</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR_OldData" id="90574484-2b51-4918-abd2-f67b1ffa59c7">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")
def switchId = testRunner.testCase.getPropertyValue("switchId")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

def verification = false;
try {
	verification = funcHandle.sendCTROldData(seleniumHandle, javaHandle, browser, guiUrl, recipient, switchId, donor, dossierType, "COIN", "1389SS", "99999", "1", true, contractId, "123" , wishDate, "note", "0193281264", "0193281264");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}

assert verification == true;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="f74f0011-eccf-42ac-a4ea-1303be46d7f6">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def guiwishdatestr = wishdate.format("yyyy-MM-dd")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdatestr)
String contractId = funcHandle.getRandomString(9, "1-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CTR-CTRA blocking 3" searchProperties="true" id="51a0aa51-5143-4ed2-aef9-f482a86bb3cd" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="a15eb2b8-6aae-4ffe-8038-7d67130b3419">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, dossierType, "COIN", "1389SS", "99999", "1", true, contractId, "123" , wishDate, "note", "0193281264", "0193281264");

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="ab0bab5e-c134-4278-bca2-8b457dd1a099">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="JDBC Status" id="e4415146-698e-4844-be0a-cf0f5018f1ae" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="933727cd-3e9a-40db-8f6d-a3d4aefe1394">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="f116fa6a-8895-4986-b1aa-446d9e201909" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="aca0adf0-394d-419d-b52e-ee7534d0fe5d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="be995ba5-2fcf-486e-ac34-3f990a418d88" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="18bb420b-5bdd-418c-bf7c-36629b766118" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For send Poller" id="b388f70d-2052-4da5-b3e3-89b61640dd42">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="cfd373f6-af00-44db-bfc7-e65f1de8cd79">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_ST Table_NoSend")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="572f8789-ac3c-4435-8e37-fd7d10dddafb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac0e5b22-e677-48b9-afc6-8f2331fc9f07" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="bc6cefa8-7aa6-4de5-afef-8bcdc506f545" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e38526ad-5bf0-4755-8b82-90ec10384a13" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="41df4d3d-1f55-4571-a637-72cf7275b3de">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_NoSend" id="38543348-66a3-4d83-beef-e05886e084df">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and st_message like '%${#TestCase#switchId}%'</con:query>
          <con:assertion type="JDBC Status" id="cc45d6ef-2316-4378-b582-f321b46f2cc1" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="9dc2a7bb-7c16-4bd1-980b-734fceb80acc" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="31296c43-5997-47e4-a14a-dea4c3641c84">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f2d1c401-3a05-4fb3-a01b-96be86ae860e" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-blocking" id="b1a6a83c-8339-47c5-9008-f8e71a548b72">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>Y</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>3</blockingcode>
<note>Request Answer blocking ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="149cf94b-f5dd-40ac-b23d-b3a21aec7ae7">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0dee71a3-a935-4b06-b972-c813e5f4ada7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="87a46e1b-6abd-40e9-93d7-879cd5d80622" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fe92eb90-8575-4ba4-8bb8-62355e7b99e1" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="62a39dc6-77ee-41a5-89bb-452f2cf60f3b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="4354df0c-6688-43bc-bd20-21e23557c036">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="91cb2cb9-b02b-4bc9-a88e-4bc172828b24">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4d48a085-3f43-46c6-8810-e8e94ec93ff3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b58743e7-0a55-4986-8e86-afa8533ab867" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e4d825be-7227-4f24-8194-1cc92ba0e034" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="0d25033d-ee30-47bf-944e-4392c6496889">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="de7dd802-8f79-48c8-911b-6b11ee6d662f" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA" id="c8b12109-433f-4d67-80fd-ab9aeb3c077b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Blocked</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be12c6b7-e826-4a58-b4c4-a5ec955b7f46" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="9467d237-733f-4893-9e97-7bc556b60849">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="da663a2e-7feb-471a-9c29-84be65f04692" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="212ef293-cfa9-4a8b-b970-711abd7fd3ab" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="91fa86ed-2334-4f8d-8896-26ab4afdd35b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="70c8afac-caf0-471a-a14f-db2274d73d15" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="878a62d3-573a-4bc1-97e4-79914e99a74e">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 1" id="a2ff5e49-0ae9-4f4f-a5d8-a1fa3f0d4a2a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1f3a2336-d8af-4fcc-a5e5-e834c9de3bb1" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="15efa522-b0f6-499f-9adf-dd1f09fb7588" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="b7ff9f53-652a-4197-b722-e778d4bdb751">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTR_OldData")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="89f115dc-6954-4048-a4be-64a2aa223288">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7c2ead04-db2e-4ede-b16b-85c280699784" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7a60508b-5cbc-4994-8350-5538bcf33f7b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e3c9580b-5332-4fe1-8f7a-98def76fd3d3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="9dfda4f2-91c5-4b09-bc10-dd874a334188">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctraDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ea7fbfb2-1301-4118-8a56-f51b60422322" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="check CTRA email" id="d4363c60-f320-4ac4-b0c0-1a1e5b0b4fcb" disabled="true">
        <con:description>Please check for ${#TestSuite#recipient} that the CTRA email is received
for ${#TestCase#switchId}</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR_OldData" id="40822e7e-a4a0-4d21-9bcf-f7abf8bc2c67">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")
def switchId = testRunner.testCase.getPropertyValue("switchId")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

def verification = false;
try {
	verification = funcHandle.sendCTROldData(seleniumHandle, javaHandle, browser, guiUrl, recipient, switchId, donor, dossierType, "COIN", "1389SS", "99999", "1", true, contractId, "123" , wishDate, "note", "0193281264", "0193281264");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}

assert verification == true;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="1e391c0c-8ffc-4a85-93d6-16ffb64a1a20">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def guiwishdatestr = wishdate.format("yyyy-MM-dd")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdatestr)
String contractId = funcHandle.getRandomString(9, "1-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CTR-CTRA blocking 7" searchProperties="true" id="28f882ab-25e0-4ab4-bccb-818ed551eac0" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="4c02eab0-00a7-4c01-a3e7-411b1b052216">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, dossierType, "COIN", "1389SS", "99999", "1", true, contractId, "123" , wishDate, "note", "0193281264", "0193281264");

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="6d5b183f-df0d-4b29-af1b-9978de8f3f31">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="JDBC Status" id="e4415146-698e-4844-be0a-cf0f5018f1ae" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="7c7c49f8-4e24-4c09-8b06-894e718edf53">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="f116fa6a-8895-4986-b1aa-446d9e201909" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="aca0adf0-394d-419d-b52e-ee7534d0fe5d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="be995ba5-2fcf-486e-ac34-3f990a418d88" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="18bb420b-5bdd-418c-bf7c-36629b766118" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For send Poller" id="79920d0f-a2d3-42d6-b175-090ee4319a8e">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="6f640cbb-b8f8-469e-950c-557efe02b2a2">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_ST Table_NoSend")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="8fc57061-ed45-4d94-98f9-635a6e72bd74">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac0e5b22-e677-48b9-afc6-8f2331fc9f07" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="bc6cefa8-7aa6-4de5-afef-8bcdc506f545" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e38526ad-5bf0-4755-8b82-90ec10384a13" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="b4c8a07d-d8ce-4dbf-bdc3-8725356fffb4">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_NoSend" id="28fb1871-b8e4-4203-a965-42b4b84168fc">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and st_message like '%${#TestCase#switchId}%'</con:query>
          <con:assertion type="JDBC Status" id="cc45d6ef-2316-4378-b582-f321b46f2cc1" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="9dc2a7bb-7c16-4bd1-980b-734fceb80acc" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="ed7b1b03-3fd3-408b-8bdb-ba7a8ed54403">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f2d1c401-3a05-4fb3-a01b-96be86ae860e" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-blocking" id="d49f84fe-e460-43b8-b5be-e53bad818e34">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>Y</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>7</blockingcode>
<note>Request Answer blocking ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="072d8e5a-3c75-4efe-9a41-2b5b0c7be8fb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0dee71a3-a935-4b06-b972-c813e5f4ada7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="87a46e1b-6abd-40e9-93d7-879cd5d80622" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fe92eb90-8575-4ba4-8bb8-62355e7b99e1" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="62a39dc6-77ee-41a5-89bb-452f2cf60f3b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="25cb104f-456a-4b76-9e30-164b4f67e587">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="3a060db1-a7f8-4c11-98ce-83ff4e2ef95a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4d48a085-3f43-46c6-8810-e8e94ec93ff3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b58743e7-0a55-4986-8e86-afa8533ab867" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e4d825be-7227-4f24-8194-1cc92ba0e034" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="eeed31f2-1383-47b9-b2fb-69cbfbfe7f28">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="de7dd802-8f79-48c8-911b-6b11ee6d662f" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA" id="979a35c8-7eaa-4776-b620-80d505cd8fb3">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Blocked</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be12c6b7-e826-4a58-b4c4-a5ec955b7f46" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="cfb9491f-ae99-44cb-b2cf-05af471bdde0">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="da663a2e-7feb-471a-9c29-84be65f04692" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="212ef293-cfa9-4a8b-b970-711abd7fd3ab" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="91fa86ed-2334-4f8d-8896-26ab4afdd35b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="70c8afac-caf0-471a-a14f-db2274d73d15" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="7d271b69-3f1d-43fd-af37-ed2fbd016b20">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 1" id="9f14d126-b550-4f1a-bb39-c5a2d640f9c8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1f3a2336-d8af-4fcc-a5e5-e834c9de3bb1" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="15efa522-b0f6-499f-9adf-dd1f09fb7588" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="8b137dc4-1e81-48ef-ba4b-a00bb125b1a9">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTR_OldData")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="a339ae10-f4c2-4071-9007-80bc432c27a4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7c2ead04-db2e-4ede-b16b-85c280699784" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7a60508b-5cbc-4994-8350-5538bcf33f7b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e3c9580b-5332-4fe1-8f7a-98def76fd3d3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="4ac67f75-88eb-49f2-a397-79b09a3f27a8">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctraDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ea7fbfb2-1301-4118-8a56-f51b60422322" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="check CTRA email" id="198d3c5d-f59d-4ec1-bc32-d9ebd01aece2" disabled="true">
        <con:description>Please check for ${#TestSuite#recipient} that the CTRA email is received
for ${#TestCase#switchId}</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR_OldData" id="229886da-8cd0-4f99-b257-f5961e2975b8">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")
def switchId = testRunner.testCase.getPropertyValue("switchId")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

def verification = false;
try {
	verification = funcHandle.sendCTROldData(seleniumHandle, javaHandle, browser, guiUrl, recipient, switchId, donor, dossierType, "COIN", "1389SS", "99999", "1", true, contractId, "123" , wishDate, "note", "0193281264", "0193281264");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}

assert verification == true;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="a51ebbf3-2606-4492-a81d-a6a5990e7472">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def guiwishdatestr = wishdate.format("yyyy-MM-dd")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdatestr)
String contractId = funcHandle.getRandomString(9, "1-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CTR-CTRA blocking 9" searchProperties="true" id="c5864493-ac44-4b3a-8ba5-cea4ca7cdf47" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting>
        <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting>
      </con:settings>
      <con:testStep type="groovy" name="Sel_CTR" id="d3fec726-96ea-4f77-9754-798d2da12c7f">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

try {
	def switchId = funcHandle.sendCTR(seleniumHandle, javaHandle, browser, guiUrl, recipient, donor, dossierType, "COIN", "1389SS", "99999", "1", true, contractId, "123" , wishDate, "note", "0193281264", "0193281264");

	testRunner.testCase.setPropertyValue("switchId",switchId);
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTR" id="609e6eb2-8858-47ed-9dd0-1b13810fd705">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where ctd_switchid = '${#TestCase#switchId}'</con:query>
          <con:assertion type="JDBC Status" id="e4415146-698e-4844-be0a-cf0f5018f1ae" name="JDBC Status"/>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_DOSSIER_STATUS]" id="ac17d9f6-9653-435c-bd0c-9af6917f2aa6">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_DOSSIER_STATUS[1]/text()</path>
              <content>Pending</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: assert CTD_PROCESS_STATUS]" id="ede8cc08-99ab-46ca-baf4-97e9f0895428">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/CTD_PROCESS_STATUS[1]/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="d0dec4d0-2676-462d-8fb9-b01040bbf491" name="Script: assert ion ctd_id switchid">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ctdid = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctdId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTR" id="8474fbab-a709-4c26-95bb-ad7df97bc7bb">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=1 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="f116fa6a-8895-4986-b1aa-446d9e201909" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="aca0adf0-394d-419d-b52e-ee7534d0fe5d" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="be995ba5-2fcf-486e-ac34-3f990a418d88" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="18bb420b-5bdd-418c-bf7c-36629b766118" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For send Poller" id="5e303c2d-b4c0-472d-8c2a-66b55712dede">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTR" id="8f725c13-a145-4fe4-8dbd-f757f9d6dac2">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_ST Table_NoSend")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR" id="043aae00-9f72-4ee6-bd24-f57998a65260">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request'
and sxm_sender = '${#TestSuite#recipient}'
and sxm_receiver = '${#TestSuite#donor}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contains" id="a1e1b0ed-fff7-4f8c-9eba-dee62ae7b198">
            <con:configuration>
              <token>contractterminationrequest</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="6c4dac59-737d-4969-bf30-85d9166e950e" name="Xpath: 1">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#donorSoapVersion}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="ac0e5b22-e677-48b9-afc6-8f2331fc9f07" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="bc6cefa8-7aa6-4de5-afef-8bcdc506f545" name="Xpath: assert DMId" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/SXM_DM_ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="e38526ad-5bf0-4755-8b82-90ec10384a13" name="Xpath: assert SXMID" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#stSXMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTR" id="0b7b1dea-aa9f-4974-8e76-fa2a9defa98b">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("recipientOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "CTRA-blocking")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table_NoSend" id="e2a948e7-4b4c-4667-87c9-3923efd5965b">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_sender='${#TestSuite#recipient}' and st_receiver='${#TestSuite#donor}' and st_send_received='SEND' and st_message like '%${#TestCase#switchId}%'</con:query>
          <con:assertion type="JDBC Status" id="cc45d6ef-2316-4378-b582-f321b46f2cc1" name="JDBC Status"/>
          <con:assertion type="Simple NotContains" id="9dc2a7bb-7c16-4bd1-980b-734fceb80acc" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTR" id="28c36036-b9c8-477d-a38a-39d92a48c92a">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctrDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request received on COMP for ${#TestCase#switchId}. Please respond on this request within 24 working day hours with a Request Answer*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>Request</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="f2d1c401-3a05-4fb3-a01b-96be86ae860e" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#donorId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="CTRA-blocking" id="93378b3a-ed7b-45ba-94a7-c7c408f90b09">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>CompWebserviceSoap11</con:interface>
          <con:operation>SendMessages</con:operation>
          <con:request name="CTRA-blocking" id="83d7229a-676a-4c41-81cc-3429f324fea1" wssPasswordType="PasswordText">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#SoapUrl}</con:endpoint>
            <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sch="http://coin.nl/ws/schema">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:SendMessagesRequest>
         <sch:Sender>${#TestSuite#donor}</sch:Sender>
         <sch:Messages>
            <sch:Message>
               <sch:Text><![CDATA[<?xml version="1.0"?>
<message xmlns="http://www.coin.nl/Overstappen_MESSAGES">
<header>
<receiver>
<!--Optional:-->
<networkoperator>${#TestSuite#recipient}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#recipient}</serviceprovider>
</receiver>
<sender>
<!--Optional:-->
<networkoperator>${#TestSuite#donor}</networkoperator>
<!--Optional:-->
<serviceprovider>${#TestSuite#donor}</serviceprovider>
</sender>
<!--Optional:-->
<messageid>${#TestSuite#recipient}-${#TestCase#contractId}-001</messageid>
<timestamp>${#TestSuite#TimestampNOW}</timestamp>
</header>
<body>
<contractterminationrequestanswer>
<${#TestSuite#donorSoapVersion}>
<dossierid>${#TestCase#switchId}</dossierid>
${#TestSuite#donorDossierType}
<blocking>Y</blocking>
<wishdatetime>${#TestCase#wishdate}</wishdatetime>
<blockingcode>9</blockingcode>
<note>Request Answer blocking ${#TestSuite#soapVersion} OK</note>
</${#TestSuite#donorSoapVersion}>
</contractterminationrequestanswer>
</body>
</message>]]]]>><![CDATA[</sch:Text>
            </sch:Message>
         </sch:Messages>
      </sch:SendMessagesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
            <con:assertion type="SOAP Response" id="0408c23d-c32c-480c-b33e-7f633dc17c95"/>
            <con:assertion type="XPath Match" id="8131d7ae-9a5a-491b-aefe-ae2214c93e1b" name="XPath Match">
              <con:configuration>
                <path>declare namespace ns2='http://coin.nl/ws/schema';
//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]/text()</path>
                <content>*</content>
                <allowWildcards>true</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="8fd52b42-3f32-4928-9b32-f521197d004e" name="Script Assertion">
              <con:configuration>
                <scriptText>import com.eviware.soapui.support.XmlHolder
//def groovyUtilsPro = new com.eviware.soapui.support.GroovyUtilsPro( context )

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns2"] = "http://coin.nl/ws/schema"
def transactionId = holder.getNodeValue( "//ns2:SendMessagesResponse[1]/ns2:TransactionId[1]" )
messageExchange.modelItem.testStep.testCase.setPropertyValue("ctraTransactionId",transactionId)</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>${#TestSuite#donorUserName}</con:username>
              <con:password>${#TestSuite#donorPassWord}</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_ST Table CTRA" id="76289934-dd4b-44d1-8372-44956788d517">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_transactions 
where st_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Verify TransactionId" id="0314e1fa-b1cb-4932-bba8-55dd87029a85">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_TRANSACTION_ID[1]</path>
              <content>${#TestCase#ctraTransactionId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify ST_SEND_RECEIVED" id="9db0e630-c611-4fc1-b0bc-fb6028a6a7c3">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/ST_SEND_RECEIVED[1]</path>
              <content>received</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains: Contain message Type" id="85caea84-7bde-4674-9d00-009229cb7411">
            <con:configuration>
              <token>contractterminationrequestanswer</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" name="Script: assert node [ID]" id="919aa515-934c-4b10-bd9d-dcd08c81b41c">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/ID[1]", "ctraId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="0dee71a3-a935-4b06-b972-c813e5f4ada7" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="87a46e1b-6abd-40e9-93d7-879cd5d80622" name="Xpath: assert UserIP" disabled="true">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_IP/text()</path>
              <content>${#Project#UserIP}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="fe92eb90-8575-4ba4-8bb8-62355e7b99e1" name="Xpath: assert UserName">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_USER_NAME/text()</path>
              <content>${#TestSuite#donorUserName}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="62a39dc6-77ee-41a5-89bb-452f2cf60f3b" name="Xpath: assert TechSender">
            <con:configuration>
              <path>/Results/ResultSet/Row/ST_TECHNICAL_SENDER/text()</path>
              <content>${#TestSuite#donor}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Wait For Poller 2" id="8e371ec9-8bd0-4044-a15e-f3825b60aeb9">
        <con:settings/>
        <con:config>
          <delay>${#TestSuite#PollTime}</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_RSXM Table_CTRA" id="ba57393b-2362-4958-9296-b6c196ba7af4">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.raw_soap_xml_messages where rsxm_st_id = '${#TestCase#ctraId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: XPath Match" id="14d90270-6f91-4150-993a-d24f2adbd507">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/RSXM_STATUS[1]</path>
              <content>Done</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="4d48a085-3f43-46c6-8810-e8e94ec93ff3" name="JDBC Status"/>
          <con:assertion type="GroovyScriptAssertion" id="b58743e7-0a55-4986-8e86-afa8533ab867" name="Script: SaveRSXM_DM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder 
def holder = new XmlHolder( messageExchange.responseContentAsXml ) 
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/RSXM_DM_ID[1]", "ctrDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="e4d825be-7227-4f24-8194-1cc92ba0e034" name="Script: SaveRSXM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraRSXMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_CTD Table_CTRA" id="ea6b020d-eee3-4f0d-8076-2717ad1d0de2">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.contract_termination_dossier 
where id='${#TestCase#ctdId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [ST_TRANSACTION_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//CTD_SWITCHID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_dossier_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_DOSSIER_STATUS</path>
              <content>Blocked</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="Xpath: Verify CTD_process_status" id="42b26293-88b7-42bf-b393-0a828138e4b6">
            <con:configuration>
              <path>//CTD_PROCESS_STATUS</path>
              <content>Request Answer Blocking</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>true</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="f1634f5b-7b26-4777-9ee7-2012c2678c07" name="Script: assert ion">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def ModifiedDate = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results[1]/ResultSet[1]/Row[1]/MODIFIEDDATE[1]", "ModifiedDate");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="be12c6b7-e826-4a58-b4c4-a5ec955b7f46" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_MSL Table_CTRA" id="0f0072a2-b1b6-43d8-8360-a20b18653753">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>Select * from overstappen.message_logging where 
msl_soap_transaction_id = '${#TestCase#ctraTransactionId}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: assert MSL_CLC_ID]" id="e99eef8e-047f-4dff-930b-7b92f2348249">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/MSL_CLC_ID[1]/text()</path>
              <content>57</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="e095441a-3cf8-4288-8e40-4300718feece" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="de7dd802-8f79-48c8-911b-6b11ee6d662f" name="Xpath: assert SoapTransactionId">
            <con:configuration>
              <path>/Results/ResultSet/Row/MSL_ST_ID/text()</path>
              <content>${#TestCase#ctraId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_DM Table_CTRA" id="e5a228f3-0bcd-45fe-b87b-5f75e4525061">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select DM.*, IT.IT_INTERFACE_TYPE 
from overstappen.dossier_messages DM left join overstappen.interface_type IT 
on DM.dm_it_id = IT.id 
where dm_ctd_id = ${#TestCase#ctdId} 
and dm_mst_id=3 
order by createddate desc</con:query>
          <con:assertion type="JDBC Status" id="da663a2e-7feb-471a-9c29-84be65f04692" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="212ef293-cfa9-4a8b-b970-711abd7fd3ab" name="Xpath: assert DMId">
            <con:configuration>
              <path>/Results/ResultSet/Row/ID/text()</path>
              <content>${#TestCase#ctrDMId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="91fa86ed-2334-4f8d-8896-26ab4afdd35b" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="GroovyScriptAssertion" id="70c8afac-caf0-471a-a14f-db2274d73d15" name="Script: SaveDM_ID">
            <con:configuration>
              <scriptText>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import com.eviware.soapui.support.XmlHolder
def holder = new XmlHolder( messageExchange.responseContentAsXml )
def Id = funcHandle.getValueAndSaveAsTestCaseProperty(holder, messageExchange, "//Results/ResultSet/Row/ID", "ctraDMId");</scriptText>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType_CTRA" id="27c516f2-9ff2-42fd-ac7c-bc5243837055">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'EMAIL') {
    	  testRunner.gotoStepByName( "JDBC_SXM Table_NoRecord_CTRA")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_CTR 1" id="e7a6ba01-de9b-4533-84c6-e7df6d19b2a5">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'</con:query>
          <con:assertion type="XPath Match" name="Xpath: Check for existance of [SXM_ID]" id="bf10f636-c029-4dda-9a44-2917d2188cb9">
            <con:configuration>
              <path>//ID</path>
              <content>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="05ae5fdf-78e9-4f49-bb59-edefc9ff0d94" name="Xpath: XPath Match">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="1f3a2336-d8af-4fcc-a5e5-e834c9de3bb1" name="Xpath: soap version">
            <con:configuration>
              <path>//Results[1]/ResultSet[1]/Row[1]/SXM_XML_MESSAGE[1]</path>
              <content>*&lt;/${#TestSuite#recSoap}>*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="15efa522-b0f6-499f-9adf-dd1f09fb7588" name="JDBC Status"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy_CheckOutGoingMsgType1_CTRA" id="13cd6c7c-aa4b-47e9-9498-4ad7c809bdff">
        <con:settings/>
        <con:config>
          <script>def outtype = testRunner.testCase.testSuite.getPropertyValue("donorOutMsg")

if (outtype == 'SOAP') {
    	  testRunner.gotoStepByName( "Sel_CTR_OldData")
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_SXM Table_NoRecord_CTRA" id="86dfc966-d62f-4fad-a449-9a3ca1672a2d">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.soap_xml_messages where
sxm_xml_message like '%${#TestCase#switchId}%'
and sxm_xml_message_type = 'Request answer'
and sxm_sender = '${#TestSuite#donor}'
and sxm_receiver = '${#TestSuite#recipient}'
--and sxm_retry_count &lt;=1</con:query>
          <con:assertion type="Simple NotContains" id="7c2ead04-db2e-4ede-b16b-85c280699784" name="NotContains: Not Contains">
            <con:configuration>
              <token>&lt;Row rowNumber="1"></token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="JDBC Status" id="7a60508b-5cbc-4994-8350-5538bcf33f7b" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="e3c9580b-5332-4fe1-8f7a-98def76fd3d3" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>0</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_EL Table_CTRA" id="b633e795-faba-4c12-8b32-af6ad2770b27">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>JDBC</con:dbConnectionName>
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://${#Project#DBHostname}:${#Project#DBPort}/${#Project#DBDatabase}?user=${#Project#DBUser}&amp;password=PASS_VALUE</con:connectionString>
          <con:password>${#Project#DBPassword}</con:password>
          <con:query>select * from overstappen.email_logging el join overstappen.email_logging_detail eld on el.el_detail_id = eld.id where 
el_dm_id = '${#TestCase#ctraDMId}'</con:query>
          <con:assertion type="JDBC Status" id="5b056277-e6ec-404a-99fc-8472b329b9f9" name="JDBC Status"/>
          <con:assertion type="XPath Match" id="08c804f2-1638-4310-89c5-8ddef67cc36e" name="Xpath: assert RowCount">
            <con:configuration>
              <path>count(/Results/ResultSet/Row)</path>
              <content>1</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_Body">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_BODY/text()</path>
              <content>New Request Answer received on COMP for ${#TestCase#switchId}*</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_SUBJECT">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_SUBJECT/text()</path>
              <content>*New Request Answer received on COMP for ${#TestCase#switchId}</content>
              <allowWildcards>true</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="b10e84a2-2551-4999-aaad-97a2edfc5032" name="Xpath: assert EL_REASON">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_REASON/text()</path>
              <content>RequestAnswer</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" id="ea7fbfb2-1301-4118-8a56-f51b60422322" name="Xpath: assert Receiver">
            <con:configuration>
              <path>/Results/ResultSet/Row/EL_RECEIVER_ID/text()</path>
              <content>${#TestSuite#recipientId}</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
              <ignoreComments>false</ignoreComments>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="manualTestStep" name="check CTRA email" id="24399059-c356-4ab7-a43c-6e71b3c872d9" disabled="true">
        <con:description>Please check for ${#TestSuite#recipient} that the CTRA email is received
for ${#TestCase#switchId}</con:description>
        <con:settings/>
        <con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:testStep>
      <con:testStep type="groovy" name="Sel_CTR_OldData" id="3b610656-d1a6-45cb-8fb5-65cfb60d05a7">
        <con:settings/>
        <con:config>
          <script>import nl.coin.Selenium.*;

def seleniumHandle = new SeleniumActions();
def javaHandle = new JavaActions();
def funcHandle = new ReadymadeFunctions();

def guiUrl = testRunner.testCase.testSuite.project.getPropertyValue("GUIUrl")
def browser = testRunner.testCase.testSuite.getPropertyValue("browser")
def recipient = testRunner.testCase.testSuite.getPropertyValue("recipient")
def donor = testRunner.testCase.testSuite.getPropertyValue("donor")
def contractId = testRunner.testCase.getPropertyValue("contractId")
def dossierType = testRunner.testCase.testSuite.getPropertyValue("dossierType")
def wishDate = testRunner.testCase.getPropertyValue("wishDate")
def switchId = testRunner.testCase.getPropertyValue("switchId")

def projectName = testRunner.testCase.testSuite.project.name
def testSuiteName = testRunner.testCase.testSuite.name
def testCaseName = testRunner.testCase.name
def testStepName = context.getCurrentStep().getLabel()

log.info seleniumHandle.setScreenShotName(projectName+"_"+testSuiteName+"_"+testCaseName+"_"+testStepName)

def verification = false;
try {
	verification = funcHandle.sendCTROldData(seleniumHandle, javaHandle, browser, guiUrl, recipient, switchId, donor, dossierType, "COIN", "1389SS", "99999", "1", true, contractId, "123" , wishDate, "note", "0193281264", "0193281264");
} catch (Exception e) {
	testRunner.fail(e.getClass().getSimpleName());
}

assert verification == true;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay0" id="9c438cf1-8646-4638-b792-a55f6b831bae">
        <con:settings/>
        <con:config>
          <delay>1</delay>
        </con:config>
      </con:testStep>
      <con:setupScript>import nl.coin.Selenium.*;
def funcHandle = new ReadymadeFunctions();
import groovy.time.TimeCategory
def today = new Date() 
def now = String.format('%tFT%&lt;tT', new Date() )
def wishdate = today 
use(TimeCategory) {
	   wishdate = wishdate + 1.day
}
def wishdatestr = wishdate.format("yyyy-MM-dd'T'HH:mm:ss")
def guiwishdatestr = wishdate.format("yyyy-MM-dd")
testRunner.testCase.setPropertyValue("Now",now)
testRunner.testCase.setPropertyValue("wishDate",wishdatestr)
testRunner.testCase.setPropertyValue("guiWishDate",guiwishdatestr)
String contractId = funcHandle.getRandomString(9, "1-");
testRunner.testCase.setPropertyValue("contractId",contractId)</con:setupScript>
      <con:tearDownScript/>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>122d3297-f22d-449f-ac52-c46f1bfb714e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:properties>
      <con:property>
        <con:name>PollTime</con:name>
        <con:value>2000</con:value>
      </con:property>
      <con:property>
        <con:name>TimestampNOW</con:name>
        <con:value>${=String.format('%tFT%&lt;tT', new Date())}</con:value>
      </con:property>
      <con:property>
        <con:name>lineNumber</con:name>
        <con:value>0</con:value>
      </con:property>
      <con:property>
        <con:name>maxDays</con:name>
        <con:value>90</con:value>
      </con:property>
      <con:property>
        <con:name>maxBusinessDays</con:name>
        <con:value>120</con:value>
      </con:property>
      <con:property>
        <con:name>testdatafile</con:name>
        <con:value>testrecipientgui.csv</con:value>
      </con:property>
      <con:property>
        <con:name>browser</con:name>
        <con:value>firefox</con:value>
      </con:property>
    </con:properties>
    <con:setupScript>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
import org.apache.commons.lang.RandomStringUtils
import groovy.time.TimeCategory
import nl.coin.Selenium.*;
def directory = groovyUtils.projectPath + "/"
System.setProperty("projectfiledir", directory)
def seleniumHandle = new SeleniumActions();
def funcHandle = new ReadymadeFunctions();
def Line = funcHandle.getTestDataAndIncreaseLinenumber(testSuite, directory);
//Split the first line into a string array and assign the array elements to various test case properties
String[] propData = Line.split(";")
funcHandle.setRecipientAndDonorSoapCredentials(seleniumHandle, testSuite, directory, propData[0], propData[1]);
testSuite.setPropertyValue("soapVersion",propData[2])
testSuite.setPropertyValue("dossierType",propData[3])
testSuite.setPropertyValue("compensationOK",propData[4])
testSuite.setPropertyValue("recSoap",propData[5])
import groovy.sql.Sql;
def  con = funcHandle.createDBConObject(testSuite);
def recepientDetails = funcHandle.setProperty4mDB(testSuite, con, "select spr_code, it_interface_type,business_gui_only from overstappen.service_provider inner join overstappen.interface_type on service_provider.spr_request_it_id = interface_type.id where service_provider.spr_code = '"+ propData[0]+"'", ["business_gui_only", "it_interface_type"] as String[], ["recipientbgo", "recipientif"] as String[]);
testSuite.setPropertyValue( "recBusGuiOnly" , recepientDetails[0])
def donorDetails = funcHandle.setProperty4mDB(testSuite, con, "select spr_code, it_interface_type,business_gui_only from overstappen.service_provider inner join overstappen.interface_type on service_provider.spr_request_it_id = interface_type.id where service_provider.spr_code = '"+ propData[1]+"'", ["business_gui_only", "it_interface_type"] as String[], ["donorbgo", "donorif"] as String[]);
testSuite.setPropertyValue( "businessGuiOnly" , donorDetails[0])
def donorsoap = funcHandle.getDonorSoapVersionS2SAndSetProperty(testSuite, donorDetails[1], propData[3], "donorSoapVersion");
def donorbusiness = funcHandle.getDonorDossierTypeS2SAndSetProperty(testSuite, donorDetails[1], propData[3], "donorDossierType");
def donorMessage = funcHandle.getMessageTypeAndSetProperty(testSuite, donorDetails[1], propData[3], donorDetails[0], "donorMessage");
def recipientMessage = funcHandle.getMessageTypeAndSetProperty(testSuite, recepientDetails[1], propData[3], recepientDetails[0], "recipientMessage");
funcHandle.setProperty4mDB(testSuite, con, "select id from overstappen.service_provider where spr_code='"+ propData[0]+"'", "id", "recipientId")
funcHandle.setProperty4mDB(testSuite, con, "select id from overstappen.service_provider where spr_code='"+ propData[1]+"'", "id", "donorId");
funcHandle.getOutgoingMsgTypeAndSetProperty(testSuite, propData[3], recepientDetails[0], recepientDetails[1], "donorOutMsg");
funcHandle.getOutgoingMsgTypeAndSetProperty(testSuite, propData[3], donorDetails[0], donorDetails[1], "recipientOutMsg");
con.close()</con:setupScript>
    <con:tearDownScript/>
    <con:reportParameters/>
  </con:testSuite>
  <con:properties>
    <con:property>
      <con:name>directory</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>DBHostname</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>DBPort</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>DBUser</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>DBPassword</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>DBDatabase</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>GUIUrl</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>UserIP</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>SoapUrl</con:name>
      <con:value/>
    </con:property>
  </con:properties>
  <con:wssContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:sensitiveInformation/>
</con:soapui-project>
